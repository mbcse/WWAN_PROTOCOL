{"id":"fdede709256cd2e3f1ae6141f1eb3ee5","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/TestContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract TestContract {\n    // State variables\n    uint public param1;\n    string public param2;\n\n    // Constructor with two parameters\n    constructor(uint _param1, string memory _param2) {\n        param1 = _param1;\n        param2 = _param2;\n    }\n\n    // Function to update parameters (for demonstration)\n    function updateParams(uint _newParam1, string memory _newParam2) public {\n        param1 = _newParam1;\n        param2 = _newParam2;\n    }\n}"},"contracts/TestUpgradableContract.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\ncontract TestUpgradableContract is Initializable, UUPSUpgradeable {\n    // State variables\n    uint public param1;\n    string public param2;\n    address owner;\n    string public param3;\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n    function initialize(uint _param1, string memory _param2) public initializer {\n        param1 = _param1;\n        param2 = _param2;\n        __UUPSUpgradeable_init();\n        owner = msg.sender;\n    }\n\n    // Function to update parameters (for demonstration)\n    function updateParams(uint _newParam1, string memory _newParam2) public {\n        param1 = _newParam1;\n        param2 = _newParam2;\n    }\n\n    modifier onlyUpgrader() {\n        require(\n            owner == msg.sender,\n            \"Unauthorized Access\");\n        _;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyUpgrader\n        override\n    {}\n}"},"contracts/WWANProtocol.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\n\ncontract WWANProtocol is Initializable, UUPSUpgradeable, ReentrancyGuardUpgradeable {\n    // State variables\n    address public owner;\n    IERC20Upgradeable public paymentToken;\n    \n    struct Agent {\n        address agentAddress;\n        string metadata;     // IPFS hash containing agent details\n        bool isActive;\n        uint256 reputation;\n        mapping(bytes32 => bool) supportedTaskTypes;\n    }\n\n    struct Task {\n        address creator;\n        address assignedAgent;\n        bytes32 taskType;\n        string taskData;     // IPFS hash containing task details\n        uint256 payment;\n        TaskStatus status;\n        bytes signature;     // EigenLayer AVS signature\n        address[] collaboratingAgents; // For multi-agent tasks\n    }\n\n    struct UserAgentRegistry {\n        address[] activeAgents;\n        mapping(address => bool) isRegistered;\n        mapping(address => uint256) paymentAllowance;\n    }\n\n    enum TaskStatus {\n        Created,\n        Assigned,\n        InProgress,\n        Completed,\n        Disputed\n    }\n\n    mapping(address => Agent) public agents;\n    mapping(uint256 => Task) public tasks;\n    mapping(address => UserAgentRegistry) userAgents;\n    uint256 public taskCounter;\n\n    // Events\n    event AgentRegistered(address indexed agentAddress, string metadata);\n    event TaskCreated(uint256 indexed taskId, address indexed creator, bytes32 taskType);\n    event TaskAssigned(uint256 indexed taskId, address indexed agent);\n    event TaskCompleted(uint256 indexed taskId, bytes signature);\n    event AgentRegisteredForUser(address indexed user, address indexed agent, uint256 allowance);\n    event CollaborationRequested(uint256 indexed taskId, address indexed requestingAgent, address indexed targetAgent);\n    \n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address _paymentToken) public initializer {\n        __UUPSUpgradeable_init();\n        __ReentrancyGuard_init();\n        owner = msg.sender;\n        paymentToken = IERC20Upgradeable(_paymentToken);\n    }\n\n    // Agent Registration\n    function registerAgent(string memory _metadata, bytes32[] memory _supportedTaskTypes) \n        public \n    {\n        require(!agents[msg.sender].isActive, \"Agent already registered\");\n        \n        Agent storage newAgent = agents[msg.sender];\n        newAgent.agentAddress = msg.sender;\n        newAgent.metadata = _metadata;\n        newAgent.isActive = true;\n        newAgent.reputation = 100; // Base reputation\n\n        for(uint i = 0; i < _supportedTaskTypes.length; i++) {\n            newAgent.supportedTaskTypes[_supportedTaskTypes[i]] = true;\n        }\n\n        emit AgentRegistered(msg.sender, _metadata);\n    }\n\n    // Register agent for a user\n    function registerAgentForUser(address _agentAddress, uint256 _paymentAllowance) public {\n        require(agents[_agentAddress].isActive, \"Agent not registered in system\");\n        require(!userAgents[msg.sender].isRegistered[_agentAddress], \"Agent already registered for user\");\n        \n        // Transfer payment allowance to contract\n        if (_paymentAllowance > 0) {\n            require(\n                paymentToken.transferFrom(msg.sender, address(this), _paymentAllowance),\n                \"Payment allowance transfer failed\"\n            );\n        }\n        \n        UserAgentRegistry storage registry = userAgents[msg.sender];\n        registry.activeAgents.push(_agentAddress);\n        registry.isRegistered[_agentAddress] = true;\n        registry.paymentAllowance[_agentAddress] = _paymentAllowance;\n        \n        emit AgentRegisteredForUser(msg.sender, _agentAddress, _paymentAllowance);\n    }\n\n    // Register agent for another user\n    function registerAgentForOtherUser(address _user, address _agentAddress, uint256 _paymentAllowance) public {\n        require(agents[_agentAddress].isActive, \"Agent not registered in system\");\n        require(!userAgents[_user].isRegistered[_agentAddress], \"Agent already registered for user\");\n        \n        // Transfer payment allowance to contract\n        if (_paymentAllowance > 0) {\n            require(\n                paymentToken.transferFrom(_user, address(this), _paymentAllowance),\n                \"Payment allowance transfer failed\"\n            );\n        }\n        \n        UserAgentRegistry storage registry = userAgents[_user];\n        registry.activeAgents.push(_agentAddress);\n        registry.isRegistered[_agentAddress] = true;\n        registry.paymentAllowance[_agentAddress] = _paymentAllowance;\n        \n        emit AgentRegisteredForUser(_user, _agentAddress, _paymentAllowance);\n    }\n\n    // Task Creation\n    function createTask(\n        bytes32 _taskType,\n        string memory _taskData,\n        uint256 _payment,\n        address[] memory _collaboratingAgents\n    ) public nonReentrant {\n        require(_payment > 0, \"Payment must be positive\");\n        \n        // Transfer payment to contract\n        require(\n            paymentToken.transferFrom(msg.sender, address(this), _payment),\n            \"Payment transfer failed\"\n        );\n\n        uint256 taskId = taskCounter++;\n        Task storage newTask = tasks[taskId];\n        newTask.creator = msg.sender;\n        newTask.taskType = _taskType;\n        newTask.taskData = _taskData;\n        newTask.payment = _payment;\n        newTask.status = TaskStatus.Created;\n        \n        if (_collaboratingAgents.length > 0) {\n            newTask.collaboratingAgents = _collaboratingAgents;\n        }\n\n        emit TaskCreated(taskId, msg.sender, _taskType);\n    }\n\n    // Task Assignment\n    function assignTask(uint256 _taskId) public {\n        require(agents[msg.sender].isActive, \"Agent not registered\");\n        Task storage task = tasks[_taskId];\n        require(task.status == TaskStatus.Created, \"Task not available\");\n        require(agents[msg.sender].supportedTaskTypes[task.taskType], \"Task type not supported\");\n\n        task.assignedAgent = msg.sender;\n        task.status = TaskStatus.Assigned;\n\n        emit TaskAssigned(_taskId, msg.sender);\n    }\n\n    // Request collaboration with another agent\n    function requestCollaboration(uint256 _taskId, address _collaboratorAgent) public {\n        Task storage task = tasks[_taskId];\n        require(task.assignedAgent == msg.sender, \"Not assigned agent\");\n        require(agents[_collaboratorAgent].isActive, \"Collaborator not registered\");\n        \n        bool isAlreadyCollaborating = false;\n        for (uint i = 0; i < task.collaboratingAgents.length; i++) {\n            if (task.collaboratingAgents[i] == _collaboratorAgent) {\n                isAlreadyCollaborating = true;\n                break;\n            }\n        }\n        \n        if (!isAlreadyCollaborating) {\n            task.collaboratingAgents.push(_collaboratorAgent);\n        }\n        \n        emit CollaborationRequested(_taskId, msg.sender, _collaboratorAgent);\n    }\n\n    // Task Completion with EigenLayer AVS signature\n    function completeTask(uint256 _taskId, bytes memory _signature) public {\n        Task storage task = tasks[_taskId];\n        require(task.assignedAgent == msg.sender, \"Not assigned agent\");\n        require(task.status == TaskStatus.Assigned || task.status == TaskStatus.InProgress, \"Invalid task status\");\n\n        // Here you would verify the EigenLayer AVS signature\n        // Implementation depends on EigenLayer integration\n\n        task.signature = _signature;\n        task.status = TaskStatus.Completed;\n\n        // Transfer payment to agent\n        require(\n            paymentToken.transfer(msg.sender, task.payment),\n            \"Payment transfer failed\"\n        );\n\n        emit TaskCompleted(_taskId, _signature);\n    }\n\n    // Execute task via registered agent\n    function executeAgentTask(\n        address _agentAddress, \n        bytes32 _taskType, \n        string memory _taskData, \n        uint256 _payment\n    ) public nonReentrant {\n        require(userAgents[msg.sender].isRegistered[_agentAddress], \"Agent not registered for user\");\n        require(agents[_agentAddress].supportedTaskTypes[_taskType], \"Task type not supported by agent\");\n        \n        UserAgentRegistry storage registry = userAgents[msg.sender];\n        \n        // Check if we need to use allowance or direct payment\n        if (_payment > 0) {\n            // Direct payment\n            require(\n                paymentToken.transferFrom(msg.sender, address(this), _payment),\n                \"Payment transfer failed\"\n            );\n        } else if (registry.paymentAllowance[_agentAddress] > 0) {\n            // Use from allowance\n            _payment = registry.paymentAllowance[_agentAddress] > 100 ? 100 : registry.paymentAllowance[_agentAddress];\n            registry.paymentAllowance[_agentAddress] -= _payment;\n        } else {\n            revert(\"No payment provided and no allowance available\");\n        }\n        \n        uint256 taskId = taskCounter++;\n        Task storage newTask = tasks[taskId];\n        newTask.creator = msg.sender;\n        newTask.assignedAgent = _agentAddress;\n        newTask.taskType = _taskType;\n        newTask.taskData = _taskData;\n        newTask.payment = _payment;\n        newTask.status = TaskStatus.Assigned;\n\n        emit TaskCreated(taskId, msg.sender, _taskType);\n        emit TaskAssigned(taskId, _agentAddress);\n    }\n\n    modifier onlyUpgrader() {\n        require(owner == msg.sender, \"Unauthorized Access\");\n        _;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyUpgrader\n        override\n    {}\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout","devdoc","userdoc","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","exportedSymbols":{"IERC1967Upgradeable":[20]},"id":21,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"132:133:0","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"},"fullyImplemented":true,"id":20,"linearizedBaseContracts":[20],"name":"IERC1967Upgradeable","nameLocation":"276:19:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"302:68:0","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":7,"name":"Upgraded","nameLocation":"381:8:0","nodeType":"EventDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"406:14:0","nodeType":"VariableDeclaration","scope":7,"src":"390:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"390:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"389:32:0"},"src":"375:47:0"},{"anonymous":false,"documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"428:67:0","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":14,"name":"AdminChanged","nameLocation":"506:12:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"527:13:0","nodeType":"VariableDeclaration","scope":14,"src":"519:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"550:8:0","nodeType":"VariableDeclaration","scope":14,"src":"542:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"542:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"518:41:0"},"src":"500:60:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"566:59:0","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":19,"name":"BeaconUpgraded","nameLocation":"636:14:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"667:6:0","nodeType":"VariableDeclaration","scope":19,"src":"651:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"651:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"650:24:0"},"src":"630:45:0"}],"scope":21,"src":"266:411:0","usedErrors":[]}],"src":"107:571:0"},"id":0},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","exportedSymbols":{"IERC1822ProxiableUpgradeable":[30]},"id":31,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":22,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822ProxiableUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"138:203:1","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":30,"linearizedBaseContracts":[30],"name":"IERC1822ProxiableUpgradeable","nameLocation":"352:28:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"387:438:1","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":29,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"839:13:1","nodeType":"FunctionDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"852:2:1"},"returnParameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":29,"src":"878:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":26,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:9:1"},"scope":30,"src":"830:57:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":31,"src":"342:547:1","usedErrors":[]}],"src":"113:777:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ERC1967UpgradeUpgradeable":[354],"IBeaconUpgradeable":[364],"IERC1822ProxiableUpgradeable":[30],"IERC1967Upgradeable":[20],"Initializable":[533],"StorageSlotUpgradeable":[1271]},"id":355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":32,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"116:23:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","file":"../beacon/IBeaconUpgradeable.sol","id":33,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":365,"src":"141:42:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol","file":"../../interfaces/IERC1967Upgradeable.sol","id":34,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":21,"src":"184:50:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":35,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":31,"src":"235:56:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":36,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":1162,"src":"292:44:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","file":"../../utils/StorageSlotUpgradeable.sol","id":37,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":1272,"src":"337:48:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../utils/Initializable.sol","id":38,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":355,"sourceUnit":534,"src":"386:36:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":40,"name":"Initializable","nameLocations":["656:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"656:13:2"},"id":41,"nodeType":"InheritanceSpecifier","src":"656:13:2"},{"baseName":{"id":42,"name":"IERC1967Upgradeable","nameLocations":["671:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":20,"src":"671:19:2"},"id":43,"nodeType":"InheritanceSpecifier","src":"671:19:2"}],"canonicalName":"ERC1967UpgradeUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"424:184:2","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"},"fullyImplemented":true,"id":354,"linearizedBaseContracts":[354,20,533],"name":"ERC1967UpgradeUpgradeable","nameLocation":"627:25:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":48,"nodeType":"Block","src":"756:7:2","statements":[]},"id":49,"implemented":true,"kind":"function","modifiers":[{"id":46,"kind":"modifierInvocation","modifierName":{"id":45,"name":"onlyInitializing","nameLocations":["739:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"739:16:2"},"nodeType":"ModifierInvocation","src":"739:16:2"}],"name":"__ERC1967Upgrade_init","nameLocation":"706:21:2","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[],"src":"727:2:2"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"756:0:2"},"scope":354,"src":"697:66:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":54,"nodeType":"Block","src":"838:7:2","statements":[]},"id":55,"implemented":true,"kind":"function","modifiers":[{"id":52,"kind":"modifierInvocation","modifierName":{"id":51,"name":"onlyInitializing","nameLocations":["821:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"821:16:2"},"nodeType":"ModifierInvocation","src":"821:16:2"}],"name":"__ERC1967Upgrade_init_unchained","nameLocation":"778:31:2","nodeType":"FunctionDefinition","parameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"809:2:2"},"returnParameters":{"id":53,"nodeType":"ParameterList","parameters":[],"src":"838:0:2"},"scope":354,"src":"769:76:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"id":58,"mutability":"constant","name":"_ROLLBACK_SLOT","nameLocation":"954:14:2","nodeType":"VariableDeclaration","scope":354,"src":"929:108:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":56,"name":"bytes32","nodeType":"ElementaryTypeName","src":"929:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433","id":57,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"971:66:2","typeDescriptions":{"typeIdentifier":"t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1","typeString":"int_const 3304...(69 digits omitted)...9347"},"value":"0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"},"visibility":"private"},{"constant":true,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1044:214:2","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."},"id":62,"mutability":"constant","name":"_IMPLEMENTATION_SLOT","nameLocation":"1289:20:2","nodeType":"VariableDeclaration","scope":354,"src":"1263:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1312:66:2","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"body":{"id":74,"nodeType":"Block","src":"1519:89:2","statements":[{"expression":{"expression":{"arguments":[{"id":70,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1574:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":68,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1536:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"1536:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":72,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1596:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"1536:65:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":67,"id":73,"nodeType":"Return","src":"1529:72:2"}]},"documentation":{"id":63,"nodeType":"StructuredDocumentation","src":"1385:67:2","text":" @dev Returns the current implementation address."},"id":75,"implemented":true,"kind":"function","modifiers":[],"name":"_getImplementation","nameLocation":"1466:18:2","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[],"src":"1484:2:2"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":75,"src":"1510:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:9:2"},"scope":354,"src":"1457:151:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":98,"nodeType":"Block","src":"1762:218:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":84,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"1810:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":82,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"1780:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1799:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":849,"src":"1780:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1780:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":86,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1830:47:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""},"value":"ERC1967: new implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65","typeString":"literal_string \"ERC1967: new implementation is not a contract\""}],"id":81,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1772:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":87,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:106:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":88,"nodeType":"ExpressionStatement","src":"1772:106:2"},{"expression":{"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":92,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"1926:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":89,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1888:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1911:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"1888:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:59:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":94,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1948:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"1888:65:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":95,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"1956:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1888:85:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":97,"nodeType":"ExpressionStatement","src":"1888:85:2"}]},"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"1614:80:2","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":99,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1708:18:2","nodeType":"FunctionDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":78,"mutability":"mutable","name":"newImplementation","nameLocation":"1735:17:2","nodeType":"VariableDeclaration","scope":99,"src":"1727:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"1727:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1726:27:2"},"returnParameters":{"id":80,"nodeType":"ParameterList","parameters":[],"src":"1762:0:2"},"scope":354,"src":"1699:281:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":113,"nodeType":"Block","src":"2142:96:2","statements":[{"expression":{"arguments":[{"id":106,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2171:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"2152:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2152:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"ExpressionStatement","src":"2152:37:2"},{"eventCall":{"arguments":[{"id":110,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2213:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":109,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2204:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"EmitStatement","src":"2199:32:2"}]},"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"1986:95:2","text":" @dev Perform implementation upgrade\n Emits an {Upgraded} event."},"id":114,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeTo","nameLocation":"2095:10:2","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"newImplementation","nameLocation":"2114:17:2","nodeType":"VariableDeclaration","scope":114,"src":"2106:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"2106:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2105:27:2"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"2142:0:2"},"scope":354,"src":"2086:152:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":143,"nodeType":"Block","src":"2470:178:2","statements":[{"expression":{"arguments":[{"id":125,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2491:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"_upgradeTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":114,"src":"2480:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"2480:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":128,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2523:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:2","memberName":"length","nodeType":"MemberAccess","src":"2523:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2523:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":132,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2542:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2523:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":142,"nodeType":"IfStatement","src":"2519:123:2","trueBody":{"id":141,"nodeType":"Block","src":"2553:89:2","statements":[{"expression":{"arguments":[{"id":137,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2607:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":138,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2626:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":134,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"2567:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2586:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1048,"src":"2567:39:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":140,"nodeType":"ExpressionStatement","src":"2567:64:2"}]}}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"2244:123:2","text":" @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."},"id":144,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCall","nameLocation":"2381:17:2","nodeType":"FunctionDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"newImplementation","nameLocation":"2407:17:2","nodeType":"VariableDeclaration","scope":144,"src":"2399:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"2399:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"data","nameLocation":"2439:4:2","nodeType":"VariableDeclaration","scope":144,"src":"2426:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":118,"name":"bytes","nodeType":"ElementaryTypeName","src":"2426:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"forceCall","nameLocation":"2450:9:2","nodeType":"VariableDeclaration","scope":144,"src":"2445:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":120,"name":"bool","nodeType":"ElementaryTypeName","src":"2445:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2398:62:2"},"returnParameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"2470:0:2"},"scope":354,"src":"2372:276:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":196,"nodeType":"Block","src":"2922:842:2","statements":[{"condition":{"expression":{"arguments":[{"id":156,"name":"_ROLLBACK_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3274:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":154,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3236:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:14:2","memberName":"getBooleanSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"3236:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1170_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1170_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot storage pointer"}},"id":158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3290:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1169,"src":"3236:59:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":194,"nodeType":"Block","src":"3365:393:2","statements":[{"clauses":[{"block":{"id":179,"nodeType":"Block","src":"3470:115:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":173,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"3496:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":174,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"3504:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3496:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944","id":176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3526:43:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""},"value":"ERC1967Upgrade: unsupported proxiableUUID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c","typeString":"literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""}],"id":172,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3488:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3488:82:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"3488:82:2"}]},"errorName":"","id":180,"nodeType":"TryCatchClause","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"slot","nameLocation":"3464:4:2","nodeType":"VariableDeclaration","scope":180,"src":"3456:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3456:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3455:14:2"},"src":"3447:138:2"},{"block":{"id":185,"nodeType":"Block","src":"3592:89:2","statements":[{"expression":{"arguments":[{"hexValue":"45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:48:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""},"value":"ERC1967Upgrade: new implementation is not UUPS"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24","typeString":"literal_string \"ERC1967Upgrade: new implementation is not UUPS\""}],"id":181,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3610:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"3610:56:2"}]},"errorName":"","id":186,"nodeType":"TryCatchClause","src":"3586:95:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":165,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3412:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":164,"name":"IERC1822ProxiableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3383:28:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822ProxiableUpgradeable_$30_$","typeString":"type(contract IERC1822ProxiableUpgradeable)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822ProxiableUpgradeable_$30","typeString":"contract IERC1822ProxiableUpgradeable"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3431:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":29,"src":"3383:61:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3383:63:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":187,"nodeType":"TryStatement","src":"3379:302:2"},{"expression":{"arguments":[{"id":189,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3712:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":190,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"3731:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":191,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"3737:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":188,"name":"_upgradeToAndCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3694:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3694:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"ExpressionStatement","src":"3694:53:2"}]},"id":195,"nodeType":"IfStatement","src":"3232:526:2","trueBody":{"id":163,"nodeType":"Block","src":"3297:62:2","statements":[{"expression":{"arguments":[{"id":160,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"3330:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3311:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3311:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3311:37:2"}]}}]},"documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"2654:161:2","text":" @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."},"id":197,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"2829:21:2","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"newImplementation","nameLocation":"2859:17:2","nodeType":"VariableDeclaration","scope":197,"src":"2851:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":146,"name":"address","nodeType":"ElementaryTypeName","src":"2851:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":149,"mutability":"mutable","name":"data","nameLocation":"2891:4:2","nodeType":"VariableDeclaration","scope":197,"src":"2878:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":148,"name":"bytes","nodeType":"ElementaryTypeName","src":"2878:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"forceCall","nameLocation":"2902:9:2","nodeType":"VariableDeclaration","scope":197,"src":"2897:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":150,"name":"bool","nodeType":"ElementaryTypeName","src":"2897:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2850:62:2"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[],"src":"2922:0:2"},"scope":354,"src":"2820:944:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"3770:189:2","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."},"id":201,"mutability":"constant","name":"_ADMIN_SLOT","nameLocation":"3990:11:2","nodeType":"VariableDeclaration","scope":354,"src":"3964:106:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3964:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4004:66:2","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":213,"nodeType":"Block","src":"4185:80:2","statements":[{"expression":{"expression":{"arguments":[{"id":209,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"4240:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":207,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4202:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4225:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"4202:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4202:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":211,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4253:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"4202:56:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":206,"id":212,"nodeType":"Return","src":"4195:63:2"}]},"documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"4077:50:2","text":" @dev Returns the current admin."},"id":214,"implemented":true,"kind":"function","modifiers":[],"name":"_getAdmin","nameLocation":"4141:9:2","nodeType":"FunctionDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"4150:2:2"},"returnParameters":{"id":206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"4176:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":204,"name":"address","nodeType":"ElementaryTypeName","src":"4176:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4175:9:2"},"scope":354,"src":"4132:133:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":239,"nodeType":"Block","src":"4392:167:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":221,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"4410:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4430:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4422:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"4422:7:2","typeDescriptions":{}}},"id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4422:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4410:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373","id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4434:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""},"value":"ERC1967: new admin is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5","typeString":"literal_string \"ERC1967: new admin is the zero address\""}],"id":220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4402:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4402:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":229,"nodeType":"ExpressionStatement","src":"4402:73:2"},{"expression":{"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":233,"name":"_ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":201,"src":"4523:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":230,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4485:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"4485:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":235,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4536:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"4485:56:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":236,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"4544:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4485:67:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":238,"nodeType":"ExpressionStatement","src":"4485:67:2"}]},"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"4271:71:2","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":240,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4356:9:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"newAdmin","nameLocation":"4374:8:2","nodeType":"VariableDeclaration","scope":240,"src":"4366:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4365:18:2"},"returnParameters":{"id":219,"nodeType":"ParameterList","parameters":[],"src":"4392:0:2"},"scope":354,"src":"4347:212:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":256,"nodeType":"Block","src":"4719:86:2","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":247,"name":"_getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4747:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":249,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"4760:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":246,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4734:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4734:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"EmitStatement","src":"4729:40:2"},{"expression":{"arguments":[{"id":253,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"4789:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":252,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4779:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4779:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":255,"nodeType":"ExpressionStatement","src":"4779:19:2"}]},"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"4565:100:2","text":" @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_changeAdmin","nameLocation":"4679:12:2","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"newAdmin","nameLocation":"4700:8:2","nodeType":"VariableDeclaration","scope":257,"src":"4692:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"4692:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4691:18:2"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"4719:0:2"},"scope":354,"src":"4670:135:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"4811:232:2","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"id":261,"mutability":"constant","name":"_BEACON_SLOT","nameLocation":"5074:12:2","nodeType":"VariableDeclaration","scope":354,"src":"5048:107:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5048:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5089:66:2","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":273,"nodeType":"Block","src":"5272:81:2","statements":[{"expression":{"expression":{"arguments":[{"id":269,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5327:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":267,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5289:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5312:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"5289:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5289:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5341:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"5289:57:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":266,"id":272,"nodeType":"Return","src":"5282:64:2"}]},"documentation":{"id":262,"nodeType":"StructuredDocumentation","src":"5162:51:2","text":" @dev Returns the current beacon."},"id":274,"implemented":true,"kind":"function","modifiers":[],"name":"_getBeacon","nameLocation":"5227:10:2","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"5237:2:2"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":274,"src":"5263:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":264,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5262:9:2"},"scope":354,"src":"5218:135:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":309,"nodeType":"Block","src":"5482:368:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":283,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5530:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":281,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5500:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5519:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":849,"src":"5500:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374","id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""},"value":"ERC1967: new beacon is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470","typeString":"literal_string \"ERC1967: new beacon is not a contract\""}],"id":280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5492:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5492:90:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":287,"nodeType":"ExpressionStatement","src":"5492:90:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":292,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5662:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5643:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$364_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$364","typeString":"contract IBeaconUpgradeable"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5673:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":363,"src":"5643:44:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5643:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":289,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"5613:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5632:10:2","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":849,"src":"5613:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5613:77:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5704:50:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""},"value":"ERC1967: beacon implementation is not a contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8","typeString":"literal_string \"ERC1967: beacon implementation is not a contract\""}],"id":288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5592:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5592:172:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"5592:172:2"},{"expression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":303,"name":"_BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"5812:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":300,"name":"StorageSlotUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"5774:22:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlotUpgradeable_$1271_$","typeString":"type(library StorageSlotUpgradeable)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5797:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"5774:37:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1167_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5774:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot storage pointer"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1166,"src":"5774:57:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":306,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"5834:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:69:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":308,"nodeType":"ExpressionStatement","src":"5774:69:2"}]},"documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"5359:71:2","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":310,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5444:10:2","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"newBeacon","nameLocation":"5463:9:2","nodeType":"VariableDeclaration","scope":310,"src":"5455:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":276,"name":"address","nodeType":"ElementaryTypeName","src":"5455:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5454:19:2"},"returnParameters":{"id":279,"nodeType":"ParameterList","parameters":[],"src":"5482:0:2"},"scope":354,"src":"5435:415:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":347,"nodeType":"Block","src":"6249:239:2","statements":[{"expression":{"arguments":[{"id":321,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"6270:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6259:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":323,"nodeType":"ExpressionStatement","src":"6259:21:2"},{"eventCall":{"arguments":[{"id":325,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"6310:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":324,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":19,"src":"6295:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6295:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":327,"nodeType":"EmitStatement","src":"6290:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":328,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6334:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6339:6:2","memberName":"length","nodeType":"MemberAccess","src":"6334:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6348:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6334:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":332,"name":"forceCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"6353:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6334:28:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":346,"nodeType":"IfStatement","src":"6330:152:2","trueBody":{"id":345,"nodeType":"Block","src":"6364:118:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":338,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"6437:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":337,"name":"IBeaconUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"6418:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeaconUpgradeable_$364_$","typeString":"type(contract IBeaconUpgradeable)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeaconUpgradeable_$364","typeString":"contract IBeaconUpgradeable"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":363,"src":"6418:44:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6418:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6466:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":334,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"6378:18:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1048,"src":"6378:39:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6378:93:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":344,"nodeType":"ExpressionStatement","src":"6378:93:2"}]}}]},"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"5856:292:2","text":" @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."},"id":348,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeBeaconToAndCall","nameLocation":"6162:23:2","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"newBeacon","nameLocation":"6194:9:2","nodeType":"VariableDeclaration","scope":348,"src":"6186:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":312,"name":"address","nodeType":"ElementaryTypeName","src":"6186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"data","nameLocation":"6218:4:2","nodeType":"VariableDeclaration","scope":348,"src":"6205:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":314,"name":"bytes","nodeType":"ElementaryTypeName","src":"6205:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"forceCall","nameLocation":"6229:9:2","nodeType":"VariableDeclaration","scope":348,"src":"6224:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6185:54:2"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"6249:0:2"},"scope":354,"src":"6153:335:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"6494:254:2","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":353,"mutability":"mutable","name":"__gap","nameLocation":"6773:5:2","nodeType":"VariableDeclaration","scope":354,"src":"6753:25:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"6753:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":352,"length":{"hexValue":"3530","id":351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6761:2:2","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"6753:11:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":355,"src":"609:6172:2","usedErrors":[]}],"src":"116:6666:2"},"id":2},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol","exportedSymbols":{"IBeaconUpgradeable":[364]},"id":365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":356,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeaconUpgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"118:79:3","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":364,"linearizedBaseContracts":[364],"name":"IBeaconUpgradeable","nameLocation":"208:18:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"233:162:3","text":" @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."},"functionSelector":"5c60da1b","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"409:14:3","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"423:2:3"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"449:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:9:3"},"scope":364,"src":"400:58:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":365,"src":"198:262:3","usedErrors":[]}],"src":"93:368:3"},"id":3},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"Initializable":[533]},"id":534,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":366,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":367,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":534,"sourceUnit":1162,"src":"138:44:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"184:2209:4","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":533,"linearizedBaseContracts":[533],"name":"Initializable","nameLocation":"2412:13:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"2432:109:4","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":371,"mutability":"mutable","name":"_initialized","nameLocation":"2560:12:4","nodeType":"VariableDeclaration","scope":533,"src":"2546:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":370,"name":"uint8","nodeType":"ElementaryTypeName","src":"2546:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2579:91:4","text":" @dev Indicates that the contract is in the process of being initialized."},"id":374,"mutability":"mutable","name":"_initializing","nameLocation":"2688:13:4","nodeType":"VariableDeclaration","scope":533,"src":"2675:26:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":373,"name":"bool","nodeType":"ElementaryTypeName","src":"2675:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"2708:90:4","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":379,"name":"Initialized","nameLocation":"2809:11:4","nodeType":"EventDefinition","parameters":{"id":378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":379,"src":"2821:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":376,"name":"uint8","nodeType":"ElementaryTypeName","src":"2821:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2820:15:4"},"src":"2803:33:4"},{"body":{"id":434,"nodeType":"Block","src":"3269:483:4","statements":[{"assignments":[383],"declarations":[{"constant":false,"id":383,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3284:14:4","nodeType":"VariableDeclaration","scope":434,"src":"3279:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":382,"name":"bool","nodeType":"ElementaryTypeName","src":"3279:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":386,"initialValue":{"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3301:14:4","subExpression":{"id":384,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3302:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3279:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":388,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3347:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":389,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3365:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3365:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3347:34:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3346:36:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3387:45:4","subExpression":{"arguments":[{"arguments":[{"id":398,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3426:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$533","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$533","typeString":"contract Initializable"}],"id":397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3418:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"3418:7:4","typeDescriptions":{}}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3418:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":394,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"3388:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$1161_$","typeString":"type(library AddressUpgradeable)"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":849,"src":"3388:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3388:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":402,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3436:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3452:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3436:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3387:66:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3386:68:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3346:108:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3468:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":387,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3325:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3325:201:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"3325:201:4"},{"expression":{"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"3536:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3551:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3536:16:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":414,"nodeType":"ExpressionStatement","src":"3536:16:4"},{"condition":{"id":415,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3566:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":421,"nodeType":"IfStatement","src":"3562:65:4","trueBody":{"id":420,"nodeType":"Block","src":"3582:45:4","statements":[{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3596:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3596:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":419,"nodeType":"ExpressionStatement","src":"3596:20:4"}]}},{"id":422,"nodeType":"PlaceholderStatement","src":"3636:1:4"},{"condition":{"id":423,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"3651:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":433,"nodeType":"IfStatement","src":"3647:99:4","trueBody":{"id":432,"nodeType":"Block","src":"3667:79:4","statements":[{"expression":{"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":424,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"3681:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3697:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3681:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":427,"nodeType":"ExpressionStatement","src":"3681:21:4"},{"eventCall":{"arguments":[{"hexValue":"31","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3733:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":428,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3721:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3721:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"EmitStatement","src":"3716:19:4"}]}}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2842:399:4","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."},"id":435,"name":"initializer","nameLocation":"3255:11:4","nodeType":"ModifierDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"3266:2:4"},"src":"3246:506:4","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"4863:255:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4881:14:4","subExpression":{"id":441,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4882:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":443,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4899:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":444,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4914:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4899:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4881:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4923:48:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":440,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":449,"nodeType":"ExpressionStatement","src":"4873:99:4"},{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":450,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"4982:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":451,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"4997:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4982:22:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":453,"nodeType":"ExpressionStatement","src":"4982:22:4"},{"expression":{"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":454,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5014:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5030:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5014:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"ExpressionStatement","src":"5014:20:4"},{"id":458,"nodeType":"PlaceholderStatement","src":"5044:1:4"},{"expression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":459,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5055:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5071:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5055:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"ExpressionStatement","src":"5055:21:4"},{"eventCall":{"arguments":[{"id":464,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"5103:7:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":463,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"5091:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":466,"nodeType":"EmitStatement","src":"5086:25:4"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"3758:1062:4","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":468,"name":"reinitializer","nameLocation":"4834:13:4","nodeType":"ModifierDefinition","parameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":438,"mutability":"mutable","name":"version","nameLocation":"4854:7:4","nodeType":"VariableDeclaration","scope":468,"src":"4848:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":437,"name":"uint8","nodeType":"ElementaryTypeName","src":"4848:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4847:15:4"},"src":"4825:293:4","virtual":false,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"5356:97:4","statements":[{"expression":{"arguments":[{"id":472,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"5374:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5389:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5366:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5366:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":475,"nodeType":"ExpressionStatement","src":"5366:69:4"},{"id":476,"nodeType":"PlaceholderStatement","src":"5445:1:4"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"5124:199:4","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":478,"name":"onlyInitializing","nameLocation":"5337:16:4","nodeType":"ModifierDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"5353:2:4"},"src":"5328:125:4","virtual":false,"visibility":"internal"},{"body":{"id":513,"nodeType":"Block","src":"5988:231:4","statements":[{"expression":{"arguments":[{"id":484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6006:14:4","subExpression":{"id":483,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"6007:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6022:41:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5998:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5998:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":487,"nodeType":"ExpressionStatement","src":"5998:66:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":488,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6078:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6099:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":490,"name":"uint8","nodeType":"ElementaryTypeName","src":"6099:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6094:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6094:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6106:3:4","memberName":"max","nodeType":"MemberAccess","src":"6094:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6078:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":512,"nodeType":"IfStatement","src":"6074:139:4","trueBody":{"id":511,"nodeType":"Block","src":"6111:102:4","statements":[{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":495,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6125:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6145:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":497,"name":"uint8","nodeType":"ElementaryTypeName","src":"6145:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6140:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6152:3:4","memberName":"max","nodeType":"MemberAccess","src":"6140:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6125:30:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":502,"nodeType":"ExpressionStatement","src":"6125:30:4"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6191:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":505,"name":"uint8","nodeType":"ElementaryTypeName","src":"6191:5:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":504,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6186:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6198:3:4","memberName":"max","nodeType":"MemberAccess","src":"6186:15:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":503,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"6174:11:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"EmitStatement","src":"6169:33:4"}]}}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"5459:475:4","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":514,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5948:20:4","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[],"src":"5968:2:4"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"5988:0:4"},"scope":533,"src":"5939:280:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":522,"nodeType":"Block","src":"6393:36:4","statements":[{"expression":{"id":520,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":371,"src":"6410:12:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":519,"id":521,"nodeType":"Return","src":"6403:19:4"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"6225:99:4","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":523,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"6338:22:4","nodeType":"FunctionDefinition","parameters":{"id":516,"nodeType":"ParameterList","parameters":[],"src":"6360:2:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":523,"src":"6386:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":517,"name":"uint8","nodeType":"ElementaryTypeName","src":"6386:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6385:7:4"},"scope":533,"src":"6329:100:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":531,"nodeType":"Block","src":"6601:37:4","statements":[{"expression":{"id":529,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"6618:13:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":528,"id":530,"nodeType":"Return","src":"6611:20:4"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"6435:105:4","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":532,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"6554:15:4","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"6569:2:4"},"returnParameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":532,"src":"6595:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"6595:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6594:6:4"},"scope":533,"src":"6545:93:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":534,"src":"2394:4246:4","usedErrors":[]}],"src":"113:6528:4"},"id":4},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ERC1967UpgradeUpgradeable":[354],"IBeaconUpgradeable":[364],"IERC1822ProxiableUpgradeable":[30],"IERC1967Upgradeable":[20],"Initializable":[533],"StorageSlotUpgradeable":[1271],"UUPSUpgradeable":[669]},"id":670,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":535,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol","file":"../../interfaces/draft-IERC1822Upgradeable.sol","id":536,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":31,"src":"140:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol","file":"../ERC1967/ERC1967UpgradeUpgradeable.sol","id":537,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":355,"src":"197:50:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":538,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":534,"src":"248:29:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":540,"name":"Initializable","nameLocations":["965:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"965:13:5"},"id":541,"nodeType":"InheritanceSpecifier","src":"965:13:5"},{"baseName":{"id":542,"name":"IERC1822ProxiableUpgradeable","nameLocations":["980:28:5"],"nodeType":"IdentifierPath","referencedDeclaration":30,"src":"980:28:5"},"id":543,"nodeType":"InheritanceSpecifier","src":"980:28:5"},{"baseName":{"id":544,"name":"ERC1967UpgradeUpgradeable","nameLocations":["1010:25:5"],"nodeType":"IdentifierPath","referencedDeclaration":354,"src":"1010:25:5"},"id":545,"nodeType":"InheritanceSpecifier","src":"1010:25:5"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"279:648:5","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"},"fullyImplemented":false,"id":669,"linearizedBaseContracts":[669,354,20,30,533],"name":"UUPSUpgradeable","nameLocation":"946:15:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":550,"nodeType":"Block","src":"1102:7:5","statements":[]},"id":551,"implemented":true,"kind":"function","modifiers":[{"id":548,"kind":"modifierInvocation","modifierName":{"id":547,"name":"onlyInitializing","nameLocations":["1085:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"1085:16:5"},"nodeType":"ModifierInvocation","src":"1085:16:5"}],"name":"__UUPSUpgradeable_init","nameLocation":"1051:22:5","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[],"src":"1073:2:5"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"1102:0:5"},"scope":669,"src":"1042:67:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"1185:7:5","statements":[]},"id":557,"implemented":true,"kind":"function","modifiers":[{"id":554,"kind":"modifierInvocation","modifierName":{"id":553,"name":"onlyInitializing","nameLocations":["1168:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"1168:16:5"},"nodeType":"ModifierInvocation","src":"1168:16:5"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"1124:32:5","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[],"src":"1156:2:5"},"returnParameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"1185:0:5"},"scope":669,"src":"1115:77:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"1197:87:5","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"},"id":564,"mutability":"immutable","name":"__self","nameLocation":"1315:6:5","nodeType":"VariableDeclaration","scope":669,"src":"1289:48:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":562,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1332:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1324:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"1324:7:5","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":586,"nodeType":"Block","src":"1863:205:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":570,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1889:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}],"id":569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1881:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:5","typeDescriptions":{}}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1881:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":572,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1898:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1881:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""},"value":"Function must be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb","typeString":"literal_string \"Function must be called through delegatecall\""}],"id":567,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1873:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1873:80:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":576,"nodeType":"ExpressionStatement","src":"1873:80:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":578,"name":"_getImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":75,"src":"1971:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1971:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":580,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1995:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1971:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2003:46:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""},"value":"Function must be called through active proxy"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434","typeString":"literal_string \"Function must be called through active proxy\""}],"id":577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1963:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"1963:87:5"},{"id":585,"nodeType":"PlaceholderStatement","src":"2060:1:5"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"1344:493:5","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":587,"name":"onlyProxy","nameLocation":"1851:9:5","nodeType":"ModifierDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"1860:2:5"},"src":"1842:226:5","virtual":false,"visibility":"internal"},{"body":{"id":601,"nodeType":"Block","src":"2298:120:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2324:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$669","typeString":"contract UUPSUpgradeable"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2316:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:5","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":595,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2333:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c","id":597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2341:58:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""},"value":"UUPSUpgradeable: must not be called through delegatecall"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4","typeString":"literal_string \"UUPSUpgradeable: must not be called through delegatecall\""}],"id":590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2308:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2308:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"ExpressionStatement","src":"2308:92:5"},{"id":600,"nodeType":"PlaceholderStatement","src":"2410:1:5"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"2074:195:5","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":602,"name":"notDelegated","nameLocation":"2283:12:5","nodeType":"ModifierDefinition","parameters":{"id":589,"nodeType":"ParameterList","parameters":[],"src":"2295:2:5"},"src":"2274:144:5","virtual":false,"visibility":"internal"},{"baseFunctions":[29],"body":{"id":613,"nodeType":"Block","src":"3093:44:5","statements":[{"expression":{"id":611,"name":"_IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"3110:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":610,"id":612,"nodeType":"Return","src":"3103:27:5"}]},"documentation":{"id":603,"nodeType":"StructuredDocumentation","src":"2424:577:5","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":614,"implemented":true,"kind":"function","modifiers":[{"id":607,"kind":"modifierInvocation","modifierName":{"id":606,"name":"notDelegated","nameLocations":["3062:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":602,"src":"3062:12:5"},"nodeType":"ModifierInvocation","src":"3062:12:5"}],"name":"proxiableUUID","nameLocation":"3015:13:5","nodeType":"FunctionDefinition","overrides":{"id":605,"nodeType":"OverrideSpecifier","overrides":[],"src":"3053:8:5"},"parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"3028:2:5"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":614,"src":"3084:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3084:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3083:9:5"},"scope":669,"src":"3006:131:5","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":635,"nodeType":"Block","src":"3458:124:5","statements":[{"expression":{"arguments":[{"id":623,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3486:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":622,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"3468:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":625,"nodeType":"ExpressionStatement","src":"3468:36:5"},{"expression":{"arguments":[{"id":627,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"3536:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3555:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":628,"name":"bytes","nodeType":"ElementaryTypeName","src":"3559:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3555:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3569:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":626,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"3514:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":634,"nodeType":"ExpressionStatement","src":"3514:61:5"}]},"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"3143:239:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"3659cfe6","id":636,"implemented":true,"kind":"function","modifiers":[{"id":620,"kind":"modifierInvocation","modifierName":{"id":619,"name":"onlyProxy","nameLocations":["3448:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":587,"src":"3448:9:5"},"nodeType":"ModifierInvocation","src":"3448:9:5"}],"name":"upgradeTo","nameLocation":"3396:9:5","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"newImplementation","nameLocation":"3414:17:5","nodeType":"VariableDeclaration","scope":636,"src":"3406:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3405:27:5"},"returnParameters":{"id":621,"nodeType":"ParameterList","parameters":[],"src":"3458:0:5"},"scope":669,"src":"3387:195:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":656,"nodeType":"Block","src":"4006:115:5","statements":[{"expression":{"arguments":[{"id":647,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4034:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":646,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"4016:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":649,"nodeType":"ExpressionStatement","src":"4016:36:5"},{"expression":{"arguments":[{"id":651,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"4084:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":652,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"4103:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4109:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":650,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":197,"src":"4062:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,bytes memory,bool)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":655,"nodeType":"ExpressionStatement","src":"4062:52:5"}]},"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"3588:308:5","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":657,"implemented":true,"kind":"function","modifiers":[{"id":644,"kind":"modifierInvocation","modifierName":{"id":643,"name":"onlyProxy","nameLocations":["3996:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":587,"src":"3996:9:5"},"nodeType":"ModifierInvocation","src":"3996:9:5"}],"name":"upgradeToAndCall","nameLocation":"3910:16:5","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"newImplementation","nameLocation":"3935:17:5","nodeType":"VariableDeclaration","scope":657,"src":"3927:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"3927:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":641,"mutability":"mutable","name":"data","nameLocation":"3967:4:5","nodeType":"VariableDeclaration","scope":657,"src":"3954:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":640,"name":"bytes","nodeType":"ElementaryTypeName","src":"3954:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3926:46:5"},"returnParameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"4006:0:5"},"scope":669,"src":"3901:220:5","stateMutability":"payable","virtual":true,"visibility":"public"},{"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"4127:397:5","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"},"id":663,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"4538:17:5","nodeType":"FunctionDefinition","parameters":{"id":661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"newImplementation","nameLocation":"4564:17:5","nodeType":"VariableDeclaration","scope":663,"src":"4556:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"4556:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4555:27:5"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[],"src":"4599:0:5"},"scope":669,"src":"4529:71:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"constant":false,"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"4606:254:5","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":668,"mutability":"mutable","name":"__gap","nameLocation":"4885:5:5","nodeType":"VariableDeclaration","scope":669,"src":"4865:25:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"4865:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":667,"length":{"hexValue":"3530","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:2:5","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"4865:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"}],"scope":670,"src":"928:3965:5","usedErrors":[]}],"src":"115:4779:5"},"id":5},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161],"Initializable":[533],"ReentrancyGuardUpgradeable":[753]},"id":754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":671,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":754,"sourceUnit":534,"src":"136:42:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":674,"name":"Initializable","nameLocations":["979:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"979:13:6"},"id":675,"nodeType":"InheritanceSpecifier","src":"979:13:6"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"180:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":753,"linearizedBaseContracts":[753,533],"name":"ReentrancyGuardUpgradeable","nameLocation":"949:26:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":678,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1772:12:6","nodeType":"VariableDeclaration","scope":753,"src":"1747:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":681,"mutability":"constant","name":"_ENTERED","nameLocation":"1819:8:6","nodeType":"VariableDeclaration","scope":753,"src":"1794:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1794:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1830:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":683,"mutability":"mutable","name":"_status","nameLocation":"1854:7:6","nodeType":"VariableDeclaration","scope":753,"src":"1838:23:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":682,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":691,"nodeType":"Block","src":"1928:51:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":688,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"1938:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1938:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"1938:34:6"}]},"id":692,"implemented":true,"kind":"function","modifiers":[{"id":686,"kind":"modifierInvocation","modifierName":{"id":685,"name":"onlyInitializing","nameLocations":["1911:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"1911:16:6"},"nodeType":"ModifierInvocation","src":"1911:16:6"}],"name":"__ReentrancyGuard_init","nameLocation":"1877:22:6","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[],"src":"1899:2:6"},"returnParameters":{"id":687,"nodeType":"ParameterList","parameters":[],"src":"1928:0:6"},"scope":753,"src":"1868:111:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"2055:39:6","statements":[{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":697,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2065:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"2075:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2065:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":700,"nodeType":"ExpressionStatement","src":"2065:22:6"}]},"id":702,"implemented":true,"kind":"function","modifiers":[{"id":695,"kind":"modifierInvocation","modifierName":{"id":694,"name":"onlyInitializing","nameLocations":["2038:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":478,"src":"2038:16:6"},"nodeType":"ModifierInvocation","src":"2038:16:6"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"1994:32:6","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[],"src":"2026:2:6"},"returnParameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"2055:0:6"},"scope":753,"src":"1985:109:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":712,"nodeType":"Block","src":"2495:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":705,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"2505:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2505:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":707,"nodeType":"ExpressionStatement","src":"2505:21:6"},{"id":708,"nodeType":"PlaceholderStatement","src":"2536:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":709,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"2547:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":711,"nodeType":"ExpressionStatement","src":"2547:20:6"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"2100:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":713,"name":"nonReentrant","nameLocation":"2480:12:6","nodeType":"ModifierDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"2492:2:6"},"src":"2471:103:6","virtual":false,"visibility":"internal"},{"body":{"id":727,"nodeType":"Block","src":"2619:248:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2712:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":718,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2723:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2712:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2704:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2704:63:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"2704:63:6"},{"expression":{"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":723,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2842:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":724,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2852:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":726,"nodeType":"ExpressionStatement","src":"2842:18:6"}]},"id":728,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2589:19:6","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"2608:2:6"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"2619:0:6"},"scope":753,"src":"2580:287:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":735,"nodeType":"Block","src":"2911:171:6","statements":[{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":731,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3053:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":732,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3063:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3053:22:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":734,"nodeType":"ExpressionStatement","src":"3053:22:6"}]},"id":736,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2882:18:6","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"2900:2:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"2911:0:6"},"scope":753,"src":"2873:209:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":746,"nodeType":"Block","src":"3325:43:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"3342:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":743,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"3353:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3342:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":741,"id":745,"nodeType":"Return","src":"3335:26:6"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"3088:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":747,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3270:23:6","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"3293:2:6"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":747,"src":"3319:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":739,"name":"bool","nodeType":"ElementaryTypeName","src":"3319:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3318:6:6"},"scope":753,"src":"3261:107:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":false,"documentation":{"id":748,"nodeType":"StructuredDocumentation","src":"3374:254:6","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"id":752,"mutability":"mutable","name":"__gap","nameLocation":"3653:5:6","nodeType":"VariableDeclaration","scope":753,"src":"3633:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":749,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":751,"length":{"hexValue":"3439","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3641:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3633:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"scope":754,"src":"931:2730:6","usedErrors":[]}],"src":"112:3550:6"},"id":6},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","exportedSymbols":{"IERC20Upgradeable":[831]},"id":832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":755,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Upgradeable","contractDependencies":[],"contractKind":"interface","documentation":{"id":756,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":831,"linearizedBaseContracts":[831],"name":"IERC20Upgradeable","nameLocation":"212:17:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"236:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":765,"name":"Transfer","nameLocation":"405:8:7","nodeType":"EventDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"430:4:7","nodeType":"VariableDeclaration","scope":765,"src":"414:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":758,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":761,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"452:2:7","nodeType":"VariableDeclaration","scope":765,"src":"436:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"436:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"464:5:7","nodeType":"VariableDeclaration","scope":765,"src":"456:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"413:57:7"},"src":"399:72:7"},{"anonymous":false,"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"477:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":774,"name":"Approval","nameLocation":"636:8:7","nodeType":"EventDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"661:5:7","nodeType":"VariableDeclaration","scope":774,"src":"645:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"645:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":770,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"684:7:7","nodeType":"VariableDeclaration","scope":774,"src":"668:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"701:5:7","nodeType":"VariableDeclaration","scope":774,"src":"693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"644:63:7"},"src":"630:78:7"},{"documentation":{"id":775,"nodeType":"StructuredDocumentation","src":"714:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":780,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"794:11:7","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"805:2:7"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"831:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"831:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"830:9:7"},"scope":831,"src":"785:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"846:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":788,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"932:9:7","nodeType":"FunctionDefinition","parameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"account","nameLocation":"950:7:7","nodeType":"VariableDeclaration","scope":788,"src":"942:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"942:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"941:17:7"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":788,"src":"982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"981:9:7"},"scope":831,"src":"923:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"997:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":798,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:7","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"to","nameLocation":"1230:2:7","nodeType":"VariableDeclaration","scope":798,"src":"1222:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"amount","nameLocation":"1242:6:7","nodeType":"VariableDeclaration","scope":798,"src":"1234:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:28:7"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":798,"src":"1268:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":795,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:7"},"scope":831,"src":"1204:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"1280:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:7","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"owner","nameLocation":"1576:5:7","nodeType":"VariableDeclaration","scope":808,"src":"1568:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"spender","nameLocation":"1591:7:7","nodeType":"VariableDeclaration","scope":808,"src":"1583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:7"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"1623:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:7"},"scope":831,"src":"1549:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"1638:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2294:7:7","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"spender","nameLocation":"2310:7:7","nodeType":"VariableDeclaration","scope":818,"src":"2302:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"2302:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"amount","nameLocation":"2327:6:7","nodeType":"VariableDeclaration","scope":818,"src":"2319:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:33:7"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"2353:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":815,"name":"bool","nodeType":"ElementaryTypeName","src":"2353:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2352:6:7"},"scope":831,"src":"2285:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"2365:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2666:12:7","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"from","nameLocation":"2687:4:7","nodeType":"VariableDeclaration","scope":830,"src":"2679:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"to","nameLocation":"2701:2:7","nodeType":"VariableDeclaration","scope":830,"src":"2693:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"2693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":825,"mutability":"mutable","name":"amount","nameLocation":"2713:6:7","nodeType":"VariableDeclaration","scope":830,"src":"2705:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2705:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2678:42:7"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"2739:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:7"},"scope":831,"src":"2657:88:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":832,"src":"202:2545:7","usedErrors":[]}],"src":"106:2642:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[1161]},"id":1162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":833,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1161,"linearizedBaseContracts":[1161],"name":"AddressUpgradeable","nameLocation":"202:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":848,"nodeType":"Block","src":"1489:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":842,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1713:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1721:4:8","memberName":"code","nodeType":"MemberAccess","src":"1713:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1726:6:8","memberName":"length","nodeType":"MemberAccess","src":"1713:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":841,"id":847,"nodeType":"Return","src":"1706:30:8"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"227:1191:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":849,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1432:10:8","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"account","nameLocation":"1451:7:8","nodeType":"VariableDeclaration","scope":849,"src":"1443:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1443:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1442:17:8"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":849,"src":"1483:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":839,"name":"bool","nodeType":"ElementaryTypeName","src":"1483:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1482:6:8"},"scope":1161,"src":"1423:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":882,"nodeType":"Block","src":"2729:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":860,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2755:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"2747:7:8","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2747:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:7:8","memberName":"balance","nodeType":"MemberAccess","src":"2747:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":863,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2772:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2747:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2780:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":857,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2739:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"2739:73:8"},{"assignments":[869,null],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"success","nameLocation":"2829:7:8","nodeType":"VariableDeclaration","scope":882,"src":"2824:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":868,"name":"bool","nodeType":"ElementaryTypeName","src":"2824:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":876,"initialValue":{"arguments":[{"hexValue":"","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2872:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":870,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"2842:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2852:4:8","memberName":"call","nodeType":"MemberAccess","src":"2842:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"2864:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2842:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2842:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2823:52:8"},{"expression":{"arguments":[{"id":878,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"2893:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2902:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":877,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2885:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2885:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"2885:78:8"}]},"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1749:904:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":883,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2667:9:8","nodeType":"FunctionDefinition","parameters":{"id":855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"recipient","nameLocation":"2693:9:8","nodeType":"VariableDeclaration","scope":883,"src":"2677:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"2677:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"amount","nameLocation":"2712:6:8","nodeType":"VariableDeclaration","scope":883,"src":"2704:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":856,"nodeType":"ParameterList","parameters":[],"src":"2729:0:8"},"scope":1161,"src":"2658:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"3801:96:8","statements":[{"expression":{"arguments":[{"id":894,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3840:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"3848:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3854:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3857:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":893,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"3818:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":892,"id":899,"nodeType":"Return","src":"3811:79:8"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"2976:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3721:12:8","nodeType":"FunctionDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"mutability":"mutable","name":"target","nameLocation":"3742:6:8","nodeType":"VariableDeclaration","scope":901,"src":"3734:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"3734:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"data","nameLocation":"3763:4:8","nodeType":"VariableDeclaration","scope":901,"src":"3750:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3750:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3733:35:8"},"returnParameters":{"id":892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":901,"src":"3787:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"3787:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3786:14:8"},"scope":1161,"src":"3712:185:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":920,"nodeType":"Block","src":"4266:76:8","statements":[{"expression":{"arguments":[{"id":914,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"4305:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"4313:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4319:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":917,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4322:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":913,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"4283:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":912,"id":919,"nodeType":"Return","src":"4276:59:8"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"3903:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":921,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4128:12:8","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"target","nameLocation":"4158:6:8","nodeType":"VariableDeclaration","scope":921,"src":"4150:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"4150:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"data","nameLocation":"4187:4:8","nodeType":"VariableDeclaration","scope":921,"src":"4174:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4174:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"errorMessage","nameLocation":"4215:12:8","nodeType":"VariableDeclaration","scope":921,"src":"4201:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"4201:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4140:93:8"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":921,"src":"4252:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":910,"name":"bytes","nodeType":"ElementaryTypeName","src":"4252:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4251:14:8"},"scope":1161,"src":"4119:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"4817:111:8","statements":[{"expression":{"arguments":[{"id":934,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"4856:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"4864:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"4870:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4877:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":933,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[941,985],"referencedDeclaration":985,"src":"4834:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4834:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":932,"id":939,"nodeType":"Return","src":"4827:94:8"}]},"documentation":{"id":922,"nodeType":"StructuredDocumentation","src":"4348:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4713:21:8","nodeType":"FunctionDefinition","parameters":{"id":929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"target","nameLocation":"4743:6:8","nodeType":"VariableDeclaration","scope":941,"src":"4735:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"4735:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"4764:4:8","nodeType":"VariableDeclaration","scope":941,"src":"4751:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"4751:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"value","nameLocation":"4778:5:8","nodeType":"VariableDeclaration","scope":941,"src":"4770:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint256","nodeType":"ElementaryTypeName","src":"4770:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4734:50:8"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"4803:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":930,"name":"bytes","nodeType":"ElementaryTypeName","src":"4803:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4802:14:8"},"scope":1161,"src":"4704:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":984,"nodeType":"Block","src":"5355:267:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":958,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5381:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$1161","typeString":"library AddressUpgradeable"}],"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5373:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:8","typeDescriptions":{}}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5387:7:8","memberName":"balance","nodeType":"MemberAccess","src":"5373:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5398:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5373:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5405:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":955,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5365:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5365:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"ExpressionStatement","src":"5365:81:8"},{"assignments":[967,969],"declarations":[{"constant":false,"id":967,"mutability":"mutable","name":"success","nameLocation":"5462:7:8","nodeType":"VariableDeclaration","scope":984,"src":"5457:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":966,"name":"bool","nodeType":"ElementaryTypeName","src":"5457:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"returndata","nameLocation":"5484:10:8","nodeType":"VariableDeclaration","scope":984,"src":"5471:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"5471:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":976,"initialValue":{"arguments":[{"id":974,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5524:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":970,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5498:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5505:4:8","memberName":"call","nodeType":"MemberAccess","src":"5498:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"5517:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5498:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5456:73:8"},{"expression":{"arguments":[{"id":978,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"5573:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":979,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5581:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"5590:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":981,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"5602:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":977,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"5546:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5546:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":954,"id":983,"nodeType":"Return","src":"5539:76:8"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"4934:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":985,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5185:21:8","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"target","nameLocation":"5224:6:8","nodeType":"VariableDeclaration","scope":985,"src":"5216:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":943,"name":"address","nodeType":"ElementaryTypeName","src":"5216:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":946,"mutability":"mutable","name":"data","nameLocation":"5253:4:8","nodeType":"VariableDeclaration","scope":985,"src":"5240:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":945,"name":"bytes","nodeType":"ElementaryTypeName","src":"5240:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"value","nameLocation":"5275:5:8","nodeType":"VariableDeclaration","scope":985,"src":"5267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"5267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"errorMessage","nameLocation":"5304:12:8","nodeType":"VariableDeclaration","scope":985,"src":"5290:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":949,"name":"string","nodeType":"ElementaryTypeName","src":"5290:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5206:116:8"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":985,"src":"5341:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"5341:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5340:14:8"},"scope":1161,"src":"5176:446:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"5899:97:8","statements":[{"expression":{"arguments":[{"id":996,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5935:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"5943:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5949:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":995,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1002,1031],"referencedDeclaration":1031,"src":"5916:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5916:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":994,"id":1000,"nodeType":"Return","src":"5909:80:8"}]},"documentation":{"id":986,"nodeType":"StructuredDocumentation","src":"5628:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5808:18:8","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"target","nameLocation":"5835:6:8","nodeType":"VariableDeclaration","scope":1002,"src":"5827:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"data","nameLocation":"5856:4:8","nodeType":"VariableDeclaration","scope":1002,"src":"5843:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":989,"name":"bytes","nodeType":"ElementaryTypeName","src":"5843:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5826:35:8"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1002,"src":"5885:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":992,"name":"bytes","nodeType":"ElementaryTypeName","src":"5885:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5884:14:8"},"scope":1161,"src":"5799:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1030,"nodeType":"Block","src":"6338:168:8","statements":[{"assignments":[1015,1017],"declarations":[{"constant":false,"id":1015,"mutability":"mutable","name":"success","nameLocation":"6354:7:8","nodeType":"VariableDeclaration","scope":1030,"src":"6349:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1014,"name":"bool","nodeType":"ElementaryTypeName","src":"6349:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"returndata","nameLocation":"6376:10:8","nodeType":"VariableDeclaration","scope":1030,"src":"6363:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"6363:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1022,"initialValue":{"arguments":[{"id":1020,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"6408:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1018,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6390:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6397:10:8","memberName":"staticcall","nodeType":"MemberAccess","src":"6390:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6348:65:8"},{"expression":{"arguments":[{"id":1024,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6457:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1025,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"6465:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1026,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"6474:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1027,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"6486:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1023,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"6430:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1013,"id":1029,"nodeType":"Return","src":"6423:76:8"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"6002:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6189:18:8","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"target","nameLocation":"6225:6:8","nodeType":"VariableDeclaration","scope":1031,"src":"6217:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"6217:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"data","nameLocation":"6254:4:8","nodeType":"VariableDeclaration","scope":1031,"src":"6241:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1006,"name":"bytes","nodeType":"ElementaryTypeName","src":"6241:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"errorMessage","nameLocation":"6282:12:8","nodeType":"VariableDeclaration","scope":1031,"src":"6268:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"6268:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6207:93:8"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"6324:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1011,"name":"bytes","nodeType":"ElementaryTypeName","src":"6324:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6323:14:8"},"scope":1161,"src":"6180:326:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"6782:101:8","statements":[{"expression":{"arguments":[{"id":1042,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6820:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"6828:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6834:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1041,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1048,1077],"referencedDeclaration":1077,"src":"6799:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6799:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1040,"id":1046,"nodeType":"Return","src":"6792:84:8"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"6512:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6694:20:8","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"target","nameLocation":"6723:6:8","nodeType":"VariableDeclaration","scope":1048,"src":"6715:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1033,"name":"address","nodeType":"ElementaryTypeName","src":"6715:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1036,"mutability":"mutable","name":"data","nameLocation":"6744:4:8","nodeType":"VariableDeclaration","scope":1048,"src":"6731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"6731:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6714:35:8"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1048,"src":"6768:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1038,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:8"},"scope":1161,"src":"6685:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"7224:170:8","statements":[{"assignments":[1061,1063],"declarations":[{"constant":false,"id":1061,"mutability":"mutable","name":"success","nameLocation":"7240:7:8","nodeType":"VariableDeclaration","scope":1076,"src":"7235:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1060,"name":"bool","nodeType":"ElementaryTypeName","src":"7235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"returndata","nameLocation":"7262:10:8","nodeType":"VariableDeclaration","scope":1076,"src":"7249:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"7249:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1068,"initialValue":{"arguments":[{"id":1066,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"7296:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1064,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7276:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7283:12:8","memberName":"delegatecall","nodeType":"MemberAccess","src":"7276:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7276:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7234:67:8"},{"expression":{"arguments":[{"id":1070,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"7345:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"7353:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1072,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"7362:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1073,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"7374:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1069,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"7318:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7318:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1059,"id":1075,"nodeType":"Return","src":"7311:76:8"}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"6889:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7078:20:8","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"target","nameLocation":"7116:6:8","nodeType":"VariableDeclaration","scope":1077,"src":"7108:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"7108:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"data","nameLocation":"7145:4:8","nodeType":"VariableDeclaration","scope":1077,"src":"7132:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"errorMessage","nameLocation":"7173:12:8","nodeType":"VariableDeclaration","scope":1077,"src":"7159:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1054,"name":"string","nodeType":"ElementaryTypeName","src":"7159:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7098:93:8"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1077,"src":"7210:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1057,"name":"bytes","nodeType":"ElementaryTypeName","src":"7210:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7209:14:8"},"scope":1161,"src":"7069:325:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"7876:434:8","statements":[{"condition":{"id":1091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"7890:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1113,"nodeType":"Block","src":"8246:58:8","statements":[{"expression":{"arguments":[{"id":1109,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8268:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1110,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"8280:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1108,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8260:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8260:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"ExpressionStatement","src":"8260:33:8"}]},"id":1114,"nodeType":"IfStatement","src":"7886:418:8","trueBody":{"id":1107,"nodeType":"Block","src":"7899:341:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"7917:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7928:6:8","memberName":"length","nodeType":"MemberAccess","src":"7917:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7938:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7917:22:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1104,"nodeType":"IfStatement","src":"7913:286:8","trueBody":{"id":1103,"nodeType":"Block","src":"7941:258:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1098,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"8143:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1097,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"8132:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8152:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8124:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8124:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1102,"nodeType":"ExpressionStatement","src":"8124:60:8"}]}},{"expression":{"id":1105,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8219:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1090,"id":1106,"nodeType":"Return","src":"8212:17:8"}]}}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"7400:277:8","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7691:26:8","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"target","nameLocation":"7735:6:8","nodeType":"VariableDeclaration","scope":1116,"src":"7727:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"7727:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"success","nameLocation":"7756:7:8","nodeType":"VariableDeclaration","scope":1116,"src":"7751:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1081,"name":"bool","nodeType":"ElementaryTypeName","src":"7751:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"returndata","nameLocation":"7786:10:8","nodeType":"VariableDeclaration","scope":1116,"src":"7773:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1083,"name":"bytes","nodeType":"ElementaryTypeName","src":"7773:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"errorMessage","nameLocation":"7820:12:8","nodeType":"VariableDeclaration","scope":1116,"src":"7806:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1085,"name":"string","nodeType":"ElementaryTypeName","src":"7806:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7717:121:8"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1116,"src":"7862:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1088,"name":"bytes","nodeType":"ElementaryTypeName","src":"7862:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7861:14:8"},"scope":1161,"src":"7682:628:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1139,"nodeType":"Block","src":"8691:135:8","statements":[{"condition":{"id":1128,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"8705:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1137,"nodeType":"Block","src":"8762:58:8","statements":[{"expression":{"arguments":[{"id":1133,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8784:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1134,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"8796:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1132,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"8776:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8776:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"8776:33:8"}]},"id":1138,"nodeType":"IfStatement","src":"8701:119:8","trueBody":{"id":1131,"nodeType":"Block","src":"8714:42:8","statements":[{"expression":{"id":1129,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"8735:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1127,"id":1130,"nodeType":"Return","src":"8728:17:8"}]}}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"8316:210:8","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1140,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8540:16:8","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"success","nameLocation":"8571:7:8","nodeType":"VariableDeclaration","scope":1140,"src":"8566:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1118,"name":"bool","nodeType":"ElementaryTypeName","src":"8566:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"returndata","nameLocation":"8601:10:8","nodeType":"VariableDeclaration","scope":1140,"src":"8588:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1120,"name":"bytes","nodeType":"ElementaryTypeName","src":"8588:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"errorMessage","nameLocation":"8635:12:8","nodeType":"VariableDeclaration","scope":1140,"src":"8621:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1122,"name":"string","nodeType":"ElementaryTypeName","src":"8621:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8556:97:8"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1140,"src":"8677:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"8677:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8676:14:8"},"scope":1161,"src":"8531:295:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1159,"nodeType":"Block","src":"8915:457:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1147,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"8991:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9002:6:8","memberName":"length","nodeType":"MemberAccess","src":"8991:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8991:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1157,"nodeType":"Block","src":"9321:45:8","statements":[{"expression":{"arguments":[{"id":1154,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"9342:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1153,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9335:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9335:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"9335:20:8"}]},"id":1158,"nodeType":"IfStatement","src":"8987:379:8","trueBody":{"id":1152,"nodeType":"Block","src":"9014:301:8","statements":[{"AST":{"nodeType":"YulBlock","src":"9172:133:8","statements":[{"nodeType":"YulVariableDeclaration","src":"9190:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9219:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9213:5:8"},"nodeType":"YulFunctionCall","src":"9213:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9194:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9258:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9262:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:8"},"nodeType":"YulFunctionCall","src":"9254:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9275:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9247:6:8"},"nodeType":"YulFunctionCall","src":"9247:44:8"},"nodeType":"YulExpressionStatement","src":"9247:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1142,"isOffset":false,"isSlot":false,"src":"9219:10:8","valueSize":1},{"declaration":1142,"isOffset":false,"isSlot":false,"src":"9262:10:8","valueSize":1}],"id":1151,"nodeType":"InlineAssembly","src":"9163:142:8"}]}}]},"id":1160,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8841:7:8","nodeType":"FunctionDefinition","parameters":{"id":1145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"returndata","nameLocation":"8862:10:8","nodeType":"VariableDeclaration","scope":1160,"src":"8849:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"8849:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"errorMessage","nameLocation":"8888:12:8","nodeType":"VariableDeclaration","scope":1160,"src":"8874:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1143,"name":"string","nodeType":"ElementaryTypeName","src":"8874:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8848:53:8"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[],"src":"8915:0:8"},"scope":1161,"src":"8832:540:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1162,"src":"194:9180:8","usedErrors":[]}],"src":"101:9274:8"},"id":8},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol","exportedSymbols":{"StorageSlotUpgradeable":[1271]},"id":1272,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1163,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"193:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlotUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1164,"nodeType":"StructuredDocumentation","src":"218:1201:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"},"fullyImplemented":true,"id":1271,"linearizedBaseContracts":[1271],"name":"StorageSlotUpgradeable","nameLocation":"1428:22:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlotUpgradeable.AddressSlot","id":1167,"members":[{"constant":false,"id":1166,"mutability":"mutable","name":"value","nameLocation":"1494:5:9","nodeType":"VariableDeclaration","scope":1167,"src":"1486:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1464:11:9","nodeType":"StructDefinition","scope":1271,"src":"1457:49:9","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BooleanSlot","id":1170,"members":[{"constant":false,"id":1169,"mutability":"mutable","name":"value","nameLocation":"1546:5:9","nodeType":"VariableDeclaration","scope":1170,"src":"1541:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1168,"name":"bool","nodeType":"ElementaryTypeName","src":"1541:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1519:11:9","nodeType":"StructDefinition","scope":1271,"src":"1512:46:9","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Bytes32Slot","id":1173,"members":[{"constant":false,"id":1172,"mutability":"mutable","name":"value","nameLocation":"1601:5:9","nodeType":"VariableDeclaration","scope":1173,"src":"1593:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1571:11:9","nodeType":"StructDefinition","scope":1271,"src":"1564:49:9","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.Uint256Slot","id":1176,"members":[{"constant":false,"id":1175,"mutability":"mutable","name":"value","nameLocation":"1656:5:9","nodeType":"VariableDeclaration","scope":1176,"src":"1648:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1626:11:9","nodeType":"StructDefinition","scope":1271,"src":"1619:49:9","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.StringSlot","id":1179,"members":[{"constant":false,"id":1178,"mutability":"mutable","name":"value","nameLocation":"1709:5:9","nodeType":"VariableDeclaration","scope":1179,"src":"1702:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1177,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1681:10:9","nodeType":"StructDefinition","scope":1271,"src":"1674:47:9","visibility":"public"},{"canonicalName":"StorageSlotUpgradeable.BytesSlot","id":1182,"members":[{"constant":false,"id":1181,"mutability":"mutable","name":"value","nameLocation":"1760:5:9","nodeType":"VariableDeclaration","scope":1182,"src":"1754:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1180,"name":"bytes","nodeType":"ElementaryTypeName","src":"1754:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1734:9:9","nodeType":"StructDefinition","scope":1271,"src":"1727:45:9","visibility":"public"},{"body":{"id":1192,"nodeType":"Block","src":"1954:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2016:38:9","statements":[{"nodeType":"YulAssignment","src":"2030:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2040:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2030:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1189,"isOffset":false,"isSlot":true,"src":"2030:6:9","suffix":"slot","valueSize":1},{"declaration":1185,"isOffset":false,"isSlot":false,"src":"2040:4:9","valueSize":1}],"id":1191,"nodeType":"InlineAssembly","src":"2007:47:9"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"1778:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1879:14:9","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"slot","nameLocation":"1902:4:9","nodeType":"VariableDeclaration","scope":1193,"src":"1894:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1894:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1893:14:9"},"returnParameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1189,"mutability":"mutable","name":"r","nameLocation":"1951:1:9","nodeType":"VariableDeclaration","scope":1193,"src":"1931:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"},"typeName":{"id":1188,"nodeType":"UserDefinedTypeName","pathNode":{"id":1187,"name":"AddressSlot","nameLocations":["1931:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1167,"src":"1931:11:9"},"referencedDeclaration":1167,"src":"1931:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1167_storage_ptr","typeString":"struct StorageSlotUpgradeable.AddressSlot"}},"visibility":"internal"}],"src":"1930:23:9"},"scope":1271,"src":"1870:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"2242:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2304:38:9","statements":[{"nodeType":"YulAssignment","src":"2318:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2328:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2318:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1200,"isOffset":false,"isSlot":true,"src":"2318:6:9","suffix":"slot","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"2328:4:9","valueSize":1}],"id":1202,"nodeType":"InlineAssembly","src":"2295:47:9"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"2066:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2167:14:9","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"slot","nameLocation":"2190:4:9","nodeType":"VariableDeclaration","scope":1204,"src":"2182:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2182:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2181:14:9"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"r","nameLocation":"2239:1:9","nodeType":"VariableDeclaration","scope":1204,"src":"2219:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1170_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"BooleanSlot","nameLocations":["2219:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1170,"src":"2219:11:9"},"referencedDeclaration":1170,"src":"2219:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1170_storage_ptr","typeString":"struct StorageSlotUpgradeable.BooleanSlot"}},"visibility":"internal"}],"src":"2218:23:9"},"scope":1271,"src":"2158:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"2530:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2592:38:9","statements":[{"nodeType":"YulAssignment","src":"2606:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2616:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2606:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1211,"isOffset":false,"isSlot":true,"src":"2606:6:9","suffix":"slot","valueSize":1},{"declaration":1207,"isOffset":false,"isSlot":false,"src":"2616:4:9","valueSize":1}],"id":1213,"nodeType":"InlineAssembly","src":"2583:47:9"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"2354:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2455:14:9","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"slot","nameLocation":"2478:4:9","nodeType":"VariableDeclaration","scope":1215,"src":"2470:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2470:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2469:14:9"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"r","nameLocation":"2527:1:9","nodeType":"VariableDeclaration","scope":1215,"src":"2507:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1173_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"},"typeName":{"id":1210,"nodeType":"UserDefinedTypeName","pathNode":{"id":1209,"name":"Bytes32Slot","nameLocations":["2507:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1173,"src":"2507:11:9"},"referencedDeclaration":1173,"src":"2507:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1173_storage_ptr","typeString":"struct StorageSlotUpgradeable.Bytes32Slot"}},"visibility":"internal"}],"src":"2506:23:9"},"scope":1271,"src":"2446:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"2818:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2880:38:9","statements":[{"nodeType":"YulAssignment","src":"2894:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2904:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2894:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1222,"isOffset":false,"isSlot":true,"src":"2894:6:9","suffix":"slot","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"2904:4:9","valueSize":1}],"id":1224,"nodeType":"InlineAssembly","src":"2871:47:9"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"2642:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2743:14:9","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"slot","nameLocation":"2766:4:9","nodeType":"VariableDeclaration","scope":1226,"src":"2758:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2758:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2757:14:9"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"r","nameLocation":"2815:1:9","nodeType":"VariableDeclaration","scope":1226,"src":"2795:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1176_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"},"typeName":{"id":1221,"nodeType":"UserDefinedTypeName","pathNode":{"id":1220,"name":"Uint256Slot","nameLocations":["2795:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1176,"src":"2795:11:9"},"referencedDeclaration":1176,"src":"2795:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1176_storage_ptr","typeString":"struct StorageSlotUpgradeable.Uint256Slot"}},"visibility":"internal"}],"src":"2794:23:9"},"scope":1271,"src":"2734:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"3103:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3165:38:9","statements":[{"nodeType":"YulAssignment","src":"3179:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3189:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3179:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1233,"isOffset":false,"isSlot":true,"src":"3179:6:9","suffix":"slot","valueSize":1},{"declaration":1229,"isOffset":false,"isSlot":false,"src":"3189:4:9","valueSize":1}],"id":1235,"nodeType":"InlineAssembly","src":"3156:47:9"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"2930:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3030:13:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"slot","nameLocation":"3052:4:9","nodeType":"VariableDeclaration","scope":1237,"src":"3044:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3044:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3043:14:9"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"r","nameLocation":"3100:1:9","nodeType":"VariableDeclaration","scope":1237,"src":"3081:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1179_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"StringSlot","nameLocations":["3081:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"3081:10:9"},"referencedDeclaration":1179,"src":"3081:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1179_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3080:22:9"},"scope":1271,"src":"3021:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"3411:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3473:44:9","statements":[{"nodeType":"YulAssignment","src":"3487:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3497:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3487:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1244,"isOffset":false,"isSlot":true,"src":"3487:6:9","suffix":"slot","valueSize":1},{"declaration":1240,"isOffset":false,"isSlot":true,"src":"3497:10:9","suffix":"slot","valueSize":1}],"id":1246,"nodeType":"InlineAssembly","src":"3464:53:9"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3215:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3330:13:9","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"store","nameLocation":"3359:5:9","nodeType":"VariableDeclaration","scope":1248,"src":"3344:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1239,"name":"string","nodeType":"ElementaryTypeName","src":"3344:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3343:22:9"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"r","nameLocation":"3408:1:9","nodeType":"VariableDeclaration","scope":1248,"src":"3389:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1179_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"},"typeName":{"id":1243,"nodeType":"UserDefinedTypeName","pathNode":{"id":1242,"name":"StringSlot","nameLocations":["3389:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1179,"src":"3389:10:9"},"referencedDeclaration":1179,"src":"3389:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1179_storage_ptr","typeString":"struct StorageSlotUpgradeable.StringSlot"}},"visibility":"internal"}],"src":"3388:22:9"},"scope":1271,"src":"3321:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"3699:106:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3761:38:9","statements":[{"nodeType":"YulAssignment","src":"3775:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3785:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3775:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1255,"isOffset":false,"isSlot":true,"src":"3775:6:9","suffix":"slot","valueSize":1},{"declaration":1251,"isOffset":false,"isSlot":false,"src":"3785:4:9","valueSize":1}],"id":1257,"nodeType":"InlineAssembly","src":"3752:47:9"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"3529:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3628:12:9","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"slot","nameLocation":"3649:4:9","nodeType":"VariableDeclaration","scope":1259,"src":"3641:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1250,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3641:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3640:14:9"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"r","nameLocation":"3696:1:9","nodeType":"VariableDeclaration","scope":1259,"src":"3678:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1182_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1254,"nodeType":"UserDefinedTypeName","pathNode":{"id":1253,"name":"BytesSlot","nameLocations":["3678:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"3678:9:9"},"referencedDeclaration":1182,"src":"3678:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1182_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3677:21:9"},"scope":1271,"src":"3619:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"4002:112:9","statements":[{"AST":{"nodeType":"YulBlock","src":"4064:44:9","statements":[{"nodeType":"YulAssignment","src":"4078:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4088:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4078:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1266,"isOffset":false,"isSlot":true,"src":"4078:6:9","suffix":"slot","valueSize":1},{"declaration":1262,"isOffset":false,"isSlot":true,"src":"4088:10:9","suffix":"slot","valueSize":1}],"id":1268,"nodeType":"InlineAssembly","src":"4055:53:9"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"3811:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3924:12:9","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"store","nameLocation":"3951:5:9","nodeType":"VariableDeclaration","scope":1270,"src":"3937:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1261,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3936:21:9"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"r","nameLocation":"3999:1:9","nodeType":"VariableDeclaration","scope":1270,"src":"3981:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1182_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"},"typeName":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"BytesSlot","nameLocations":["3981:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1182,"src":"3981:9:9"},"referencedDeclaration":1182,"src":"3981:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1182_storage_ptr","typeString":"struct StorageSlotUpgradeable.BytesSlot"}},"visibility":"internal"}],"src":"3980:21:9"},"scope":1271,"src":"3915:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1272,"src":"1420:2696:9","usedErrors":[]}],"src":"193:3924:9"},"id":9},"contracts/TestContract.sol":{"ast":{"absolutePath":"contracts/TestContract.sol","exportedSymbols":{"TestContract":[1310]},"id":1311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1273,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"TestContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1310,"linearizedBaseContracts":[1310],"name":"TestContract","nameLocation":"66:12:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"02d91518","id":1275,"mutability":"mutable","name":"param1","nameLocation":"120:6:10","nodeType":"VariableDeclaration","scope":1310,"src":"108:18:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1274,"name":"uint","nodeType":"ElementaryTypeName","src":"108:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1f049b68","id":1277,"mutability":"mutable","name":"param2","nameLocation":"146:6:10","nodeType":"VariableDeclaration","scope":1310,"src":"132:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1276,"name":"string","nodeType":"ElementaryTypeName","src":"132:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":1292,"nodeType":"Block","src":"247:59:10","statements":[{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"257:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1285,"name":"_param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"266:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"257:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1287,"nodeType":"ExpressionStatement","src":"257:16:10"},{"expression":{"id":1290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1288,"name":"param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"283:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1289,"name":"_param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"292:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"283:16:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1291,"nodeType":"ExpressionStatement","src":"283:16:10"}]},"id":1293,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"_param1","nameLocation":"215:7:10","nodeType":"VariableDeclaration","scope":1293,"src":"210:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1278,"name":"uint","nodeType":"ElementaryTypeName","src":"210:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"_param2","nameLocation":"238:7:10","nodeType":"VariableDeclaration","scope":1293,"src":"224:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1280,"name":"string","nodeType":"ElementaryTypeName","src":"224:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"209:37:10"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"247:0:10"},"scope":1310,"src":"198:108:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1308,"nodeType":"Block","src":"441:65:10","statements":[{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"451:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1301,"name":"_newParam1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"460:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"451:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"451:19:10"},{"expression":{"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1304,"name":"param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"480:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1305,"name":"_newParam2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"489:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"480:19:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1307,"nodeType":"ExpressionStatement","src":"480:19:10"}]},"functionSelector":"82c0a340","id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"updateParams","nameLocation":"378:12:10","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"_newParam1","nameLocation":"396:10:10","nodeType":"VariableDeclaration","scope":1309,"src":"391:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint","nodeType":"ElementaryTypeName","src":"391:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"_newParam2","nameLocation":"422:10:10","nodeType":"VariableDeclaration","scope":1309,"src":"408:24:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"408:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"390:43:10"},"returnParameters":{"id":1299,"nodeType":"ParameterList","parameters":[],"src":"441:0:10"},"scope":1310,"src":"369:137:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1311,"src":"57:451:10","usedErrors":[]}],"src":"32:476:10"},"id":10},"contracts/TestUpgradableContract.sol":{"ast":{"absolutePath":"contracts/TestUpgradableContract.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ERC1967UpgradeUpgradeable":[354],"IBeaconUpgradeable":[364],"IERC1822ProxiableUpgradeable":[30],"IERC1967Upgradeable":[20],"Initializable":[533],"StorageSlotUpgradeable":[1271],"TestUpgradableContract":[1398],"UUPSUpgradeable":[669]},"id":1399,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1312,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1399,"sourceUnit":534,"src":"56:75:11","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":1314,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1399,"sourceUnit":670,"src":"132:77:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1315,"name":"Initializable","nameLocations":["245:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"245:13:11"},"id":1316,"nodeType":"InheritanceSpecifier","src":"245:13:11"},{"baseName":{"id":1317,"name":"UUPSUpgradeable","nameLocations":["260:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"260:15:11"},"id":1318,"nodeType":"InheritanceSpecifier","src":"260:15:11"}],"canonicalName":"TestUpgradableContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1398,"linearizedBaseContracts":[1398,669,354,20,30,533],"name":"TestUpgradableContract","nameLocation":"219:22:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"02d91518","id":1320,"mutability":"mutable","name":"param1","nameLocation":"317:6:11","nodeType":"VariableDeclaration","scope":1398,"src":"305:18:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint","nodeType":"ElementaryTypeName","src":"305:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1f049b68","id":1322,"mutability":"mutable","name":"param2","nameLocation":"343:6:11","nodeType":"VariableDeclaration","scope":1398,"src":"329:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"329:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":1324,"mutability":"mutable","name":"owner","nameLocation":"363:5:11","nodeType":"VariableDeclaration","scope":1398,"src":"355:13:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"functionSelector":"5ccea9a5","id":1326,"mutability":"mutable","name":"param3","nameLocation":"388:6:11","nodeType":"VariableDeclaration","scope":1398,"src":"374:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1325,"name":"string","nodeType":"ElementaryTypeName","src":"374:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"body":{"id":1333,"nodeType":"Block","src":"467:39:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1330,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"477:20:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"477:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1332,"nodeType":"ExpressionStatement","src":"477:22:11"}]},"documentation":{"id":1327,"nodeType":"StructuredDocumentation","src":"400:48:11","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1334,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[],"src":"464:2:11"},"returnParameters":{"id":1329,"nodeType":"ParameterList","parameters":[],"src":"467:0:11"},"scope":1398,"src":"453:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1359,"nodeType":"Block","src":"587:121:11","statements":[{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1343,"name":"param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"597:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1344,"name":"_param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"606:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"597:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ExpressionStatement","src":"597:16:11"},{"expression":{"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1347,"name":"param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"623:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1348,"name":"_param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"632:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"623:16:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1350,"nodeType":"ExpressionStatement","src":"623:16:11"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1351,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"649:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"649:24:11"},{"expression":{"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1354,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"683:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"691:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"695:6:11","memberName":"sender","nodeType":"MemberAccess","src":"691:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"683:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1358,"nodeType":"ExpressionStatement","src":"683:18:11"}]},"functionSelector":"6e9d13ab","id":1360,"implemented":true,"kind":"function","modifiers":[{"id":1341,"kind":"modifierInvocation","modifierName":{"id":1340,"name":"initializer","nameLocations":["575:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":435,"src":"575:11:11"},"nodeType":"ModifierInvocation","src":"575:11:11"}],"name":"initialize","nameLocation":"520:10:11","nodeType":"FunctionDefinition","parameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"_param1","nameLocation":"536:7:11","nodeType":"VariableDeclaration","scope":1360,"src":"531:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint","nodeType":"ElementaryTypeName","src":"531:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"_param2","nameLocation":"559:7:11","nodeType":"VariableDeclaration","scope":1360,"src":"545:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"545:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"530:37:11"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"587:0:11"},"scope":1398,"src":"511:197:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1375,"nodeType":"Block","src":"843:65:11","statements":[{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1367,"name":"param1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"853:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1368,"name":"_newParam1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"862:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"853:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1370,"nodeType":"ExpressionStatement","src":"853:19:11"},{"expression":{"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"param2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"882:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1372,"name":"_newParam2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"891:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"882:19:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1374,"nodeType":"ExpressionStatement","src":"882:19:11"}]},"functionSelector":"82c0a340","id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"updateParams","nameLocation":"780:12:11","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"_newParam1","nameLocation":"798:10:11","nodeType":"VariableDeclaration","scope":1376,"src":"793:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint","nodeType":"ElementaryTypeName","src":"793:4:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"_newParam2","nameLocation":"824:10:11","nodeType":"VariableDeclaration","scope":1376,"src":"810:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1363,"name":"string","nodeType":"ElementaryTypeName","src":"810:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"792:43:11"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"843:0:11"},"scope":1398,"src":"771:137:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1387,"nodeType":"Block","src":"938:104:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"969:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1380,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"978:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"982:6:11","memberName":"sender","nodeType":"MemberAccess","src":"978:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"969:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a656420416363657373","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1002:21:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b552f167d22b6faad15ee76b5f3a907c3fb0e19277e19de90e757debd27ffe","typeString":"literal_string \"Unauthorized Access\""},"value":"Unauthorized Access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77b552f167d22b6faad15ee76b5f3a907c3fb0e19277e19de90e757debd27ffe","typeString":"literal_string \"Unauthorized Access\""}],"id":1378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"948:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"948:76:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"948:76:11"},{"id":1386,"nodeType":"PlaceholderStatement","src":"1034:1:11"}]},"id":1388,"name":"onlyUpgrader","nameLocation":"923:12:11","nodeType":"ModifierDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"935:2:11"},"src":"914:128:11","virtual":false,"visibility":"internal"},{"baseFunctions":[663],"body":{"id":1396,"nodeType":"Block","src":"1161:2:11","statements":[]},"id":1397,"implemented":true,"kind":"function","modifiers":[{"id":1393,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"onlyUpgrader","nameLocations":["1127:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1388,"src":"1127:12:11"},"nodeType":"ModifierInvocation","src":"1127:12:11"}],"name":"_authorizeUpgrade","nameLocation":"1057:17:11","nodeType":"FunctionDefinition","overrides":{"id":1394,"nodeType":"OverrideSpecifier","overrides":[],"src":"1148:8:11"},"parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"newImplementation","nameLocation":"1083:17:11","nodeType":"VariableDeclaration","scope":1397,"src":"1075:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"1075:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1074:27:11"},"returnParameters":{"id":1395,"nodeType":"ParameterList","parameters":[],"src":"1161:0:11"},"scope":1398,"src":"1048:115:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1399,"src":"210:955:11","usedErrors":[]}],"src":"32:1133:11"},"id":11},"contracts/WWANProtocol.sol":{"ast":{"absolutePath":"contracts/WWANProtocol.sol","exportedSymbols":{"AddressUpgradeable":[1161],"ERC1967UpgradeUpgradeable":[354],"IBeaconUpgradeable":[364],"IERC1822ProxiableUpgradeable":[30],"IERC1967Upgradeable":[20],"IERC20Upgradeable":[831],"Initializable":[533],"ReentrancyGuardUpgradeable":[753],"StorageSlotUpgradeable":[1271],"UUPSUpgradeable":[669],"WWANProtocol":[2302]},"id":2303,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1400,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1401,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":534,"src":"57:75:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":1402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":670,"src":"133:77:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol","id":1403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":832,"src":"211:79:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":1404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2303,"sourceUnit":754,"src":"291:85:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1405,"name":"Initializable","nameLocations":["403:13:12"],"nodeType":"IdentifierPath","referencedDeclaration":533,"src":"403:13:12"},"id":1406,"nodeType":"InheritanceSpecifier","src":"403:13:12"},{"baseName":{"id":1407,"name":"UUPSUpgradeable","nameLocations":["418:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"418:15:12"},"id":1408,"nodeType":"InheritanceSpecifier","src":"418:15:12"},{"baseName":{"id":1409,"name":"ReentrancyGuardUpgradeable","nameLocations":["435:26:12"],"nodeType":"IdentifierPath","referencedDeclaration":753,"src":"435:26:12"},"id":1410,"nodeType":"InheritanceSpecifier","src":"435:26:12"}],"canonicalName":"WWANProtocol","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2302,"linearizedBaseContracts":[2302,753,669,354,20,30,533],"name":"WWANProtocol","nameLocation":"387:12:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":1412,"mutability":"mutable","name":"owner","nameLocation":"506:5:12","nodeType":"VariableDeclaration","scope":2302,"src":"491:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"491:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"3013ce29","id":1415,"mutability":"mutable","name":"paymentToken","nameLocation":"542:12:12","nodeType":"VariableDeclaration","scope":2302,"src":"517:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"},"typeName":{"id":1414,"nodeType":"UserDefinedTypeName","pathNode":{"id":1413,"name":"IERC20Upgradeable","nameLocations":["517:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":831,"src":"517:17:12"},"referencedDeclaration":831,"src":"517:17:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"visibility":"public"},{"canonicalName":"WWANProtocol.Agent","id":1428,"members":[{"constant":false,"id":1417,"mutability":"mutable","name":"agentAddress","nameLocation":"596:12:12","nodeType":"VariableDeclaration","scope":1428,"src":"588:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"588:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1419,"mutability":"mutable","name":"metadata","nameLocation":"625:8:12","nodeType":"VariableDeclaration","scope":1428,"src":"618:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1418,"name":"string","nodeType":"ElementaryTypeName","src":"618:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"isActive","nameLocation":"690:8:12","nodeType":"VariableDeclaration","scope":1428,"src":"685:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"685:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"reputation","nameLocation":"716:10:12","nodeType":"VariableDeclaration","scope":1428,"src":"708:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1422,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"supportedTaskTypes","nameLocation":"761:18:12","nodeType":"VariableDeclaration","scope":1428,"src":"736:43:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1426,"keyType":{"id":1424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"744:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"736:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1425,"name":"bool","nodeType":"ElementaryTypeName","src":"755:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"}],"name":"Agent","nameLocation":"572:5:12","nodeType":"StructDefinition","scope":2302,"src":"565:221:12","visibility":"public"},{"canonicalName":"WWANProtocol.Task","id":1447,"members":[{"constant":false,"id":1430,"mutability":"mutable","name":"creator","nameLocation":"822:7:12","nodeType":"VariableDeclaration","scope":1447,"src":"814:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"814:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1432,"mutability":"mutable","name":"assignedAgent","nameLocation":"847:13:12","nodeType":"VariableDeclaration","scope":1447,"src":"839:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"taskType","nameLocation":"878:8:12","nodeType":"VariableDeclaration","scope":1447,"src":"870:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"870:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"taskData","nameLocation":"903:8:12","nodeType":"VariableDeclaration","scope":1447,"src":"896:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1435,"name":"string","nodeType":"ElementaryTypeName","src":"896:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"payment","nameLocation":"970:7:12","nodeType":"VariableDeclaration","scope":1447,"src":"962:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1441,"mutability":"mutable","name":"status","nameLocation":"998:6:12","nodeType":"VariableDeclaration","scope":1447,"src":"987:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"},"typeName":{"id":1440,"nodeType":"UserDefinedTypeName","pathNode":{"id":1439,"name":"TaskStatus","nameLocations":["987:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":1465,"src":"987:10:12"},"referencedDeclaration":1465,"src":"987:10:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"visibility":"internal"},{"constant":false,"id":1443,"mutability":"mutable","name":"signature","nameLocation":"1020:9:12","nodeType":"VariableDeclaration","scope":1447,"src":"1014:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1442,"name":"bytes","nodeType":"ElementaryTypeName","src":"1014:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"collaboratingAgents","nameLocation":"1081:19:12","nodeType":"VariableDeclaration","scope":1447,"src":"1071:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1445,"nodeType":"ArrayTypeName","src":"1071:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"Task","nameLocation":"799:4:12","nodeType":"StructDefinition","scope":2302,"src":"792:340:12","visibility":"public"},{"canonicalName":"WWANProtocol.UserAgentRegistry","id":1459,"members":[{"constant":false,"id":1450,"mutability":"mutable","name":"activeAgents","nameLocation":"1183:12:12","nodeType":"VariableDeclaration","scope":1459,"src":"1173:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1449,"nodeType":"ArrayTypeName","src":"1173:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"isRegistered","nameLocation":"1230:12:12","nodeType":"VariableDeclaration","scope":1459,"src":"1205:37:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1453,"keyType":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"1213:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1205:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1452,"name":"bool","nodeType":"ElementaryTypeName","src":"1224:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"paymentAllowance","nameLocation":"1280:16:12","nodeType":"VariableDeclaration","scope":1459,"src":"1252:44:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1457,"keyType":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1252:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"UserAgentRegistry","nameLocation":"1145:17:12","nodeType":"StructDefinition","scope":2302,"src":"1138:165:12","visibility":"public"},{"canonicalName":"WWANProtocol.TaskStatus","id":1465,"members":[{"id":1460,"name":"Created","nameLocation":"1335:7:12","nodeType":"EnumValue","src":"1335:7:12"},{"id":1461,"name":"Assigned","nameLocation":"1352:8:12","nodeType":"EnumValue","src":"1352:8:12"},{"id":1462,"name":"InProgress","nameLocation":"1370:10:12","nodeType":"EnumValue","src":"1370:10:12"},{"id":1463,"name":"Completed","nameLocation":"1390:9:12","nodeType":"EnumValue","src":"1390:9:12"},{"id":1464,"name":"Disputed","nameLocation":"1409:8:12","nodeType":"EnumValue","src":"1409:8:12"}],"name":"TaskStatus","nameLocation":"1314:10:12","nodeType":"EnumDefinition","src":"1309:114:12"},{"constant":false,"functionSelector":"fd66091e","id":1470,"mutability":"mutable","name":"agents","nameLocation":"1462:6:12","nodeType":"VariableDeclaration","scope":2302,"src":"1429:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent)"},"typeName":{"id":1469,"keyType":{"id":1466,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1429:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent)"},"valueType":{"id":1468,"nodeType":"UserDefinedTypeName","pathNode":{"id":1467,"name":"Agent","nameLocations":["1448:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"1448:5:12"},"referencedDeclaration":1428,"src":"1448:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent"}}},"visibility":"public"},{"constant":false,"functionSelector":"8d977672","id":1475,"mutability":"mutable","name":"tasks","nameLocation":"1506:5:12","nodeType":"VariableDeclaration","scope":2302,"src":"1474:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task)"},"typeName":{"id":1474,"keyType":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1474:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task)"},"valueType":{"id":1473,"nodeType":"UserDefinedTypeName","pathNode":{"id":1472,"name":"Task","nameLocations":["1493:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"1493:4:12"},"referencedDeclaration":1447,"src":"1493:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}}},"visibility":"public"},{"constant":false,"id":1480,"mutability":"mutable","name":"userAgents","nameLocation":"1555:10:12","nodeType":"VariableDeclaration","scope":2302,"src":"1517:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry)"},"typeName":{"id":1479,"keyType":{"id":1476,"name":"address","nodeType":"ElementaryTypeName","src":"1525:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1517:37:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry)"},"valueType":{"id":1478,"nodeType":"UserDefinedTypeName","pathNode":{"id":1477,"name":"UserAgentRegistry","nameLocations":["1536:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"1536:17:12"},"referencedDeclaration":1459,"src":"1536:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"}}},"visibility":"internal"},{"constant":false,"functionSelector":"58671730","id":1482,"mutability":"mutable","name":"taskCounter","nameLocation":"1586:11:12","nodeType":"VariableDeclaration","scope":2302,"src":"1571:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1571:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"da816ca2fc37b9eecec62ae8263008ec6be1afb38dc28bc9c7c51d7e348da9c2","id":1488,"name":"AgentRegistered","nameLocation":"1624:15:12","nodeType":"EventDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1484,"indexed":true,"mutability":"mutable","name":"agentAddress","nameLocation":"1656:12:12","nodeType":"VariableDeclaration","scope":1488,"src":"1640:28:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1483,"name":"address","nodeType":"ElementaryTypeName","src":"1640:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1486,"indexed":false,"mutability":"mutable","name":"metadata","nameLocation":"1677:8:12","nodeType":"VariableDeclaration","scope":1488,"src":"1670:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1485,"name":"string","nodeType":"ElementaryTypeName","src":"1670:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1639:47:12"},"src":"1618:69:12"},{"anonymous":false,"eventSelector":"e04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef","id":1496,"name":"TaskCreated","nameLocation":"1698:11:12","nodeType":"EventDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1490,"indexed":true,"mutability":"mutable","name":"taskId","nameLocation":"1726:6:12","nodeType":"VariableDeclaration","scope":1496,"src":"1710:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"1710:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1492,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"1750:7:12","nodeType":"VariableDeclaration","scope":1496,"src":"1734:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"indexed":false,"mutability":"mutable","name":"taskType","nameLocation":"1767:8:12","nodeType":"VariableDeclaration","scope":1496,"src":"1759:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1759:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1709:67:12"},"src":"1692:85:12"},{"anonymous":false,"eventSelector":"52476d55ecef5cf13caa64038f297fe6bbf865d9584a98b8722a15a6d5db128f","id":1502,"name":"TaskAssigned","nameLocation":"1788:12:12","nodeType":"EventDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"indexed":true,"mutability":"mutable","name":"taskId","nameLocation":"1817:6:12","nodeType":"VariableDeclaration","scope":1502,"src":"1801:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1801:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"1841:5:12","nodeType":"VariableDeclaration","scope":1502,"src":"1825:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1499,"name":"address","nodeType":"ElementaryTypeName","src":"1825:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1800:47:12"},"src":"1782:66:12"},{"anonymous":false,"eventSelector":"04576aed55ed132dfaa5e03bbc10500227270d0b188aec79a7bee1202b29396e","id":1508,"name":"TaskCompleted","nameLocation":"1859:13:12","nodeType":"EventDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"indexed":true,"mutability":"mutable","name":"taskId","nameLocation":"1889:6:12","nodeType":"VariableDeclaration","scope":1508,"src":"1873:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1506,"indexed":false,"mutability":"mutable","name":"signature","nameLocation":"1903:9:12","nodeType":"VariableDeclaration","scope":1508,"src":"1897:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1505,"name":"bytes","nodeType":"ElementaryTypeName","src":"1897:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1872:41:12"},"src":"1853:61:12"},{"anonymous":false,"eventSelector":"b14eafe918ed2ebe411ca6d11c3ef5c8330bf0979fa0384ef0f26b8ed7b50fbf","id":1516,"name":"AgentRegisteredForUser","nameLocation":"1925:22:12","nodeType":"EventDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1964:4:12","nodeType":"VariableDeclaration","scope":1516,"src":"1948:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"indexed":true,"mutability":"mutable","name":"agent","nameLocation":"1986:5:12","nodeType":"VariableDeclaration","scope":1516,"src":"1970:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1511,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1514,"indexed":false,"mutability":"mutable","name":"allowance","nameLocation":"2001:9:12","nodeType":"VariableDeclaration","scope":1516,"src":"1993:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1947:64:12"},"src":"1919:93:12"},{"anonymous":false,"eventSelector":"e3864154f13bb56610560553d549cb6947e9fd199379eefefbeb0f082c6c7ca8","id":1524,"name":"CollaborationRequested","nameLocation":"2023:22:12","nodeType":"EventDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"indexed":true,"mutability":"mutable","name":"taskId","nameLocation":"2062:6:12","nodeType":"VariableDeclaration","scope":1524,"src":"2046:22:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"2046:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1520,"indexed":true,"mutability":"mutable","name":"requestingAgent","nameLocation":"2086:15:12","nodeType":"VariableDeclaration","scope":1524,"src":"2070:31:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"2070:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1522,"indexed":true,"mutability":"mutable","name":"targetAgent","nameLocation":"2119:11:12","nodeType":"VariableDeclaration","scope":1524,"src":"2103:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"2103:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2045:86:12"},"src":"2017:115:12"},{"body":{"id":1531,"nodeType":"Block","src":"2209:39:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1528,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2219:20:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1530,"nodeType":"ExpressionStatement","src":"2219:22:12"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"2142:48:12","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":1532,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"2206:2:12"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"2209:0:12"},"scope":2302,"src":"2195:53:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1556,"nodeType":"Block","src":"2316:160:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1539,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"2326:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1541,"nodeType":"ExpressionStatement","src":"2326:24:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1542,"name":"__ReentrancyGuard_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2360:22:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2360:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"2360:24:12"},{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1545,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"2394:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1546,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2402:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2406:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2402:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2394:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1549,"nodeType":"ExpressionStatement","src":"2394:18:12"},{"expression":{"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"2422:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1552,"name":"_paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1534,"src":"2455:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1551,"name":"IERC20Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"2437:17:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Upgradeable_$831_$","typeString":"type(contract IERC20Upgradeable)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2437:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"src":"2422:47:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":1555,"nodeType":"ExpressionStatement","src":"2422:47:12"}]},"functionSelector":"c4d66de8","id":1557,"implemented":true,"kind":"function","modifiers":[{"id":1537,"kind":"modifierInvocation","modifierName":{"id":1536,"name":"initializer","nameLocations":["2304:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":435,"src":"2304:11:12"},"nodeType":"ModifierInvocation","src":"2304:11:12"}],"name":"initialize","nameLocation":"2263:10:12","nodeType":"FunctionDefinition","parameters":{"id":1535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1534,"mutability":"mutable","name":"_paymentToken","nameLocation":"2282:13:12","nodeType":"VariableDeclaration","scope":1557,"src":"2274:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1533,"name":"address","nodeType":"ElementaryTypeName","src":"2274:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2273:23:12"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"2316:0:12"},"scope":2302,"src":"2254:222:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1637,"nodeType":"Block","src":"2615:515:12","statements":[{"expression":{"arguments":[{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2633:28:12","subExpression":{"expression":{"baseExpression":{"id":1566,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2634:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1569,"indexExpression":{"expression":{"id":1567,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2641:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2645:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2641:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2634:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2653:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"2634:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e7420616c72656164792072656769737465726564","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2663:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c17f52d7f382f39131bc893c7e27e69aa71bee31c68e2de3649b59b8bfebc2b","typeString":"literal_string \"Agent already registered\""},"value":"Agent already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c17f52d7f382f39131bc893c7e27e69aa71bee31c68e2de3649b59b8bfebc2b","typeString":"literal_string \"Agent already registered\""}],"id":1565,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2625:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:65:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1574,"nodeType":"ExpressionStatement","src":"2625:65:12"},{"assignments":[1577],"declarations":[{"constant":false,"id":1577,"mutability":"mutable","name":"newAgent","nameLocation":"2723:8:12","nodeType":"VariableDeclaration","scope":1637,"src":"2709:22:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent"},"typeName":{"id":1576,"nodeType":"UserDefinedTypeName","pathNode":{"id":1575,"name":"Agent","nameLocations":["2709:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":1428,"src":"2709:5:12"},"referencedDeclaration":1428,"src":"2709:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent"}},"visibility":"internal"}],"id":1582,"initialValue":{"baseExpression":{"id":1578,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2734:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1581,"indexExpression":{"expression":{"id":1579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2741:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2745:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2741:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2734:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2709:43:12"},{"expression":{"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1583,"name":"newAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2762:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent storage pointer"}},"id":1585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2771:12:12","memberName":"agentAddress","nodeType":"MemberAccess","referencedDeclaration":1417,"src":"2762:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2786:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2790:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2786:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2762:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1589,"nodeType":"ExpressionStatement","src":"2762:34:12"},{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1590,"name":"newAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2806:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent storage pointer"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2815:8:12","memberName":"metadata","nodeType":"MemberAccess","referencedDeclaration":1419,"src":"2806:17:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1593,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"2826:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2806:29:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1595,"nodeType":"ExpressionStatement","src":"2806:29:12"},{"expression":{"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1596,"name":"newAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2845:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent storage pointer"}},"id":1598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2854:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"2845:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2865:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2845:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1601,"nodeType":"ExpressionStatement","src":"2845:24:12"},{"expression":{"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1602,"name":"newAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2879:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent storage pointer"}},"id":1604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2888:10:12","memberName":"reputation","nodeType":"MemberAccess","referencedDeclaration":1423,"src":"2879:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"313030","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2901:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"2879:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1607,"nodeType":"ExpressionStatement","src":"2879:25:12"},{"body":{"id":1629,"nodeType":"Block","src":"2987:83:12","statements":[{"expression":{"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1619,"name":"newAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"3001:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage_ptr","typeString":"struct WWANProtocol.Agent storage pointer"}},"id":1624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3010:18:12","memberName":"supportedTaskTypes","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"3001:27:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1625,"indexExpression":{"baseExpression":{"id":1621,"name":"_supportedTaskTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"3029:19:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1623,"indexExpression":{"id":1622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"3049:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3029:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3001:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3055:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3001:58:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"ExpressionStatement","src":"3001:58:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1612,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2950:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1613,"name":"_supportedTaskTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"2954:19:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2974:6:12","memberName":"length","nodeType":"MemberAccess","src":"2954:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2950:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1630,"initializationExpression":{"assignments":[1609],"declarations":[{"constant":false,"id":1609,"mutability":"mutable","name":"i","nameLocation":"2943:1:12","nodeType":"VariableDeclaration","scope":1630,"src":"2938:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint","nodeType":"ElementaryTypeName","src":"2938:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1611,"initialValue":{"hexValue":"30","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2947:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2938:10:12"},"loopExpression":{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2982:3:12","subExpression":{"id":1616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"2982:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"2982:3:12"},"nodeType":"ForStatement","src":"2934:136:12"},{"eventCall":{"arguments":[{"expression":{"id":1632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3101:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3105:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3101:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"3113:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1631,"name":"AgentRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"3085:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3085:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"EmitStatement","src":"3080:43:12"}]},"functionSelector":"01730516","id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"registerAgent","nameLocation":"2517:13:12","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"_metadata","nameLocation":"2545:9:12","nodeType":"VariableDeclaration","scope":1638,"src":"2531:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1558,"name":"string","nodeType":"ElementaryTypeName","src":"2531:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"_supportedTaskTypes","nameLocation":"2573:19:12","nodeType":"VariableDeclaration","scope":1638,"src":"2556:36:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2556:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1561,"nodeType":"ArrayTypeName","src":"2556:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2530:63:12"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"2615:0:12"},"scope":2302,"src":"2508:622:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1723,"nodeType":"Block","src":"3256:824:12","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1646,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3274:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1648,"indexExpression":{"id":1647,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3281:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3274:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3296:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"3274:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f74207265676973746572656420696e2073797374656d","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3306:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_232d70120dce5496763a1c6e0d179a36c42e1995059021c72430b41fce510de5","typeString":"literal_string \"Agent not registered in system\""},"value":"Agent not registered in system"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_232d70120dce5496763a1c6e0d179a36c42e1995059021c72430b41fce510de5","typeString":"literal_string \"Agent not registered in system\""}],"id":1645,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3266:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3266:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"3266:73:12"},{"expression":{"arguments":[{"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3357:51:12","subExpression":{"baseExpression":{"expression":{"baseExpression":{"id":1654,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3358:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":1657,"indexExpression":{"expression":{"id":1655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3369:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3373:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3369:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3358:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3381:12:12","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"3358:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1660,"indexExpression":{"id":1659,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3394:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3358:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e7420616c7265616479207265676973746572656420666f722075736572","id":1662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3410:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad212f0e12df3ee85c336ef2857cb0710c423b0fada2a1d957b9e0c112e26237","typeString":"literal_string \"Agent already registered for user\""},"value":"Agent already registered for user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad212f0e12df3ee85c336ef2857cb0710c423b0fada2a1d957b9e0c112e26237","typeString":"literal_string \"Agent already registered for user\""}],"id":1653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3349:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:97:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"3349:97:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1665,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"3519:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3539:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3519:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"IfStatement","src":"3515:215:12","trueBody":{"id":1682,"nodeType":"Block","src":"3542:188:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1671,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3607:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3611:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3607:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1675,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3627:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}],"id":1674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3619:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"3619:7:12","typeDescriptions":{}}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1677,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"3634:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1669,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"3581:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3594:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":830,"src":"3581:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3581:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420616c6c6f77616e6365207472616e73666572206661696c6564","id":1679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3670:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3e1e6f75b6fd627637accde0d8fc388b73588ca3f6cb87b0bb5220b69bc2362","typeString":"literal_string \"Payment allowance transfer failed\""},"value":"Payment allowance transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3e1e6f75b6fd627637accde0d8fc388b73588ca3f6cb87b0bb5220b69bc2362","typeString":"literal_string \"Payment allowance transfer failed\""}],"id":1668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3556:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:163:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1681,"nodeType":"ExpressionStatement","src":"3556:163:12"}]}},{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"registry","nameLocation":"3774:8:12","nodeType":"VariableDeclaration","scope":1723,"src":"3748:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"UserAgentRegistry","nameLocations":["3748:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"3748:17:12"},"referencedDeclaration":1459,"src":"3748:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"}},"visibility":"internal"}],"id":1691,"initialValue":{"baseExpression":{"id":1687,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"3785:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":1690,"indexExpression":{"expression":{"id":1688,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3796:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3800:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3796:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3785:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3748:59:12"},{"expression":{"arguments":[{"id":1697,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3844:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":1692,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3817:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3826:12:12","memberName":"activeAgents","nodeType":"MemberAccess","referencedDeclaration":1450,"src":"3817:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3839:4:12","memberName":"push","nodeType":"MemberAccess","src":"3817:26:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3817:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1699,"nodeType":"ExpressionStatement","src":"3817:41:12"},{"expression":{"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1700,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3868:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3877:12:12","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"3868:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1704,"indexExpression":{"id":1702,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3890:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3868:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3868:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1707,"nodeType":"ExpressionStatement","src":"3868:43:12"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1708,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"3921:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3930:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"3921:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1712,"indexExpression":{"id":1710,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"3947:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3921:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1713,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"3964:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3921:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1715,"nodeType":"ExpressionStatement","src":"3921:60:12"},{"eventCall":{"arguments":[{"expression":{"id":1717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4028:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4032:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4028:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1719,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"4040:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1720,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4055:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"name":"AgentRegisteredForUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4005:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4005:68:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1722,"nodeType":"EmitStatement","src":"4000:73:12"}]},"functionSelector":"c30c4476","id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"registerAgentForUser","nameLocation":"3178:20:12","nodeType":"FunctionDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"_agentAddress","nameLocation":"3207:13:12","nodeType":"VariableDeclaration","scope":1724,"src":"3199:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"3199:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"_paymentAllowance","nameLocation":"3230:17:12","nodeType":"VariableDeclaration","scope":1724,"src":"3222:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:50:12"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[],"src":"3256:0:12"},"scope":2302,"src":"3169:911:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1807,"nodeType":"Block","src":"4232:804:12","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1734,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4250:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1736,"indexExpression":{"id":1735,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4257:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4250:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4272:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"4250:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f74207265676973746572656420696e2073797374656d","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4282:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_232d70120dce5496763a1c6e0d179a36c42e1995059021c72430b41fce510de5","typeString":"literal_string \"Agent not registered in system\""},"value":"Agent not registered in system"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_232d70120dce5496763a1c6e0d179a36c42e1995059021c72430b41fce510de5","typeString":"literal_string \"Agent not registered in system\""}],"id":1733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4242:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"ExpressionStatement","src":"4242:73:12"},{"expression":{"arguments":[{"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4333:46:12","subExpression":{"baseExpression":{"expression":{"baseExpression":{"id":1742,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"4334:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":1744,"indexExpression":{"id":1743,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4345:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4334:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"id":1745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4352:12:12","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"4334:30:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1747,"indexExpression":{"id":1746,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4365:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4334:45:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e7420616c7265616479207265676973746572656420666f722075736572","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4381:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad212f0e12df3ee85c336ef2857cb0710c423b0fada2a1d957b9e0c112e26237","typeString":"literal_string \"Agent already registered for user\""},"value":"Agent already registered for user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad212f0e12df3ee85c336ef2857cb0710c423b0fada2a1d957b9e0c112e26237","typeString":"literal_string \"Agent already registered for user\""}],"id":1741,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4325:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1751,"nodeType":"ExpressionStatement","src":"4325:92:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4490:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4510:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4490:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1769,"nodeType":"IfStatement","src":"4486:210:12","trueBody":{"id":1768,"nodeType":"Block","src":"4513:183:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":1758,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4578:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1761,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4593:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}],"id":1760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4585:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1759,"name":"address","nodeType":"ElementaryTypeName","src":"4585:7:12","typeDescriptions":{}}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1763,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4600:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1756,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"4552:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4565:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":830,"src":"4552:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4552:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e7420616c6c6f77616e6365207472616e73666572206661696c6564","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4636:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f3e1e6f75b6fd627637accde0d8fc388b73588ca3f6cb87b0bb5220b69bc2362","typeString":"literal_string \"Payment allowance transfer failed\""},"value":"Payment allowance transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f3e1e6f75b6fd627637accde0d8fc388b73588ca3f6cb87b0bb5220b69bc2362","typeString":"literal_string \"Payment allowance transfer failed\""}],"id":1755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4527:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4527:158:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1767,"nodeType":"ExpressionStatement","src":"4527:158:12"}]}},{"assignments":[1772],"declarations":[{"constant":false,"id":1772,"mutability":"mutable","name":"registry","nameLocation":"4740:8:12","nodeType":"VariableDeclaration","scope":1807,"src":"4714:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"},"typeName":{"id":1771,"nodeType":"UserDefinedTypeName","pathNode":{"id":1770,"name":"UserAgentRegistry","nameLocations":["4714:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"4714:17:12"},"referencedDeclaration":1459,"src":"4714:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"}},"visibility":"internal"}],"id":1776,"initialValue":{"baseExpression":{"id":1773,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"4751:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":1775,"indexExpression":{"id":1774,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4762:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4751:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4714:54:12"},{"expression":{"arguments":[{"id":1782,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4805:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":1777,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4778:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4787:12:12","memberName":"activeAgents","nodeType":"MemberAccess","referencedDeclaration":1450,"src":"4778:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4800:4:12","memberName":"push","nodeType":"MemberAccess","src":"4778:26:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4778:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"4778:41:12"},{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1785,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4829:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4838:12:12","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"4829:21:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1789,"indexExpression":{"id":1787,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4851:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4829:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4868:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4829:43:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1792,"nodeType":"ExpressionStatement","src":"4829:43:12"},{"expression":{"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1793,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4882:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":1796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4891:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"4882:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1797,"indexExpression":{"id":1795,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4908:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4882:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1798,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4925:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4882:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1800,"nodeType":"ExpressionStatement","src":"4882:60:12"},{"eventCall":{"arguments":[{"id":1802,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4989:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"4996:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1804,"name":"_paymentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"5011:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1801,"name":"AgentRegisteredForUser","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"4966:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1806,"nodeType":"EmitStatement","src":"4961:68:12"}]},"functionSelector":"d174c3e2","id":1808,"implemented":true,"kind":"function","modifiers":[],"name":"registerAgentForOtherUser","nameLocation":"4134:25:12","nodeType":"FunctionDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"_user","nameLocation":"4168:5:12","nodeType":"VariableDeclaration","scope":1808,"src":"4160:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"4160:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"_agentAddress","nameLocation":"4183:13:12","nodeType":"VariableDeclaration","scope":1808,"src":"4175:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1727,"name":"address","nodeType":"ElementaryTypeName","src":"4175:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1730,"mutability":"mutable","name":"_paymentAllowance","nameLocation":"4206:17:12","nodeType":"VariableDeclaration","scope":1808,"src":"4198:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1729,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4159:65:12"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"4232:0:12"},"scope":2302,"src":"4125:911:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1906,"nodeType":"Block","src":"5242:727:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1823,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5260:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5271:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5260:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74206d75737420626520706f736974697665","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5274:26:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_49e339ca1969a698d4932e92d794f50d8f6cca688d434877c6b3c67f12c1b753","typeString":"literal_string \"Payment must be positive\""},"value":"Payment must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_49e339ca1969a698d4932e92d794f50d8f6cca688d434877c6b3c67f12c1b753","typeString":"literal_string \"Payment must be positive\""}],"id":1822,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5252:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5252:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1828,"nodeType":"ExpressionStatement","src":"5252:49:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5407:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5411:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5407:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1836,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5427:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5419:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:12","typeDescriptions":{}}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1838,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5434:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1830,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5381:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":830,"src":"5381:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5381:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5457:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":1829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5360:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5360:132:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1842,"nodeType":"ExpressionStatement","src":"5360:132:12"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"taskId","nameLocation":"5511:6:12","nodeType":"VariableDeclaration","scope":1906,"src":"5503:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"5503:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1847,"initialValue":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5520:13:12","subExpression":{"id":1845,"name":"taskCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"5520:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5503:30:12"},{"assignments":[1850],"declarations":[{"constant":false,"id":1850,"mutability":"mutable","name":"newTask","nameLocation":"5556:7:12","nodeType":"VariableDeclaration","scope":1906,"src":"5543:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"},"typeName":{"id":1849,"nodeType":"UserDefinedTypeName","pathNode":{"id":1848,"name":"Task","nameLocations":["5543:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"5543:4:12"},"referencedDeclaration":1447,"src":"5543:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}},"visibility":"internal"}],"id":1854,"initialValue":{"baseExpression":{"id":1851,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5566:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task storage ref)"}},"id":1853,"indexExpression":{"id":1852,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"5572:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5566:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage","typeString":"struct WWANProtocol.Task storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5543:36:12"},{"expression":{"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1855,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5589:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5597:7:12","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"5589:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1858,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5607:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5611:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5607:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5589:28:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1861,"nodeType":"ExpressionStatement","src":"5589:28:12"},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1862,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5627:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5635:8:12","memberName":"taskType","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"5627:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1865,"name":"_taskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5646:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5627:28:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1867,"nodeType":"ExpressionStatement","src":"5627:28:12"},{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1868,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5665:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5673:8:12","memberName":"taskData","nodeType":"MemberAccess","referencedDeclaration":1436,"src":"5665:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1871,"name":"_taskData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"5684:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5665:28:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1873,"nodeType":"ExpressionStatement","src":"5665:28:12"},{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1874,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5703:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5711:7:12","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"5703:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1877,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"5721:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5703:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"5703:26:12"},{"expression":{"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1880,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5739:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5747:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"5739:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1883,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5756:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5767:7:12","memberName":"Created","nodeType":"MemberAccess","referencedDeclaration":1460,"src":"5756:18:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"5739:35:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"id":1886,"nodeType":"ExpressionStatement","src":"5739:35:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1887,"name":"_collaboratingAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5797:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5818:6:12","memberName":"length","nodeType":"MemberAccess","src":"5797:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5827:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5797:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1898,"nodeType":"IfStatement","src":"5793:112:12","trueBody":{"id":1897,"nodeType":"Block","src":"5830:75:12","statements":[{"expression":{"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1891,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5844:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5852:19:12","memberName":"collaboratingAgents","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"5844:27:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1894,"name":"_collaboratingAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"5874:20:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"5844:50:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1896,"nodeType":"ExpressionStatement","src":"5844:50:12"}]}},{"eventCall":{"arguments":[{"id":1900,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"5932:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1901,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5940:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5944:6:12","memberName":"sender","nodeType":"MemberAccess","src":"5940:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1903,"name":"_taskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5952:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1899,"name":"TaskCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"5920:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5920:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1905,"nodeType":"EmitStatement","src":"5915:47:12"}]},"functionSelector":"de2ddc59","id":1907,"implemented":true,"kind":"function","modifiers":[{"id":1820,"kind":"modifierInvocation","modifierName":{"id":1819,"name":"nonReentrant","nameLocations":["5229:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"5229:12:12"},"nodeType":"ModifierInvocation","src":"5229:12:12"}],"name":"createTask","nameLocation":"5072:10:12","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"_taskType","nameLocation":"5100:9:12","nodeType":"VariableDeclaration","scope":1907,"src":"5092:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1809,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5092:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"_taskData","nameLocation":"5133:9:12","nodeType":"VariableDeclaration","scope":1907,"src":"5119:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"5119:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"_payment","nameLocation":"5160:8:12","nodeType":"VariableDeclaration","scope":1907,"src":"5152:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"5152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"_collaboratingAgents","nameLocation":"5195:20:12","nodeType":"VariableDeclaration","scope":1907,"src":"5178:37:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1815,"name":"address","nodeType":"ElementaryTypeName","src":"5178:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1816,"nodeType":"ArrayTypeName","src":"5178:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5082:139:12"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[],"src":"5242:0:12"},"scope":2302,"src":"5063:906:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1969,"nodeType":"Block","src":"6042:427:12","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1913,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6060:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1916,"indexExpression":{"expression":{"id":1914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6067:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6071:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6067:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6060:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6079:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"6060:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f742072656769737465726564","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6089:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_6b24a63f053c9f60b33a6142346432678adff778fb93a8ecec9013d5a898e395","typeString":"literal_string \"Agent not registered\""},"value":"Agent not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6b24a63f053c9f60b33a6142346432678adff778fb93a8ecec9013d5a898e395","typeString":"literal_string \"Agent not registered\""}],"id":1912,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6052:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6052:60:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1920,"nodeType":"ExpressionStatement","src":"6052:60:12"},{"assignments":[1923],"declarations":[{"constant":false,"id":1923,"mutability":"mutable","name":"task","nameLocation":"6135:4:12","nodeType":"VariableDeclaration","scope":1969,"src":"6122:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"},"typeName":{"id":1922,"nodeType":"UserDefinedTypeName","pathNode":{"id":1921,"name":"Task","nameLocations":["6122:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"6122:4:12"},"referencedDeclaration":1447,"src":"6122:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}},"visibility":"internal"}],"id":1927,"initialValue":{"baseExpression":{"id":1924,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"6142:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task storage ref)"}},"id":1926,"indexExpression":{"id":1925,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6148:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6142:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage","typeString":"struct WWANProtocol.Task storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6122:34:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1929,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"6174:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6179:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"6174:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1931,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6189:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6200:7:12","memberName":"Created","nodeType":"MemberAccess","referencedDeclaration":1460,"src":"6189:18:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"6174:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5461736b206e6f7420617661696c61626c65","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6209:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_aabbf234519d2e6a63315221e02622006e6e4eafa2a86dd4e01c9e6abc92b135","typeString":"literal_string \"Task not available\""},"value":"Task not available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aabbf234519d2e6a63315221e02622006e6e4eafa2a86dd4e01c9e6abc92b135","typeString":"literal_string \"Task not available\""}],"id":1928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6166:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:64:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"6166:64:12"},{"expression":{"arguments":[{"baseExpression":{"expression":{"baseExpression":{"id":1938,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6248:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1941,"indexExpression":{"expression":{"id":1939,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6255:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6259:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6255:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6248:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6267:18:12","memberName":"supportedTaskTypes","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"6248:37:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1945,"indexExpression":{"expression":{"id":1943,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"6286:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6291:8:12","memberName":"taskType","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"6286:13:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6248:52:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5461736b2074797065206e6f7420737570706f72746564","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6302:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_29276fd08182da4d082fac065588c40e01d5fab5ad26f7f3722d8c89708d946b","typeString":"literal_string \"Task type not supported\""},"value":"Task type not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_29276fd08182da4d082fac065588c40e01d5fab5ad26f7f3722d8c89708d946b","typeString":"literal_string \"Task type not supported\""}],"id":1937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6240:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6240:88:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1948,"nodeType":"ExpressionStatement","src":"6240:88:12"},{"expression":{"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1949,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"6339:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6344:13:12","memberName":"assignedAgent","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"6339:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1952,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6360:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6364:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6360:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6339:31:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1955,"nodeType":"ExpressionStatement","src":"6339:31:12"},{"expression":{"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1956,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"6380:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6385:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"6380:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1959,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6394:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6405:8:12","memberName":"Assigned","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"6394:19:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"6380:33:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"id":1962,"nodeType":"ExpressionStatement","src":"6380:33:12"},{"eventCall":{"arguments":[{"id":1964,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"6442:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1965,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6451:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6455:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6451:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1963,"name":"TaskAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"6429:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6429:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1968,"nodeType":"EmitStatement","src":"6424:38:12"}]},"functionSelector":"b8573185","id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"assignTask","nameLocation":"6007:10:12","nodeType":"FunctionDefinition","parameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"_taskId","nameLocation":"6026:7:12","nodeType":"VariableDeclaration","scope":1970,"src":"6018:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"6018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6017:17:12"},"returnParameters":{"id":1911,"nodeType":"ParameterList","parameters":[],"src":"6042:0:12"},"scope":2302,"src":"5998:471:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2051,"nodeType":"Block","src":"6605:703:12","statements":[{"assignments":[1979],"declarations":[{"constant":false,"id":1979,"mutability":"mutable","name":"task","nameLocation":"6628:4:12","nodeType":"VariableDeclaration","scope":2051,"src":"6615:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"},"typeName":{"id":1978,"nodeType":"UserDefinedTypeName","pathNode":{"id":1977,"name":"Task","nameLocations":["6615:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"6615:4:12"},"referencedDeclaration":1447,"src":"6615:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}},"visibility":"internal"}],"id":1983,"initialValue":{"baseExpression":{"id":1980,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"6635:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task storage ref)"}},"id":1982,"indexExpression":{"id":1981,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6641:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6635:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage","typeString":"struct WWANProtocol.Task storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6615:34:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1985,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6667:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6672:13:12","memberName":"assignedAgent","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"6667:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6689:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6693:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6689:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6667:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061737369676e6564206167656e74","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6701:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_295327feaeeafcae24700d8fe169febfca98ecd1448c269acd1d47e441c6a10e","typeString":"literal_string \"Not assigned agent\""},"value":"Not assigned agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_295327feaeeafcae24700d8fe169febfca98ecd1448c269acd1d47e441c6a10e","typeString":"literal_string \"Not assigned agent\""}],"id":1984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6659:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6659:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1992,"nodeType":"ExpressionStatement","src":"6659:63:12"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1994,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"6740:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":1996,"indexExpression":{"id":1995,"name":"_collaboratorAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"6747:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6740:26:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":1997,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6767:8:12","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":1421,"src":"6740:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6c6c61626f7261746f72206e6f742072656769737465726564","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6777:29:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_44f228fcec6054a6a514508b914f424dcc28a60f2a77eb04cac60584d0b69626","typeString":"literal_string \"Collaborator not registered\""},"value":"Collaborator not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44f228fcec6054a6a514508b914f424dcc28a60f2a77eb04cac60584d0b69626","typeString":"literal_string \"Collaborator not registered\""}],"id":1993,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6732:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6732:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"6732:75:12"},{"assignments":[2002],"declarations":[{"constant":false,"id":2002,"mutability":"mutable","name":"isAlreadyCollaborating","nameLocation":"6831:22:12","nodeType":"VariableDeclaration","scope":2051,"src":"6826:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2001,"name":"bool","nodeType":"ElementaryTypeName","src":"6826:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2004,"initialValue":{"hexValue":"66616c7365","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6856:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"6826:35:12"},{"body":{"id":2030,"nodeType":"Block","src":"6930:164:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2017,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6948:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2018,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6953:19:12","memberName":"collaboratingAgents","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"6948:24:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2020,"indexExpression":{"id":2019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6973:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6948:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2021,"name":"_collaboratorAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"6979:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6948:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2029,"nodeType":"IfStatement","src":"6944:140:12","trueBody":{"id":2028,"nodeType":"Block","src":"6999:85:12","statements":[{"expression":{"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2023,"name":"isAlreadyCollaborating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7017:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7042:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7017:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2026,"nodeType":"ExpressionStatement","src":"7017:29:12"},{"id":2027,"nodeType":"Break","src":"7064:5:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":2010,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"6892:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6897:19:12","memberName":"collaboratingAgents","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"6892:24:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6917:6:12","memberName":"length","nodeType":"MemberAccess","src":"6892:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6888:35:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2031,"initializationExpression":{"assignments":[2006],"declarations":[{"constant":false,"id":2006,"mutability":"mutable","name":"i","nameLocation":"6881:1:12","nodeType":"VariableDeclaration","scope":2031,"src":"6876:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint","nodeType":"ElementaryTypeName","src":"6876:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2008,"initialValue":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6885:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6876:10:12"},"loopExpression":{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6925:3:12","subExpression":{"id":2014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6925:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"6925:3:12"},"nodeType":"ForStatement","src":"6871:223:12"},{"condition":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7116:23:12","subExpression":{"id":2032,"name":"isAlreadyCollaborating","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7117:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2043,"nodeType":"IfStatement","src":"7112:103:12","trueBody":{"id":2042,"nodeType":"Block","src":"7141:74:12","statements":[{"expression":{"arguments":[{"id":2039,"name":"_collaboratorAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"7185:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":2034,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1979,"src":"7155:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2037,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7160:19:12","memberName":"collaboratingAgents","nodeType":"MemberAccess","referencedDeclaration":1446,"src":"7155:24:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7180:4:12","memberName":"push","nodeType":"MemberAccess","src":"7155:29:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7155:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2041,"nodeType":"ExpressionStatement","src":"7155:49:12"}]}},{"eventCall":{"arguments":[{"id":2045,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"7261:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7270:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7274:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7270:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2048,"name":"_collaboratorAgent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"7282:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2044,"name":"CollaborationRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"7238:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,address,address)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7238:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2050,"nodeType":"EmitStatement","src":"7233:68:12"}]},"functionSelector":"b053cef3","id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"requestCollaboration","nameLocation":"6532:20:12","nodeType":"FunctionDefinition","parameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"_taskId","nameLocation":"6561:7:12","nodeType":"VariableDeclaration","scope":2052,"src":"6553:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"6553:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"_collaboratorAgent","nameLocation":"6578:18:12","nodeType":"VariableDeclaration","scope":2052,"src":"6570:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"6570:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6552:45:12"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[],"src":"6605:0:12"},"scope":2302,"src":"6523:785:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2119,"nodeType":"Block","src":"7438:660:12","statements":[{"assignments":[2061],"declarations":[{"constant":false,"id":2061,"mutability":"mutable","name":"task","nameLocation":"7461:4:12","nodeType":"VariableDeclaration","scope":2119,"src":"7448:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"},"typeName":{"id":2060,"nodeType":"UserDefinedTypeName","pathNode":{"id":2059,"name":"Task","nameLocations":["7448:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"7448:4:12"},"referencedDeclaration":1447,"src":"7448:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}},"visibility":"internal"}],"id":2065,"initialValue":{"baseExpression":{"id":2062,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"7468:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task storage ref)"}},"id":2064,"indexExpression":{"id":2063,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"7474:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7468:14:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage","typeString":"struct WWANProtocol.Task storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7448:34:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2067,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7500:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7505:13:12","memberName":"assignedAgent","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"7500:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2069,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7522:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7526:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7522:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7500:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742061737369676e6564206167656e74","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7534:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_295327feaeeafcae24700d8fe169febfca98ecd1448c269acd1d47e441c6a10e","typeString":"literal_string \"Not assigned agent\""},"value":"Not assigned agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_295327feaeeafcae24700d8fe169febfca98ecd1448c269acd1d47e441c6a10e","typeString":"literal_string \"Not assigned agent\""}],"id":2066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7492:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7492:63:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2074,"nodeType":"ExpressionStatement","src":"7492:63:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2076,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7573:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7578:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"7573:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2078,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7588:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7599:8:12","memberName":"Assigned","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7588:19:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"7573:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2081,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7611:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7616:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"7611:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2083,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7626:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7637:10:12","memberName":"InProgress","nodeType":"MemberAccess","referencedDeclaration":1462,"src":"7626:21:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"7611:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7573:74:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207461736b20737461747573","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7649:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_35c761622bcc8ab75f9adfaf21a4872a39cd06f2745d5488272d29f1f753f270","typeString":"literal_string \"Invalid task status\""},"value":"Invalid task status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_35c761622bcc8ab75f9adfaf21a4872a39cd06f2745d5488272d29f1f753f270","typeString":"literal_string \"Invalid task status\""}],"id":2075,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7565:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7565:106:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2089,"nodeType":"ExpressionStatement","src":"7565:106:12"},{"expression":{"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2090,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7805:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7810:9:12","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"7805:14:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2093,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"7822:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"7805:27:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":2095,"nodeType":"ExpressionStatement","src":"7805:27:12"},{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2096,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7842:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7847:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"7842:11:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2099,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"7856:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7867:9:12","memberName":"Completed","nodeType":"MemberAccess","referencedDeclaration":1463,"src":"7856:20:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"7842:34:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"id":2102,"nodeType":"ExpressionStatement","src":"7842:34:12"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7967:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7971:6:12","memberName":"sender","nodeType":"MemberAccess","src":"7967:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2108,"name":"task","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"7979:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2109,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7984:7:12","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"7979:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2104,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"7945:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7958:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":798,"src":"7945:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7945:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":2103,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7924:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7924:117:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2113,"nodeType":"ExpressionStatement","src":"7924:117:12"},{"eventCall":{"arguments":[{"id":2115,"name":"_taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8071:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2116,"name":"_signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"8080:10:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2114,"name":"TaskCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"8057:13:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,bytes memory)"}},"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8057:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2118,"nodeType":"EmitStatement","src":"8052:39:12"}]},"functionSelector":"7a2ccd35","id":2120,"implemented":true,"kind":"function","modifiers":[],"name":"completeTask","nameLocation":"7376:12:12","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"_taskId","nameLocation":"7397:7:12","nodeType":"VariableDeclaration","scope":2120,"src":"7389:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2053,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"_signature","nameLocation":"7419:10:12","nodeType":"VariableDeclaration","scope":2120,"src":"7406:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2055,"name":"bytes","nodeType":"ElementaryTypeName","src":"7406:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7388:42:12"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"7438:0:12"},"scope":2302,"src":"7367:731:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2279,"nodeType":"Block","src":"8317:1411:12","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"baseExpression":{"id":2134,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8335:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":2137,"indexExpression":{"expression":{"id":2135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8346:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8350:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8346:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8335:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"id":2138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8358:12:12","memberName":"isRegistered","nodeType":"MemberAccess","referencedDeclaration":1454,"src":"8335:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2140,"indexExpression":{"id":2139,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"8371:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8335:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4167656e74206e6f74207265676973746572656420666f722075736572","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8387:31:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3fe86c99381313e2cbd5508f5099c79ceede1ad07f91af00d72036d122d212c","typeString":"literal_string \"Agent not registered for user\""},"value":"Agent not registered for user"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3fe86c99381313e2cbd5508f5099c79ceede1ad07f91af00d72036d122d212c","typeString":"literal_string \"Agent not registered for user\""}],"id":2133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8327:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8327:92:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2143,"nodeType":"ExpressionStatement","src":"8327:92:12"},{"expression":{"arguments":[{"baseExpression":{"expression":{"baseExpression":{"id":2145,"name":"agents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"8437:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Agent_$1428_storage_$","typeString":"mapping(address => struct WWANProtocol.Agent storage ref)"}},"id":2147,"indexExpression":{"id":2146,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"8444:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8437:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Agent_$1428_storage","typeString":"struct WWANProtocol.Agent storage ref"}},"id":2148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8459:18:12","memberName":"supportedTaskTypes","nodeType":"MemberAccess","referencedDeclaration":1427,"src":"8437:40:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":2150,"indexExpression":{"id":2149,"name":"_taskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"8478:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8437:51:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5461736b2074797065206e6f7420737570706f72746564206279206167656e74","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8490:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8ba94c98ea1439a1681539e9f86b465b3a7539c3636e6c01d073b08bce3684d","typeString":"literal_string \"Task type not supported by agent\""},"value":"Task type not supported by agent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8ba94c98ea1439a1681539e9f86b465b3a7539c3636e6c01d073b08bce3684d","typeString":"literal_string \"Task type not supported by agent\""}],"id":2144,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8429:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8429:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"8429:96:12"},{"assignments":[2156],"declarations":[{"constant":false,"id":2156,"mutability":"mutable","name":"registry","nameLocation":"8570:8:12","nodeType":"VariableDeclaration","scope":2279,"src":"8544:34:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"},"typeName":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"UserAgentRegistry","nameLocations":["8544:17:12"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"8544:17:12"},"referencedDeclaration":1459,"src":"8544:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry"}},"visibility":"internal"}],"id":2161,"initialValue":{"baseExpression":{"id":2157,"name":"userAgents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"8581:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserAgentRegistry_$1459_storage_$","typeString":"mapping(address => struct WWANProtocol.UserAgentRegistry storage ref)"}},"id":2160,"indexExpression":{"expression":{"id":2158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8592:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8592:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8581:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage","typeString":"struct WWANProtocol.UserAgentRegistry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8544:59:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"8689:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8700:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8689:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2180,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"8912:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":2181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8921:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"8912:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2183,"indexExpression":{"id":2182,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"8938:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8912:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8955:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8912:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2214,"nodeType":"Block","src":"9195:81:12","statements":[{"expression":{"arguments":[{"hexValue":"4e6f207061796d656e742070726f766964656420616e64206e6f20616c6c6f77616e636520617661696c61626c65","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9216:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_29aef73df5ee04806812a01ada5c8b93a83bf3cf225ac786367f5950a7ecee05","typeString":"literal_string \"No payment provided and no allowance available\""},"value":"No payment provided and no allowance available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29aef73df5ee04806812a01ada5c8b93a83bf3cf225ac786367f5950a7ecee05","typeString":"literal_string \"No payment provided and no allowance available\""}],"id":2210,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9209:6:12","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9209:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2213,"nodeType":"ExpressionStatement","src":"9209:56:12"}]},"id":2215,"nodeType":"IfStatement","src":"8908:368:12","trueBody":{"id":2209,"nodeType":"Block","src":"8958:231:12","statements":[{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2186,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"9006:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2187,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"9017:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":2188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9026:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"9017:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2190,"indexExpression":{"id":2189,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9043:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9017:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"313030","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9060:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"9017:46:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"expression":{"id":2194,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"9072:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":2195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9081:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"9072:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2197,"indexExpression":{"id":2196,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9098:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9072:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9017:95:12","trueExpression":{"hexValue":"313030","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9066:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9006:106:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2200,"nodeType":"ExpressionStatement","src":"9006:106:12"},{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2201,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"9126:8:12","typeDescriptions":{"typeIdentifier":"t_struct$_UserAgentRegistry_$1459_storage_ptr","typeString":"struct WWANProtocol.UserAgentRegistry storage pointer"}},"id":2204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9135:16:12","memberName":"paymentAllowance","nodeType":"MemberAccess","referencedDeclaration":1458,"src":"9126:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2205,"indexExpression":{"id":2203,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9152:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9126:40:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2206,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"9170:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9126:52:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"9126:52:12"}]}},"id":2216,"nodeType":"IfStatement","src":"8685:591:12","trueBody":{"id":2179,"nodeType":"Block","src":"8703:199:12","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2168,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8798:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8802:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8798:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2172,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8818:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_WWANProtocol_$2302","typeString":"contract WWANProtocol"}],"id":2171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8810:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2170,"name":"address","nodeType":"ElementaryTypeName","src":"8810:7:12","typeDescriptions":{}}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2174,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"8825:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2166,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"8772:12:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Upgradeable_$831","typeString":"contract IERC20Upgradeable"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8785:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":830,"src":"8772:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8772:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74207472616e73666572206661696c6564","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8852:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""},"value":"Payment transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adeff6f69037e9fb0ef79570477b6867fb6b68d030e2356ab44708f4e12ed2fe","typeString":"literal_string \"Payment transfer failed\""}],"id":2165,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8747:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8747:144:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2178,"nodeType":"ExpressionStatement","src":"8747:144:12"}]}},{"assignments":[2218],"declarations":[{"constant":false,"id":2218,"mutability":"mutable","name":"taskId","nameLocation":"9302:6:12","nodeType":"VariableDeclaration","scope":2279,"src":"9294:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"9294:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2221,"initialValue":{"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9311:13:12","subExpression":{"id":2219,"name":"taskCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"9311:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9294:30:12"},{"assignments":[2224],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"newTask","nameLocation":"9347:7:12","nodeType":"VariableDeclaration","scope":2279,"src":"9334:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"},"typeName":{"id":2223,"nodeType":"UserDefinedTypeName","pathNode":{"id":2222,"name":"Task","nameLocations":["9334:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":1447,"src":"9334:4:12"},"referencedDeclaration":1447,"src":"9334:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task"}},"visibility":"internal"}],"id":2228,"initialValue":{"baseExpression":{"id":2225,"name":"tasks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"9357:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Task_$1447_storage_$","typeString":"mapping(uint256 => struct WWANProtocol.Task storage ref)"}},"id":2227,"indexExpression":{"id":2226,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"9363:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9357:13:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage","typeString":"struct WWANProtocol.Task storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9334:36:12"},{"expression":{"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2229,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9380:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9388:7:12","memberName":"creator","nodeType":"MemberAccess","referencedDeclaration":1430,"src":"9380:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2232,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9398:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9402:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9398:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9380:28:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2235,"nodeType":"ExpressionStatement","src":"9380:28:12"},{"expression":{"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2236,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9418:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9426:13:12","memberName":"assignedAgent","nodeType":"MemberAccess","referencedDeclaration":1432,"src":"9418:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2239,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9442:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9418:37:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2241,"nodeType":"ExpressionStatement","src":"9418:37:12"},{"expression":{"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2242,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9465:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9473:8:12","memberName":"taskType","nodeType":"MemberAccess","referencedDeclaration":1434,"src":"9465:16:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2245,"name":"_taskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"9484:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9465:28:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2247,"nodeType":"ExpressionStatement","src":"9465:28:12"},{"expression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2248,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9503:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9511:8:12","memberName":"taskData","nodeType":"MemberAccess","referencedDeclaration":1436,"src":"9503:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2251,"name":"_taskData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"9522:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9503:28:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2253,"nodeType":"ExpressionStatement","src":"9503:28:12"},{"expression":{"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2254,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9541:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2256,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9549:7:12","memberName":"payment","nodeType":"MemberAccess","referencedDeclaration":1438,"src":"9541:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2257,"name":"_payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"9559:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9541:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2259,"nodeType":"ExpressionStatement","src":"9541:26:12"},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2260,"name":"newTask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9577:7:12","typeDescriptions":{"typeIdentifier":"t_struct$_Task_$1447_storage_ptr","typeString":"struct WWANProtocol.Task storage pointer"}},"id":2262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9585:6:12","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":1441,"src":"9577:14:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2263,"name":"TaskStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"9594:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TaskStatus_$1465_$","typeString":"type(enum WWANProtocol.TaskStatus)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9605:8:12","memberName":"Assigned","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"9594:19:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"src":"9577:36:12","typeDescriptions":{"typeIdentifier":"t_enum$_TaskStatus_$1465","typeString":"enum WWANProtocol.TaskStatus"}},"id":2266,"nodeType":"ExpressionStatement","src":"9577:36:12"},{"eventCall":{"arguments":[{"id":2268,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"9641:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2269,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9649:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9653:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9649:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2271,"name":"_taskType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"9661:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2267,"name":"TaskCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"9629:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$returns$__$","typeString":"function (uint256,address,bytes32)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9629:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2273,"nodeType":"EmitStatement","src":"9624:47:12"},{"eventCall":{"arguments":[{"id":2275,"name":"taskId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"9699:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2276,"name":"_agentAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"9707:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2274,"name":"TaskAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"9686:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"EmitStatement","src":"9681:40:12"}]},"functionSelector":"0cfb932f","id":2280,"implemented":true,"kind":"function","modifiers":[{"id":2131,"kind":"modifierInvocation","modifierName":{"id":2130,"name":"nonReentrant","nameLocations":["8304:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":713,"src":"8304:12:12"},"nodeType":"ModifierInvocation","src":"8304:12:12"}],"name":"executeAgentTask","nameLocation":"8154:16:12","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2122,"mutability":"mutable","name":"_agentAddress","nameLocation":"8188:13:12","nodeType":"VariableDeclaration","scope":2280,"src":"8180:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"8180:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2124,"mutability":"mutable","name":"_taskType","nameLocation":"8220:9:12","nodeType":"VariableDeclaration","scope":2280,"src":"8212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8212:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"_taskData","nameLocation":"8254:9:12","nodeType":"VariableDeclaration","scope":2280,"src":"8240:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"8240:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"_payment","nameLocation":"8282:8:12","nodeType":"VariableDeclaration","scope":2280,"src":"8274:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"8274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8170:126:12"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[],"src":"8317:0:12"},"scope":2302,"src":"8145:1583:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2291,"nodeType":"Block","src":"9758:79:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2283,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1412,"src":"9776:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9785:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9789:6:12","memberName":"sender","nodeType":"MemberAccess","src":"9785:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9776:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e617574686f72697a656420416363657373","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9797:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_77b552f167d22b6faad15ee76b5f3a907c3fb0e19277e19de90e757debd27ffe","typeString":"literal_string \"Unauthorized Access\""},"value":"Unauthorized Access"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_77b552f167d22b6faad15ee76b5f3a907c3fb0e19277e19de90e757debd27ffe","typeString":"literal_string \"Unauthorized Access\""}],"id":2282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9768:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9768:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"ExpressionStatement","src":"9768:51:12"},{"id":2290,"nodeType":"PlaceholderStatement","src":"9829:1:12"}]},"id":2292,"name":"onlyUpgrader","nameLocation":"9743:12:12","nodeType":"ModifierDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[],"src":"9755:2:12"},"src":"9734:103:12","virtual":false,"visibility":"internal"},{"baseFunctions":[663],"body":{"id":2300,"nodeType":"Block","src":"9956:2:12","statements":[]},"id":2301,"implemented":true,"kind":"function","modifiers":[{"id":2297,"kind":"modifierInvocation","modifierName":{"id":2296,"name":"onlyUpgrader","nameLocations":["9922:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":2292,"src":"9922:12:12"},"nodeType":"ModifierInvocation","src":"9922:12:12"}],"name":"_authorizeUpgrade","nameLocation":"9852:17:12","nodeType":"FunctionDefinition","overrides":{"id":2298,"nodeType":"OverrideSpecifier","overrides":[],"src":"9943:8:12"},"parameters":{"id":2295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"newImplementation","nameLocation":"9878:17:12","nodeType":"VariableDeclaration","scope":2301,"src":"9870:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9869:27:12"},"returnParameters":{"id":2299,"nodeType":"ParameterList","parameters":[],"src":"9956:0:12"},"scope":2302,"src":"9843:115:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2303,"src":"378:9582:12","usedErrors":[]}],"src":"32:9928:12"},"id":12}},"contracts":{"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol":{"IERC1967Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._","events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol":{"IERC1822ProxiableUpgradeable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol":{"ERC1967UpgradeUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._","kind":"dev","methods":{},"stateVariables":{"_ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."},"_BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."},"_IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."},"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":353,"contract":"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol":{"IBeaconUpgradeable":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","events":{"Initialized(uint8)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"stateVariables":{"_initialized":{"custom:oz-retyped-from":"bool","details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._","kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable state-variable-assignment"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":353,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":668,"contract":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"}],"types":{"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"stateVariables":{"__gap":{"details":"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":683,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":752,"contract":"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable","label":"__gap","offset":0,"slot":"2","type":"t_array(t_uint256)49_storage"}],"types":{"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol":{"IERC20Upgradeable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b1e3be4c5b3b88c3c0cf80d5016514a1a8cec2d1065e8003ff831c61f49c62db64736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE3 0xBE 0x4C JUMPDEST EXTCODESIZE DUP9 0xC3 0xC0 0xCF DUP1 0xD5 ADD PUSH6 0x14A1A8CEC2D1 MOD 0x5E DUP1 SUB SELFDESTRUCT DUP4 SHR PUSH2 0xF49C PUSH3 0xDB6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"194:9180:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol":{"StorageSlotUpgradeable":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d5316a15c9aedf1238b60ad56577f4a69cfc811a6b1f01726800648dfd510cb364736f6c63430008110033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 BALANCE PUSH11 0x15C9AEDF1238B60AD56577 DELEGATECALL 0xA6 SWAP13 0xFC DUP2 BYTE PUSH12 0x1F01726800648DFD510CB364 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"1420:2696:9:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TestContract.sol":{"TestContract":{"abi":[{"inputs":[{"internalType":"uint256","name":"_param1","type":"uint256"},{"internalType":"string","name":"_param2","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"param1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"param2","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newParam1","type":"uint256"},{"internalType":"string","name":"_newParam2","type":"string"}],"name":"updateParams","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":508,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346101f75761061080380380610019816101fc565b9283398101906040818303126101f757805160208083015190926001600160401b039291908382116101f7570192601f918583860112156101f75784518481116101cd57601f1995610070828601881685016101fc565b978289528483830101116101f757839060005b8381106101e35750506000918801015260005584519283116101cd5760019384548581811c911680156101c3575b838210146101ad57838111610167575b50819284116001146101085750508192936000926100fd575b5050600019600383901b1c191690821b1790555b6040516103ee90816102228239f35b0151905038806100da565b6000858152828120918516969193925b87821061015057505083859610610137575b505050811b0190556100ee565b015160001960f88460031b161c1916905538808061012a565b808785968294968601518155019501930190610118565b85600052826000208480870160051c8201928588106101a4575b0160051c019086905b8281106101985750506100c1565b6000815501869061018a565b92508192610181565b634e487b7160e01b600052602260045260246000fd5b90607f16906100b1565b634e487b7160e01b600052604160045260246000fd5b8181018301518a8201840152859201610083565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101cd5760405256fe6080604090808252600436101561001557600080fd5b600090813560e01c90816302d915181461032c575080631f049b6814610216576382c0a3401461004457600080fd5b346102135781600319360112610213576024359167ffffffffffffffff80841161020f573660238501121561020f578360040135918183116101f7575193602092601f199161009a601f83018416860188610380565b818752366024838301011161020b578186926024879301838a013787010152600435845584519182116101f7576001926100d48454610346565b601f8111610193575b508091601f841160011461011957505083948293949261010e575b5050600019600383901b1c191690821b17905580f35b0151905038806100f8565b8486528316957fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6929186905b88821061017c5750508385969710610163575b505050811b01905580f35b015160001960f88460031b161c19169055388080610158565b808785968294968601518155019501930190610145565b8486527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101918386106101ed575b601f0160051c019085905b8281106101e25750506100dd565b8781550185906101d4565b90915081906101c9565b634e487b7160e01b84526041600452602484fd5b8580fd5b8280fd5b80fd5b5090346103285781600319360112610328578051828160019182549261023b84610346565b8084529381811690811561030657506001146102aa575b5061026292509492940384610380565b815192839160208084528251928382860152825b84811061029457505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610276565b8087528691507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8483106102eb5750610262935050810160200138610252565b819350908160209254838589010152019101909184926102d2565b90506020925061026294915060ff191682840152151560051b82010138610252565b5080fd5b905034610328578160031936011261032857602091548152f35b90600182811c92168015610376575b602083101461036057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610355565b90601f8019910116810190811067ffffffffffffffff8211176103a257604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220461b2ac808425dd944acd7c8d69dc35c8f63caaafadd4c62df502e268ffc8ce664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x1F7 JUMPI PUSH2 0x610 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x1FC JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x1F7 JUMPI DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP2 SWAP1 DUP4 DUP3 GT PUSH2 0x1F7 JUMPI ADD SWAP3 PUSH1 0x1F SWAP2 DUP6 DUP4 DUP7 ADD SLT ISZERO PUSH2 0x1F7 JUMPI DUP5 MLOAD DUP5 DUP2 GT PUSH2 0x1CD JUMPI PUSH1 0x1F NOT SWAP6 PUSH2 0x70 DUP3 DUP7 ADD DUP9 AND DUP6 ADD PUSH2 0x1FC JUMP JUMPDEST SWAP8 DUP3 DUP10 MSTORE DUP5 DUP4 DUP4 ADD ADD GT PUSH2 0x1F7 JUMPI DUP4 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E3 JUMPI POP POP PUSH1 0x0 SWAP2 DUP9 ADD ADD MSTORE PUSH1 0x0 SSTORE DUP5 MLOAD SWAP3 DUP4 GT PUSH2 0x1CD JUMPI PUSH1 0x1 SWAP4 DUP5 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x1C3 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH2 0x1AD JUMPI DUP4 DUP2 GT PUSH2 0x167 JUMPI JUMPDEST POP DUP2 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0x108 JUMPI POP POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xFD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP1 DUP2 PUSH2 0x222 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP2 DUP6 AND SWAP7 SWAP2 SWAP4 SWAP3 JUMPDEST DUP8 DUP3 LT PUSH2 0x150 JUMPI POP POP DUP4 DUP6 SWAP7 LT PUSH2 0x137 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xEE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x12A JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x118 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP6 DUP9 LT PUSH2 0x1A4 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x198 JUMPI POP POP PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH2 0x18A JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x181 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xB1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP11 DUP3 ADD DUP5 ADD MSTORE DUP6 SWAP3 ADD PUSH2 0x83 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1CD JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D91518 EQ PUSH2 0x32C JUMPI POP DUP1 PUSH4 0x1F049B68 EQ PUSH2 0x216 JUMPI PUSH4 0x82C0A340 EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x213 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0x20F JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x20F JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH2 0x1F7 JUMPI MLOAD SWAP4 PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP2 PUSH2 0x9A PUSH1 0x1F DUP4 ADD DUP5 AND DUP7 ADD DUP9 PUSH2 0x380 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x20B JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP5 SSTORE DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x1F7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xD4 DUP5 SLOAD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x193 JUMPI JUMPDEST POP DUP1 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x119 JUMPI POP POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x10E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF8 JUMP JUMPDEST DUP5 DUP7 MSTORE DUP4 AND SWAP6 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 SWAP2 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x17C JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 LT PUSH2 0x163 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x158 JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x145 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP7 LT PUSH2 0x1ED JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1E2 JUMPI POP POP PUSH2 0xDD JUMP JUMPDEST DUP8 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x328 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x328 JUMPI DUP1 MLOAD DUP3 DUP2 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x23B DUP5 PUSH2 0x346 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x306 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2AA JUMPI JUMPDEST POP PUSH2 0x262 SWAP3 POP SWAP5 SWAP3 SWAP5 SUB DUP5 PUSH2 0x380 JUMP JUMPDEST DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 DUP3 DUP7 ADD MSTORE DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0x294 JUMPI POP POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP DUP3 ADD PUSH2 0x276 JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 SWAP2 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP5 DUP4 LT PUSH2 0x2EB JUMPI POP PUSH2 0x262 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x252 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x262 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x252 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x328 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x328 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x376 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x360 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x355 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SHL 0x2A 0xC8 ADDMOD TIMESTAMP 0x5D 0xD9 DIFFICULTY 0xAC 0xD7 0xC8 0xD6 SWAP14 0xC3 0x5C DUP16 PUSH4 0xCAAAFADD 0x4C PUSH3 0xDF502E 0x26 DUP16 0xFC DUP13 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:451:10:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:451:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;;-1:-1:-1;57:451:10;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;-1:-1:-1;;;;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;;;-1:-1:-1;;57:451:10;;;-1:-1:-1;;;;;57:451:10;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"extract_byte_array_length":{"entryPoint":838,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":896,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604090808252600436101561001557600080fd5b600090813560e01c90816302d915181461032c575080631f049b6814610216576382c0a3401461004457600080fd5b346102135781600319360112610213576024359167ffffffffffffffff80841161020f573660238501121561020f578360040135918183116101f7575193602092601f199161009a601f83018416860188610380565b818752366024838301011161020b578186926024879301838a013787010152600435845584519182116101f7576001926100d48454610346565b601f8111610193575b508091601f841160011461011957505083948293949261010e575b5050600019600383901b1c191690821b17905580f35b0151905038806100f8565b8486528316957fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6929186905b88821061017c5750508385969710610163575b505050811b01905580f35b015160001960f88460031b161c19169055388080610158565b808785968294968601518155019501930190610145565b8486527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c8101918386106101ed575b601f0160051c019085905b8281106101e25750506100dd565b8781550185906101d4565b90915081906101c9565b634e487b7160e01b84526041600452602484fd5b8580fd5b8280fd5b80fd5b5090346103285781600319360112610328578051828160019182549261023b84610346565b8084529381811690811561030657506001146102aa575b5061026292509492940384610380565b815192839160208084528251928382860152825b84811061029457505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610276565b8087528691507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8483106102eb5750610262935050810160200138610252565b819350908160209254838589010152019101909184926102d2565b90506020925061026294915060ff191682840152151560051b82010138610252565b5080fd5b905034610328578160031936011261032857602091548152f35b90600182811c92168015610376575b602083101461036057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610355565b90601f8019910116810190811067ffffffffffffffff8211176103a257604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220461b2ac808425dd944acd7c8d69dc35c8f63caaafadd4c62df502e268ffc8ce664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x2D91518 EQ PUSH2 0x32C JUMPI POP DUP1 PUSH4 0x1F049B68 EQ PUSH2 0x216 JUMPI PUSH4 0x82C0A340 EQ PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x213 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x213 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0x20F JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x20F JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP2 DUP4 GT PUSH2 0x1F7 JUMPI MLOAD SWAP4 PUSH1 0x20 SWAP3 PUSH1 0x1F NOT SWAP2 PUSH2 0x9A PUSH1 0x1F DUP4 ADD DUP5 AND DUP7 ADD DUP9 PUSH2 0x380 JUMP JUMPDEST DUP2 DUP8 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x20B JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 DUP8 SWAP4 ADD DUP4 DUP11 ADD CALLDATACOPY DUP8 ADD ADD MSTORE PUSH1 0x4 CALLDATALOAD DUP5 SSTORE DUP5 MLOAD SWAP2 DUP3 GT PUSH2 0x1F7 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xD4 DUP5 SLOAD PUSH2 0x346 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x193 JUMPI JUMPDEST POP DUP1 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x119 JUMPI POP POP DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x10E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP3 SHL OR SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF8 JUMP JUMPDEST DUP5 DUP7 MSTORE DUP4 AND SWAP6 PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP3 SWAP2 DUP7 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x17C JUMPI POP POP DUP4 DUP6 SWAP7 SWAP8 LT PUSH2 0x163 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x158 JUMP JUMPDEST DUP1 DUP8 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x145 JUMP JUMPDEST DUP5 DUP7 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP4 DUP7 LT PUSH2 0x1ED JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x1E2 JUMPI POP POP PUSH2 0xDD JUMP JUMPDEST DUP8 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x1D4 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1C9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x328 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x328 JUMPI DUP1 MLOAD DUP3 DUP2 PUSH1 0x1 SWAP2 DUP3 SLOAD SWAP3 PUSH2 0x23B DUP5 PUSH2 0x346 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x306 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2AA JUMPI JUMPDEST POP PUSH2 0x262 SWAP3 POP SWAP5 SWAP3 SWAP5 SUB DUP5 PUSH2 0x380 JUMP JUMPDEST DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP1 DUP5 MSTORE DUP3 MLOAD SWAP3 DUP4 DUP3 DUP7 ADD MSTORE DUP3 JUMPDEST DUP5 DUP2 LT PUSH2 0x294 JUMPI POP POP POP DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP9 DUP3 ADD DUP9 ADD MSTORE DUP8 SWAP6 POP DUP3 ADD PUSH2 0x276 JUMP JUMPDEST DUP1 DUP8 MSTORE DUP7 SWAP2 POP PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 JUMPDEST DUP5 DUP4 LT PUSH2 0x2EB JUMPI POP PUSH2 0x262 SWAP4 POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE PUSH2 0x252 JUMP JUMPDEST DUP2 SWAP4 POP SWAP1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x2D2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x262 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE PUSH2 0x252 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x328 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x328 JUMPI PUSH1 0x20 SWAP2 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x376 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x360 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x355 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x3A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID SHL 0x2A 0xC8 ADDMOD TIMESTAMP 0x5D 0xD9 DIFFICULTY 0xAC 0xD7 0xC8 0xD6 SWAP14 0xC3 0x5C DUP16 PUSH4 0xCAAAFADD 0x4C PUSH3 0xDF502E 0x26 DUP16 0xFC DUP13 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"57:451:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;57:451:10;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;57:451:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;-1:-1:-1;;;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;132:20;;57:451;;;;;;;:::i;:::-;;;;;;;;;132:20;;;;57:451;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;57:451:10;;;;;;;;-1:-1:-1;;57:451:10;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;;;;-1:-1:-1;57:451:10;;;;;;;-1:-1:-1;57:451:10;;-1:-1:-1;;57:451:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"201200","executionCost":"infinite","totalCost":"infinite"},"external":{"param1()":"2264","param2()":"infinite","updateParams(uint256,string)":"infinite"}},"methodIdentifiers":{"param1()":"02d91518","param2()":"1f049b68","updateParams(uint256,string)":"82c0a340"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_param1\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_param2\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"param1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"param2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newParam1\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newParam2\",\"type\":\"string\"}],\"name\":\"updateParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/TestContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract TestContract {\\n    // State variables\\n    uint public param1;\\n    string public param2;\\n\\n    // Constructor with two parameters\\n    constructor(uint _param1, string memory _param2) {\\n        param1 = _param1;\\n        param2 = _param2;\\n    }\\n\\n    // Function to update parameters (for demonstration)\\n    function updateParams(uint _newParam1, string memory _newParam2) public {\\n        param1 = _newParam1;\\n        param2 = _newParam2;\\n    }\\n}\",\"keccak256\":\"0xd2637cb4b12f710e4bfbf378532320c1910dce07b51bced6fc477334b809eb31\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1275,"contract":"contracts/TestContract.sol:TestContract","label":"param1","offset":0,"slot":"0","type":"t_uint256"},{"astId":1277,"contract":"contracts/TestContract.sol:TestContract","label":"param2","offset":0,"slot":"1","type":"t_string_storage"}],"types":{"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/TestUpgradableContract.sol":{"TestUpgradableContract":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"uint256","name":"_param1","type":"uint256"},{"internalType":"string","name":"_param2","type":"string"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"param1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"param2","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"param3","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newParam1","type":"uint256"},{"internalType":"string","name":"_newParam2","type":"string"}],"name":"updateParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b6040516110ed90816100e282396080518181816105940152818161069201526109800152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608060408181526004918236101561001657600080fd5b600091823560e01c91826302d9151814610ceb575081631f049b6814610c535781633659cfe6146109585781634f1ef2861461064157816352d1902d1461057f5781635ccea9a51461049a5781636e9d13ab146101ca57506382c0a3401461007d57600080fd5b346101c75761008b36610e4c565b929060655582519067ffffffffffffffff82116101b457506100ae606654610d07565b601f8111610163575b50602080601f83116001146100f4575082938293926100e9575b50508160011b916000199060031b1c19161760665580f35b0151905038806100d1565b60668452601f19831694600080516020611078833981519152929185905b87821061014b575050836001959610610132575b505050811b0160665580f35b015160001960f88460031b161c19169055388080610126565b80600185968294968601518155019501930190610112565b60668352600080516020611078833981519152601f830160051c810191602084106101aa575b601f0160051c01905b81811061019f57506100b7565b838155600101610192565b9091508190610189565b634e487b7160e01b835260419052602482fd5b80fd5b90508234610496576101db36610e4c565b9084549160ff8360081c161591828093610489575b8015610472575b1561041857600193838560ff198316178955610407575b5060655580519067ffffffffffffffff82116103f4578190610231606654610d07565b601f8111610396575b50602090601f831160011461032957889261031e575b5050600019600383901b1c191690831b176066555b84549260ff8460081c16156102c75750606780546001600160a01b0319163317905561028f578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a18180808380f35b608490602086519162461bcd60e51b8352820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152fd5b015190508780610250565b606689528593506000805160206110788339815191529190601f1984168a5b81811061037e57508411610365575b505050811b01606655610265565b015160001960f88460031b161c19169055878080610357565b82840151855588969094019360209384019301610348565b90915060668852600080516020611078833981519152601f840160051c810191602085106103ea575b84939291601f88920160051c01915b8281106103dc57505061023a565b8a81558594508791016103ce565b90915081906103bf565b634e487b7160e01b875260418552602487fd5b61ffff19166101011787558761020e565b855162461bcd60e51b8152602081870152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101f75750600160ff8516146101f7565b50600160ff8516106101f0565b8280fd5b90503461057b578160031936011261057b57805190826068546104bc81610d07565b8085529160019180831690811561055357506001146104f6575b5050506104e8826104f2940383610d73565b5191829182610d95565b0390f35b9450606885527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977535b82861061053b575050506104e88260206104f295820101946104d6565b8054602087870181019190915290950194810161051e565b6104f29750869350602092506104e894915060ff191682840152151560051b820101946104d6565b5080fd5b8383346101c757806003193601126101c757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036105d957602082516000805160206110988339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b8391508060031936011261049657610657610dde565b9060243567ffffffffffffffff81116109545736602382011215610954576106889036906024818701359101610e15565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906106c230851415610e90565b6106df600080516020611098833981519152948286541614610ef1565b8060675416330361091b577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561072557505050506107229150610f52565b80f35b82516352d1902d60e01b81526020959394918416919086818981865afa8991816108e8575b506107a957855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b969192959493960361089357506107bf85610f52565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a282511580159061088b575b6107fa575b5050505080f35b61087793858083519561080c87610d41565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d15610881573d61086961086082610df9565b92519283610d73565b81528681943d92013e610fe2565b50818080806107f3565b5060609250610fe2565b5060016107ee565b825162461bcd60e51b8152908101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311610914575b6109008183610d73565b810103126109105751908a61074a565b8980fd5b503d6108f6565b825162461bcd60e51b81526020818801526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8480fd5b8391503461049657602080600319360112610c4f57610975610dde565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166109ad30821415610e90565b6109ca600080516020611098833981519152918383541614610ef1565b81606754163303610c16578251908482019282841067ffffffffffffffff851117610c03578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a2f575050505050506107229150610f52565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181610bd0575b50610ab157865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703610b7b5750610ac882610f52565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a285845115801590610b74575b610b06575b50505050505080f35b80610b6896845196610b1788610d41565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15610881573d61086961086082610df9565b50818080808085610afd565b5080610af8565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d8311610bfc575b610be88183610d73565b81010312610bf85751908b610a52565b8a80fd5b503d610bde565b634e487b7160e01b895260418852602489fd5b825162461bcd60e51b81528087018590526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8380fd5b90503461057b578160031936011261057b5780519082606654610c7581610d07565b808552916001918083169081156105535750600114610ca0575050506104e8826104f2940383610d73565b9450606685526000805160206110788339815191525b828610610cd3575050506104e88260206104f295820101946104d6565b80546020878701810191909152909501948101610cb6565b83903461057b578160031936011261057b576020906065548152f35b90600182811c92168015610d37575b6020831014610d2157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d16565b6060810190811067ffffffffffffffff821117610d5d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d5d57604052565b6020808252825181830181905290939260005b828110610dca57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610da8565b600435906001600160a01b0382168203610df457565b600080fd5b67ffffffffffffffff8111610d5d57601f01601f191660200190565b929192610e2182610df9565b91610e2f6040519384610d73565b829481845281830111610df4578281602093846000960137010152565b906040600319830112610df457600435916024359067ffffffffffffffff8211610df45780602383011215610df457816024610e8d93600401359101610e15565b90565b15610e9757565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610ef857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15610f875760008051602061109883398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156110445750815115610ff6575090565b3b15610fff5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156110575750805190602001fd5b60405162461bcd60e51b81529081906110739060048301610d95565b0390fdfe46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220969e41f1a034532c344291dafb1a7d0f7d7f526c9452c1808d8fa62f6cc7ad6f64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10ED SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x594 ADD MSTORE DUP2 DUP2 PUSH2 0x692 ADD MSTORE PUSH2 0x980 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x2D91518 EQ PUSH2 0xCEB JUMPI POP DUP2 PUSH4 0x1F049B68 EQ PUSH2 0xC53 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x958 JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x641 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0x57F JUMPI DUP2 PUSH4 0x5CCEA9A5 EQ PUSH2 0x49A JUMPI DUP2 PUSH4 0x6E9D13AB EQ PUSH2 0x1CA JUMPI POP PUSH4 0x82C0A340 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C7 JUMPI PUSH2 0x8B CALLDATASIZE PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x65 SSTORE DUP3 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1B4 JUMPI POP PUSH2 0xAE PUSH1 0x66 SLOAD PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x163 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF4 JUMPI POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0xE9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x66 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x66 DUP5 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x14B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x132 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x66 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x126 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x66 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1AA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19F JUMPI POP PUSH2 0xB7 JUMP JUMPDEST DUP4 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x192 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x189 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x496 JUMPI PUSH2 0x1DB CALLDATASIZE PUSH2 0xE4C JUMP JUMPDEST SWAP1 DUP5 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x489 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x472 JUMPI JUMPDEST ISZERO PUSH2 0x418 JUMPI PUSH1 0x1 SWAP4 DUP4 DUP6 PUSH1 0xFF NOT DUP4 AND OR DUP10 SSTORE PUSH2 0x407 JUMPI JUMPDEST POP PUSH1 0x65 SSTORE DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3F4 JUMPI DUP2 SWAP1 PUSH2 0x231 PUSH1 0x66 SLOAD PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x396 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x329 JUMPI DUP9 SWAP3 PUSH2 0x31E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR PUSH1 0x66 SSTORE JUMPDEST DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO PUSH2 0x2C7 JUMPI POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x28F JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xFF00 NOT AND DUP6 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x66 DUP10 MSTORE DUP6 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x37E JUMPI POP DUP5 GT PUSH2 0x365 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x66 SSTORE PUSH2 0x265 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x357 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x66 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3EA JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3DC JUMPI POP POP PUSH2 0x23A JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x3CE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE DUP8 PUSH2 0x20E JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP6 AND EQ PUSH2 0x1F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP6 AND LT PUSH2 0x1F0 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x68 SLOAD PUSH2 0x4BC DUP2 PUSH2 0xD07 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x553 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4F6 JUMPI JUMPDEST POP POP POP PUSH2 0x4E8 DUP3 PUSH2 0x4F2 SWAP5 SUB DUP4 PUSH2 0xD73 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD95 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP5 POP PUSH1 0x68 DUP6 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 JUMPDEST DUP3 DUP7 LT PUSH2 0x53B JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH1 0x20 PUSH2 0x4F2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x51E JUMP JUMPDEST PUSH2 0x4F2 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x4E8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1C7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x5D9 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP2 POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x496 JUMPI PUSH2 0x657 PUSH2 0xDDE JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x954 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x954 JUMPI PUSH2 0x688 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x6C2 ADDRESS DUP6 EQ ISZERO PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x6DF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0xEF1 JUMP JUMPDEST DUP1 PUSH1 0x67 SLOAD AND CALLER SUB PUSH2 0x91B JUMPI PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x725 JUMPI POP POP POP POP PUSH2 0x722 SWAP2 POP PUSH2 0xF52 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP6 SWAP4 SWAP5 SWAP2 DUP5 AND SWAP2 SWAP1 DUP7 DUP2 DUP10 DUP2 DUP7 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x8E8 JUMPI JUMPDEST POP PUSH2 0x7A9 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP2 SWAP3 SWAP6 SWAP5 SWAP4 SWAP7 SUB PUSH2 0x893 JUMPI POP PUSH2 0x7BF DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x88B JUMPI JUMPDEST PUSH2 0x7FA JUMPI JUMPDEST POP POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x877 SWAP4 DUP6 DUP1 DUP4 MLOAD SWAP6 PUSH2 0x80C DUP8 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH2 0x869 PUSH2 0x860 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0xFE2 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x7F3 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0xFE2 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7EE JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x914 JUMPI JUMPDEST PUSH2 0x900 DUP2 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x910 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x74A JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8F6 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x496 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4F JUMPI PUSH2 0x975 PUSH2 0xDDE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x9AD ADDRESS DUP3 EQ ISZERO PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x9CA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0xEF1 JUMP JUMPDEST DUP2 PUSH1 0x67 SLOAD AND CALLER SUB PUSH2 0xC16 JUMPI DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0xC03 JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA2F JUMPI POP POP POP POP POP POP PUSH2 0x722 SWAP2 POP PUSH2 0xF52 JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0xBD0 JUMPI JUMPDEST POP PUSH2 0xAB1 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0xB7B JUMPI POP PUSH2 0xAC8 DUP3 PUSH2 0xF52 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB74 JUMPI JUMPDEST PUSH2 0xB06 JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0xB68 SWAP7 DUP5 MLOAD SWAP7 PUSH2 0xB17 DUP9 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH2 0x869 PUSH2 0x860 DUP3 PUSH2 0xDF9 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0xAFD JUMP JUMPDEST POP DUP1 PUSH2 0xAF8 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBFC JUMPI JUMPDEST PUSH2 0xBE8 DUP2 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xBF8 JUMPI MLOAD SWAP1 DUP12 PUSH2 0xA52 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xBDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x66 SLOAD PUSH2 0xC75 DUP2 PUSH2 0xD07 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x553 JUMPI POP PUSH1 0x1 EQ PUSH2 0xCA0 JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH2 0x4F2 SWAP5 SUB DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP5 POP PUSH1 0x66 DUP6 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP7 LT PUSH2 0xCD3 JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH1 0x20 PUSH2 0x4F2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xCB6 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x65 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD37 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD21 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDCA JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDF4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD5D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xE21 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 PUSH2 0xE2F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xD73 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xDF4 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xDF4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDF4 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xDF4 JUMPI DUP2 PUSH1 0x24 PUSH2 0xE8D SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xE15 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEF8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1044 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xFF6 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1057 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1073 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0xD95 JUMP JUMPDEST SUB SWAP1 REVERT INVALID CHAINID POP XOR PUSH26 0xB8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E9 NUMBER SLOAD CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122096 SWAP15 COINBASE CALL LOG0 CALLVALUE MSTORE8 0x2C CALLVALUE TIMESTAMP SWAP2 0xDA 0xFB BYTE PUSH30 0xF7D7F526C9452C1808D8FA62F6CC7AD6F64736F6C634300081100330000 ","sourceMap":"210:955:11:-:0;;;;;;;1332:4:5;1324:13;;6007::4;210:955:11;;;;;;;;;;;;;;6078:31:4;6074:139;;-1:-1:-1;210:955:11;;;;;;;;1324:13:5;210:955:11;;;;;;;;;;;;;;;;6074:139:4;210:955:11;;;;;;6007:13:4;210:955:11;6174:28:4;210:955:11;;;;;;6174:28:4;6074:139;;;210:955:11;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3550,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":3605,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_uint256t_string":{"entryPoint":3660,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_string":{"entryPoint":3477,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":3577,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3335,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3443,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_15127":{"entryPoint":3393,"id":null,"parameterSlots":1,"returnSlots":0},"fun_setImplementation":{"entryPoint":3922,"id":99,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":4066,"id":1116,"parameterSlots":4,"returnSlots":1},"require_helper_stringliteral_36e1":{"entryPoint":3728,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":3825,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"564":[{"length":32,"start":1428},{"length":32,"start":1682},{"length":32,"start":2432}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b600091823560e01c91826302d9151814610ceb575081631f049b6814610c535781633659cfe6146109585781634f1ef2861461064157816352d1902d1461057f5781635ccea9a51461049a5781636e9d13ab146101ca57506382c0a3401461007d57600080fd5b346101c75761008b36610e4c565b929060655582519067ffffffffffffffff82116101b457506100ae606654610d07565b601f8111610163575b50602080601f83116001146100f4575082938293926100e9575b50508160011b916000199060031b1c19161760665580f35b0151905038806100d1565b60668452601f19831694600080516020611078833981519152929185905b87821061014b575050836001959610610132575b505050811b0160665580f35b015160001960f88460031b161c19169055388080610126565b80600185968294968601518155019501930190610112565b60668352600080516020611078833981519152601f830160051c810191602084106101aa575b601f0160051c01905b81811061019f57506100b7565b838155600101610192565b9091508190610189565b634e487b7160e01b835260419052602482fd5b80fd5b90508234610496576101db36610e4c565b9084549160ff8360081c161591828093610489575b8015610472575b1561041857600193838560ff198316178955610407575b5060655580519067ffffffffffffffff82116103f4578190610231606654610d07565b601f8111610396575b50602090601f831160011461032957889261031e575b5050600019600383901b1c191690831b176066555b84549260ff8460081c16156102c75750606780546001600160a01b0319163317905561028f578380f35b7f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989260209261ff001916855551908152a18180808380f35b608490602086519162461bcd60e51b8352820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152fd5b015190508780610250565b606689528593506000805160206110788339815191529190601f1984168a5b81811061037e57508411610365575b505050811b01606655610265565b015160001960f88460031b161c19169055878080610357565b82840151855588969094019360209384019301610348565b90915060668852600080516020611078833981519152601f840160051c810191602085106103ea575b84939291601f88920160051c01915b8281106103dc57505061023a565b8a81558594508791016103ce565b90915081906103bf565b634e487b7160e01b875260418552602487fd5b61ffff19166101011787558761020e565b855162461bcd60e51b8152602081870152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156101f75750600160ff8516146101f7565b50600160ff8516106101f0565b8280fd5b90503461057b578160031936011261057b57805190826068546104bc81610d07565b8085529160019180831690811561055357506001146104f6575b5050506104e8826104f2940383610d73565b5191829182610d95565b0390f35b9450606885527fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977535b82861061053b575050506104e88260206104f295820101946104d6565b8054602087870181019190915290950194810161051e565b6104f29750869350602092506104e894915060ff191682840152151560051b820101946104d6565b5080fd5b8383346101c757806003193601126101c757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036105d957602082516000805160206110988339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b8391508060031936011261049657610657610dde565b9060243567ffffffffffffffff81116109545736602382011215610954576106889036906024818701359101610e15565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169291906106c230851415610e90565b6106df600080516020611098833981519152948286541614610ef1565b8060675416330361091b577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561072557505050506107229150610f52565b80f35b82516352d1902d60e01b81526020959394918416919086818981865afa8991816108e8575b506107a957855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b969192959493960361089357506107bf85610f52565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a282511580159061088b575b6107fa575b5050505080f35b61087793858083519561080c87610d41565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d15610881573d61086961086082610df9565b92519283610d73565b81528681943d92013e610fe2565b50818080806107f3565b5060609250610fe2565b5060016107ee565b825162461bcd60e51b8152908101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311610914575b6109008183610d73565b810103126109105751908a61074a565b8980fd5b503d6108f6565b825162461bcd60e51b81526020818801526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8480fd5b8391503461049657602080600319360112610c4f57610975610dde565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166109ad30821415610e90565b6109ca600080516020611098833981519152918383541614610ef1565b81606754163303610c16578251908482019282841067ffffffffffffffff851117610c03578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610a2f575050505050506107229150610f52565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181610bd0575b50610ab157865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703610b7b5750610ac882610f52565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a285845115801590610b74575b610b06575b50505050505080f35b80610b6896845196610b1788610d41565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15610881573d61086961086082610df9565b50818080808085610afd565b5080610af8565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d8311610bfc575b610be88183610d73565b81010312610bf85751908b610a52565b8a80fd5b503d610bde565b634e487b7160e01b895260418852602489fd5b825162461bcd60e51b81528087018590526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8380fd5b90503461057b578160031936011261057b5780519082606654610c7581610d07565b808552916001918083169081156105535750600114610ca0575050506104e8826104f2940383610d73565b9450606685526000805160206110788339815191525b828610610cd3575050506104e88260206104f295820101946104d6565b80546020878701810191909152909501948101610cb6565b83903461057b578160031936011261057b576020906065548152f35b90600182811c92168015610d37575b6020831014610d2157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d16565b6060810190811067ffffffffffffffff821117610d5d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d5d57604052565b6020808252825181830181905290939260005b828110610dca57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610da8565b600435906001600160a01b0382168203610df457565b600080fd5b67ffffffffffffffff8111610d5d57601f01601f191660200190565b929192610e2182610df9565b91610e2f6040519384610d73565b829481845281830111610df4578281602093846000960137010152565b906040600319830112610df457600435916024359067ffffffffffffffff8211610df45780602383011215610df457816024610e8d93600401359101610e15565b90565b15610e9757565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15610ef857565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15610f875760008051602061109883398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b919290156110445750815115610ff6575090565b3b15610fff5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156110575750805190602001fd5b60405162461bcd60e51b81529081906110739060048301610d95565b0390fdfe46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220969e41f1a034532c344291dafb1a7d0f7d7f526c9452c1808d8fa62f6cc7ad6f64736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x2D91518 EQ PUSH2 0xCEB JUMPI POP DUP2 PUSH4 0x1F049B68 EQ PUSH2 0xC53 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x958 JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x641 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0x57F JUMPI DUP2 PUSH4 0x5CCEA9A5 EQ PUSH2 0x49A JUMPI DUP2 PUSH4 0x6E9D13AB EQ PUSH2 0x1CA JUMPI POP PUSH4 0x82C0A340 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1C7 JUMPI PUSH2 0x8B CALLDATASIZE PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x65 SSTORE DUP3 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1B4 JUMPI POP PUSH2 0xAE PUSH1 0x66 SLOAD PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x163 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF4 JUMPI POP DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0xE9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x66 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x66 DUP5 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP6 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x14B JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x132 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x66 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x126 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x112 JUMP JUMPDEST PUSH1 0x66 DUP4 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1AA JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19F JUMPI POP PUSH2 0xB7 JUMP JUMPDEST DUP4 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x192 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x189 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x496 JUMPI PUSH2 0x1DB CALLDATASIZE PUSH2 0xE4C JUMP JUMPDEST SWAP1 DUP5 SLOAD SWAP2 PUSH1 0xFF DUP4 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x489 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x472 JUMPI JUMPDEST ISZERO PUSH2 0x418 JUMPI PUSH1 0x1 SWAP4 DUP4 DUP6 PUSH1 0xFF NOT DUP4 AND OR DUP10 SSTORE PUSH2 0x407 JUMPI JUMPDEST POP PUSH1 0x65 SSTORE DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3F4 JUMPI DUP2 SWAP1 PUSH2 0x231 PUSH1 0x66 SLOAD PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x396 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x329 JUMPI DUP9 SWAP3 PUSH2 0x31E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR PUSH1 0x66 SSTORE JUMPDEST DUP5 SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND ISZERO PUSH2 0x2C7 JUMPI POP PUSH1 0x67 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x28F JUMPI DUP4 DUP1 RETURN JUMPDEST PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP3 PUSH1 0x20 SWAP3 PUSH2 0xFF00 NOT AND DUP6 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP2 DUP1 DUP1 DUP4 DUP1 RETURN JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x250 JUMP JUMPDEST PUSH1 0x66 DUP10 MSTORE DUP6 SWAP4 POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND DUP11 JUMPDEST DUP2 DUP2 LT PUSH2 0x37E JUMPI POP DUP5 GT PUSH2 0x365 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x66 SSTORE PUSH2 0x265 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x357 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x66 DUP9 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3EA JUMPI JUMPDEST DUP5 SWAP4 SWAP3 SWAP2 PUSH1 0x1F DUP9 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3DC JUMPI POP POP PUSH2 0x23A JUMP JUMPDEST DUP11 DUP2 SSTORE DUP6 SWAP5 POP DUP8 SWAP2 ADD PUSH2 0x3CE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3BF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP8 SSTORE DUP8 PUSH2 0x20E JUMP JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F7 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP6 AND EQ PUSH2 0x1F7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP6 AND LT PUSH2 0x1F0 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x68 SLOAD PUSH2 0x4BC DUP2 PUSH2 0xD07 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x553 JUMPI POP PUSH1 0x1 EQ PUSH2 0x4F6 JUMPI JUMPDEST POP POP POP PUSH2 0x4E8 DUP3 PUSH2 0x4F2 SWAP5 SUB DUP4 PUSH2 0xD73 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xD95 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP5 POP PUSH1 0x68 DUP6 MSTORE PUSH32 0xA2153420D844928B4421650203C77BABC8B33D7F2E7B450E2966DB0C22097753 JUMPDEST DUP3 DUP7 LT PUSH2 0x53B JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH1 0x20 PUSH2 0x4F2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0x51E JUMP JUMPDEST PUSH2 0x4F2 SWAP8 POP DUP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x4E8 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x1C7 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1C7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x5D9 JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 SWAP2 POP DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x496 JUMPI PUSH2 0x657 PUSH2 0xDDE JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x954 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x954 JUMPI PUSH2 0x688 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 DUP8 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x6C2 ADDRESS DUP6 EQ ISZERO PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x6DF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0xEF1 JUMP JUMPDEST DUP1 PUSH1 0x67 SLOAD AND CALLER SUB PUSH2 0x91B JUMPI PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x725 JUMPI POP POP POP POP PUSH2 0x722 SWAP2 POP PUSH2 0xF52 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP6 SWAP4 SWAP5 SWAP2 DUP5 AND SWAP2 SWAP1 DUP7 DUP2 DUP10 DUP2 DUP7 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x8E8 JUMPI JUMPDEST POP PUSH2 0x7A9 JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP2 SWAP3 SWAP6 SWAP5 SWAP4 SWAP7 SUB PUSH2 0x893 JUMPI POP PUSH2 0x7BF DUP6 PUSH2 0xF52 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x88B JUMPI JUMPDEST PUSH2 0x7FA JUMPI JUMPDEST POP POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x877 SWAP4 DUP6 DUP1 DUP4 MLOAD SWAP6 PUSH2 0x80C DUP8 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH2 0x869 PUSH2 0x860 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0xFE2 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x7F3 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0xFE2 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7EE JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x914 JUMPI JUMPDEST PUSH2 0x900 DUP2 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x910 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x74A JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x8F6 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x496 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xC4F JUMPI PUSH2 0x975 PUSH2 0xDDE JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x9AD ADDRESS DUP3 EQ ISZERO PUSH2 0xE90 JUMP JUMPDEST PUSH2 0x9CA PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0xEF1 JUMP JUMPDEST DUP2 PUSH1 0x67 SLOAD AND CALLER SUB PUSH2 0xC16 JUMPI DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0xC03 JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA2F JUMPI POP POP POP POP POP POP PUSH2 0x722 SWAP2 POP PUSH2 0xF52 JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0xBD0 JUMPI JUMPDEST POP PUSH2 0xAB1 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0xB7B JUMPI POP PUSH2 0xAC8 DUP3 PUSH2 0xF52 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB74 JUMPI JUMPDEST PUSH2 0xB06 JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0xB68 SWAP7 DUP5 MLOAD SWAP7 PUSH2 0xB17 DUP9 PUSH2 0xD41 JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x881 JUMPI RETURNDATASIZE PUSH2 0x869 PUSH2 0x860 DUP3 PUSH2 0xDF9 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0xAFD JUMP JUMPDEST POP DUP1 PUSH2 0xAF8 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xBFC JUMPI JUMPDEST PUSH2 0xBE8 DUP2 DUP4 PUSH2 0xD73 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xBF8 JUMPI MLOAD SWAP1 DUP12 PUSH2 0xA52 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xBDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI DUP1 MLOAD SWAP1 DUP3 PUSH1 0x66 SLOAD PUSH2 0xC75 DUP2 PUSH2 0xD07 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x553 JUMPI POP PUSH1 0x1 EQ PUSH2 0xCA0 JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH2 0x4F2 SWAP5 SUB DUP4 PUSH2 0xD73 JUMP JUMPDEST SWAP5 POP PUSH1 0x66 DUP6 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1078 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE JUMPDEST DUP3 DUP7 LT PUSH2 0xCD3 JUMPI POP POP POP PUSH2 0x4E8 DUP3 PUSH1 0x20 PUSH2 0x4F2 SWAP6 DUP3 ADD ADD SWAP5 PUSH2 0x4D6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP8 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP6 ADD SWAP5 DUP2 ADD PUSH2 0xCB6 JUMP JUMPDEST DUP4 SWAP1 CALLVALUE PUSH2 0x57B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x57B JUMPI PUSH1 0x20 SWAP1 PUSH1 0x65 SLOAD DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xD37 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xD21 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xD5D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP2 DUP4 ADD DUP2 SWAP1 MSTORE SWAP1 SWAP4 SWAP3 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xDCA JUMPI POP POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 ADD DUP7 ADD MLOAD DUP5 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDF4 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xD5D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xE21 DUP3 PUSH2 0xDF9 JUMP JUMPDEST SWAP2 PUSH2 0xE2F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xD73 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xDF4 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xDF4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xDF4 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xDF4 JUMPI DUP2 PUSH1 0x24 PUSH2 0xE8D SWAP4 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xE15 JUMP JUMPDEST SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xE97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xEF8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0xF87 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1098 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x1044 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xFF6 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1057 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x1073 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0xD95 JUMP JUMPDEST SUB SWAP1 REVERT INVALID CHAINID POP XOR PUSH26 0xB8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E9 NUMBER SLOAD CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA264697066735822122096 SWAP15 COINBASE CALL LOG0 CALLVALUE MSTORE8 0x2C CALLVALUE TIMESTAMP SWAP2 0xDA 0xFB BYTE PUSH30 0xF7D7F526C9452C1808D8FA62F6CC7AD6F64736F6C634300081100330000 ","sourceMap":"210:955:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;853:19;210:955;;;;;;;;;;;882:19;210:955;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19;210:955;;;;;;;-1:-1:-1;210:955:11;;;;;882:19;210:955;;-1:-1:-1;;210:955:11;;;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;882:19;210:955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;882:19;210:955;;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;210:955:11;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;971:66:2;210:955:11;;;971:66:2;3301:14:4;3347:34;;;;;;210:955:11;3346:108:4;;;;210:955:11;;;;3551:1:4;210:955:11;;;;;;;;;;3562:65:4;;210:955:11;;597:16;210:955;;;;;;;;;;;;623:16;210:955;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;210:955:11;;;;;;;;;;;623:16;210:955;;;;;971:66:2;210:955:11;;;971:66:2;210:955:11;;;-1:-1:-1;683:18:11;210:955;;-1:-1:-1;;;;;;210:955:11;691:10;210:955;;;3647:99:4;;210:955:11;;;3647:99:4;3721:14;210:955:11;;;;;;;;;;;;3721:14:4;3647:99;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;-1:-1:-1;210:955:11;;;;;623:16;210:955;;;;-1:-1:-1;;;;;;;;;;;;210:955:11;;-1:-1:-1;;210:955:11;;;;;;;;;;;-1:-1:-1;210:955:11;;;;;;;;;623:16;210:955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:16;210:955;;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;210:955:11;;;;;;;;-1:-1:-1;210:955:11;;;;;-1:-1:-1;;;210:955:11;;;;;;;;3562:65:4;-1:-1:-1;;210:955:11;;;;;3562:65:4;;;210:955:11;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;3346:108:4;3426:4;;1713:19:8;:23;3387:66:4;;3346:108;3387:66;971::2;3452:1:4;971:66:2;;;3436:17:4;3346:108;;3347:34;971:66:2;3380:1:4;971:66:2;;;3365:16:4;3347:34;;210:955:11;;;;;;;;;;;;;;;;;;;;;;374:20;210:955;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;374:20;210:955;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:5;-1:-1:-1;;;;;210:955:11;2324:4:5;2316:23;210:955:11;;;;;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:5;210:955:11;;;;;1873:80:5;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;1971:30:5;1963:87;:::i;:::-;210:955:11;969:5;210:955;;978:10;969:19;210:955;;971:66:2;;;;;;;3330:17;;;;;;;;:::i;:::-;210:955:11;;3232:526:2;210:955:11;;-1:-1:-1;;;3383:63:2;;;;210:955:11;;;;;;;3383:63:2;210:955:11;3383:63:2;210:955:11;;3383:63:2;;;;;;;3232:526;-1:-1:-1;3379:302:2;;210:955:11;;-1:-1:-1;;;3610:56:2;;;;;971:66;;;;210:955:11;971:66:2;;210:955:11;971:66:2;210:955:11;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;3610:56;3379:302;3496:28;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;210:955:11;;2523:15:2;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;210:955:11;;2519:123:2;7318:69:8;210:955:11;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;210:955:11;;;;7276:25:8;;;;;;;;;210:955:11;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;7318:69:8;:::i;:::-;;2519:123:2;;;;;;210:955:11;-1:-1:-1;210:955:11;;-1:-1:-1;7318:69:8;:::i;2523:28:2:-;;210:955:11;2523:28:2;;971:66;210:955:11;;-1:-1:-1;;;971:66:2;;;;;;;;;210:955:11;971:66:2;;210:955:11;971:66:2;210:955:11;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;210:955:11;;;3383:63:2;;;;;210:955:11;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1898:6:5;210:955:11;;1873:80:5;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;1971:30:5;1963:87;:::i;:::-;210:955:11;969:5;210:955;;978:10;969:19;210:955;;;;;;;;;;;;;;;;;;;;;;;;971:66:2;;;;;;;3330:17;;;;;;;;;;:::i;3232:526::-;210:955:11;;;;;;;;;;971:66:2;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:2;;210:955:11;;-1:-1:-1;;;3610:56:2;;;;;971:66;;;;;;;210:955:11;971:66:2;210:955:11;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;210:955:11;;;2523:15:2;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;;210:955:11;;2519:123:2;210:955:11;7318:69:8;210:955:11;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;210:955:11;;;;7276:25:8;;;;;;210:955:11;;;;;;;;;:::i;7318:69:8:-;;2519:123:2;;;;;;;;2523:28;;;;;971:66;210:955:11;;-1:-1:-1;;;971:66:2;;;;;;;;;;;;210:955:11;971:66:2;210:955:11;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;210:955:11;;;3383:63:2;;;;;210:955:11;-1:-1:-1;;;210:955:11;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;329:20;210:955;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;329:20;210:955;;-1:-1:-1;;;;;;;;;;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;305:18;210:955;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;210:955:11;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;210:955:11;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;210:955:11;;;;;;:::o;:::-;;;-1:-1:-1;;210:955:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;1699:281:2;1713:19:8;;:23;210:955:11;;-1:-1:-1;;;;;;;;;;;210:955:11;;-1:-1:-1;;;;;;210:955:11;-1:-1:-1;;;;;210:955:11;;;;;;;;;1699:281:2:o;210:955:11:-;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;210:955:11;;;;;;;7682:628:8;;;;7886:418;;;210:955:11;;;7917:22:8;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;210:955:11;;8212:17:8;:::o;210:955:11:-;;;-1:-1:-1;;;210:955:11;;;;;;;;;;;;;;;;;;;;7886:418:8;210:955:11;;;;-1:-1:-1;8991:21:8;:17;;9163:142;;;;;;;8987:379;210:955:11;;-1:-1:-1;;;9335:20:8;;210:955:11;;;9335:20:8;;;;;;:::i;:::-;;;"},"gasEstimates":{"creation":{"codeDepositCost":"866600","executionCost":"infinite","totalCost":"infinite"},"external":{"initialize(uint256,string)":"infinite","param1()":"2271","param2()":"infinite","param3()":"infinite","proxiableUUID()":"infinite","updateParams(uint256,string)":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"initialize(uint256,string)":"6e9d13ab","param1()":"02d91518","param2()":"1f049b68","param3()":"5ccea9a5","proxiableUUID()":"52d1902d","updateParams(uint256,string)":"82c0a340","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_param1\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_param2\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"param1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"param2\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"param3\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newParam1\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newParam2\",\"type\":\"string\"}],\"name\":\"updateParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestUpgradableContract.sol\":\"TestUpgradableContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/TestUpgradableContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\ncontract TestUpgradableContract is Initializable, UUPSUpgradeable {\\n    // State variables\\n    uint public param1;\\n    string public param2;\\n    address owner;\\n    string public param3;\\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n    function initialize(uint _param1, string memory _param2) public initializer {\\n        param1 = _param1;\\n        param2 = _param2;\\n        __UUPSUpgradeable_init();\\n        owner = msg.sender;\\n    }\\n\\n    // Function to update parameters (for demonstration)\\n    function updateParams(uint _newParam1, string memory _newParam2) public {\\n        param1 = _newParam1;\\n        param2 = _newParam2;\\n    }\\n\\n    modifier onlyUpgrader() {\\n        require(\\n            owner == msg.sender,\\n            \\\"Unauthorized Access\\\");\\n        _;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation)\\n        internal\\n        onlyUpgrader\\n        override\\n    {}\\n}\",\"keccak256\":\"0x9753e285df6070eceb1a2e483dbc5735ef990252a30c72b1d3e5eadcfc7f0c15\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":353,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":668,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":1320,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"param1","offset":0,"slot":"101","type":"t_uint256"},{"astId":1322,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"param2","offset":0,"slot":"102","type":"t_string_storage"},{"astId":1324,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"owner","offset":0,"slot":"103","type":"t_address"},{"astId":1326,"contract":"contracts/TestUpgradableContract.sol:TestUpgradableContract","label":"param3","offset":0,"slot":"104","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/WWANProtocol.sol":{"WWANProtocol":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"agentAddress","type":"address"},{"indexed":false,"internalType":"string","name":"metadata","type":"string"}],"name":"AgentRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"agent","type":"address"},{"indexed":false,"internalType":"uint256","name":"allowance","type":"uint256"}],"name":"AgentRegisteredForUser","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"taskId","type":"uint256"},{"indexed":true,"internalType":"address","name":"requestingAgent","type":"address"},{"indexed":true,"internalType":"address","name":"targetAgent","type":"address"}],"name":"CollaborationRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"taskId","type":"uint256"},{"indexed":true,"internalType":"address","name":"agent","type":"address"}],"name":"TaskAssigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"taskId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"signature","type":"bytes"}],"name":"TaskCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"taskId","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"},{"indexed":false,"internalType":"bytes32","name":"taskType","type":"bytes32"}],"name":"TaskCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"agents","outputs":[{"internalType":"address","name":"agentAddress","type":"address"},{"internalType":"string","name":"metadata","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"reputation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_taskId","type":"uint256"}],"name":"assignTask","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_taskId","type":"uint256"},{"internalType":"bytes","name":"_signature","type":"bytes"}],"name":"completeTask","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_taskType","type":"bytes32"},{"internalType":"string","name":"_taskData","type":"string"},{"internalType":"uint256","name":"_payment","type":"uint256"},{"internalType":"address[]","name":"_collaboratingAgents","type":"address[]"}],"name":"createTask","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"},{"internalType":"bytes32","name":"_taskType","type":"bytes32"},{"internalType":"string","name":"_taskData","type":"string"},{"internalType":"uint256","name":"_payment","type":"uint256"}],"name":"executeAgentTask","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_paymentToken","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paymentToken","outputs":[{"internalType":"contract IERC20Upgradeable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_metadata","type":"string"},{"internalType":"bytes32[]","name":"_supportedTaskTypes","type":"bytes32[]"}],"name":"registerAgent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_agentAddress","type":"address"},{"internalType":"uint256","name":"_paymentAllowance","type":"uint256"}],"name":"registerAgentForOtherUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"},{"internalType":"uint256","name":"_paymentAllowance","type":"uint256"}],"name":"registerAgentForUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_taskId","type":"uint256"},{"internalType":"address","name":"_collaboratorAgent","type":"address"}],"name":"requestCollaboration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"taskCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tasks","outputs":[{"internalType":"address","name":"creator","type":"address"},{"internalType":"address","name":"assignedAgent","type":"address"},{"internalType":"bytes32","name":"taskType","type":"bytes32"},{"internalType":"string","name":"taskData","type":"string"},{"internalType":"uint256","name":"payment","type":"uint256"},{"internalType":"enum WWANProtocol.TaskStatus","name":"status","type":"uint8"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:oz-upgrades-unsafe-allow":"constructor"},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeTo(address)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b60405161252a90816100e28239608051818181610fe8015281816110d501526113c30152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60406080815260048036101561001457600080fd5b600090813560e01c9081630173051614611ae55781630cfb932f146116bb5781633013ce29146116925781633659cfe61461139b5781634f1ef2861461109557816352d1902d14610fd25781635867173014610fb35781637a2ccd3514610d4f5781638d97767214610bfc5781638da5cb5b14610bcf578163b053cef314610a96578163b857318514610911578163c30c4476146107b9578163c4d66de81461064c578163d174c3e2146104dc578163de2ddc5914610159575063fd66091e146100dd57600080fd5b34610156576020366003190112610156576001600160a01b0390829082610102611e37565b168152609960205220908154169061011c60018201611e9d565b92600360ff6002840154169201549061014681519586958652608060208701526080860190611f43565b9215159084015260608301520390f35b80fd5b839150346104d85760803660031901126104d85780359167ffffffffffffffff906024358281116104d4576101919036908501611dd3565b606435928084116104d057366023850112156104d057838501356101b481611e1f565b906101c185519283611d95565b8082526020958683016024819360051b830101913683116104cc57602401905b8282106104a9575050506101f361241d565b6044359687156104665760018060a01b03928a8861024986609854168c8b519485809481936323b872dd60e01b835230338c850160409194939294606082019560018060a01b0380921683521660208201520152565b03925af190811561045c5790610266918d9161042f575b506123d1565b609c54986102738a61222e565b609c55898c52609a8952878c2096336001600160601b0360a01b8954161788558b6002890155805187811161041c57808e60038b01936102bd836102b78754611e63565b876121e9565b8d91601f84116001146103b857926103ad575b50508160011b916000199060031b1c19161790555b8683015560058601805460ff19169055519485610332575b8a8a8a7fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef8b8b519384523393a3600160655580f35b60070193851161039a57600160401b851161039a57508254848455808510610380575b5091885284882090885b84811061036c57806102fd565b83518216838201559286019260010161035f565b838a52868a206103949181019086016121d2565b89610355565b634e487b7160e01b8a5260419052602489fd5b015190508f806102d0565b8581528e81209350601f198516908f5b8282106104055750509084600195949392106103ec575b505050811b0190556102e5565b015160001960f88460031b161c191690558f80806103df565b60018596829396860151815501950193018f6103c8565b634e487b7160e01b8e526041855260248efd5b61044f91508a3d8c11610455575b6104478183611d95565b8101906122f5565b8d610260565b503d61043d565b88513d8e823e3d90fd5b855162461bcd60e51b8152908101879052601860248201527f5061796d656e74206d75737420626520706f73697469766500000000000000006044820152606490fd5b81356001600160a01b03811681036104c85781529088019088016101e1565b8c80fd5b8b80fd5b8680fd5b8580fd5b8280fd5b839150346104d85760603660031901126104d8576104f8611e37565b90610501611e4d565b9060443560018060a01b0392838116948588526020936099855261052d60ff60028a8c20015416612253565b8886831696878252609b875260018a832001898352875261055460ff8b842054161561229f565b856105ad575b5087876000805160206124b583398151915288888d60028a868952609b8552610586838a209182612391565b878952600181018552828920600160ff19825416179055018352818188205551908152a380f35b6098548a516323b872dd60e01b81526001600160a01b0395909516938501938452306020850152604084018790528793859390849003606001928492165af1908115610642579161061a6002926000805160206124b5833981519152979899948b91610625575b5061230d565b91969594888a61055a565b61063c9150873d8911610455576104478183611d95565b8b610614565b87513d8a823e3d90fd5b839150346104d85760203660031901126104d857610668611e37565b90835460ff8160081c1615918280936107ac575b8015610795575b1561073b575060ff19811660011785558161072a575b508354916106be60ff8460081c166106b081612172565b6106b981612172565b612172565b60016065556001600160601b0360a01b903382609754161760975560018060a01b03169060985416176098556106f2578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a181808280f35b61ffff191661010117845584610699565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156106835750600160ff831614610683565b50600160ff83161061067c565b905082346104d857806003193601126104d8576107d4611e37565b6024359160018060a01b039183838216958688526020946099865261080160ff6002878c20015416612253565b338952609b86526001858a2001888a52865261082360ff868b2054161561229f565b8261087d575b5050509060026000805160206124b58339815191529392338852609b84526108548389209182612391565b868852600181018452828820600160ff198254161790550182528381872055519283523392a380f35b60985485516323b872dd60e01b815233938101938452306020850152604084019490945286928492908390036060019183918c91165af190811561090757916108e06002926000805160206124b58339815191529695948a916108ea575061230d565b9192938591610829565b6109019150863d8811610455576104478183611d95565b8a610614565b83513d89823e3d90fd5b905082346104d85760209081600319360112610a92578235923385526099835260ff600283872001541615610a5a57838552609a835281852090600582019384549360ff85166005811015610a4757610a115733885260998252828189200160028501548952825260ff8189205416156109d057505050906001809201336001600160601b0360a01b82541617905560ff191617905533907f52476d55ecef5cf13caa64038f297fe6bbf865d9584a98b8722a15a6d5db128f8380a380f35b5162461bcd60e51b815291820152601760248201527f5461736b2074797065206e6f7420737570706f72746564000000000000000000604482015260649150fd5b5162461bcd60e51b81529182015260126024820152715461736b206e6f7420617661696c61626c6560701b604482015260649150fd5b634e487b7160e01b895260218452602489fd5b82606492519162461bcd60e51b835282015260146024820152731059d95b9d081b9bdd081c9959da5cdd195c995960621b6044820152fd5b8380fd5b905082346104d857806003193601126104d8578135610ab3611e4d565b818552609a6020528285209060018060a01b0391600195610ada8488840154163314612473565b83831695868952609960205260ff6002828b2001541615610b8c57505086956007889201938454925b838110610b54575b505050509091929315610b44575b505033907fe3864154f13bb56610560553d549cb6947e9fd199379eefefbeb0f082c6c7ca88480a480f35b610b4d91612391565b8380610b19565b8782610b608389612363565b90549060031b1c1614610b7b57610b769061222e565b610b03565b509096508891508190508080610b0b565b906020606492519162461bcd60e51b8352820152601b60248201527f436f6c6c61626f7261746f72206e6f74207265676973746572656400000000006044820152fd5b828434610bf85781600319360112610bf85760975490516001600160a01b039091168152602090f35b5080fd5b83833461015657602090816003193601126101565783358152609a825282812060018060a01b03918282541694600193848401541690600284015490610c4460038601611e9d565b928986015497600660ff600589015416970183519889918891815491610c6983611e63565b80865292828116908115610d2d5750600114610cf2575b505050610cb3969594939291610c9791038a611d95565b82519a8b528a015288015260e0606088015260e0870190611f43565b9360808601526005821015610cdf575060a084015282820360c08401528291610cdb91611f43565b0390f35b634e487b7160e01b815260218652602490fd5b8a52848a208a93505b828410610d15575050508101820181610c97610cb3610c80565b80549484018601949094528b93928501928101610cfb565b60ff191686880152505050151560051b82018301905081610c97610cb3610c80565b839150346104d857816003193601126104d85780359067ffffffffffffffff906024358281116104d457610d869036908301611dd3565b91838652602091609a83528587209160018060a01b03906001610daf8382870154163314612473565b600585019160ff8354166005811015610fa057828114908115610f95575b5015610f5c5760068601918851918211610f4957908291610dfc82610df68b9998979654611e63565b856121e9565b868d601f8411600114610ee2579280604497959381938a989693610ed7575b501b916000199060031b1c19161790555b600360ff198254161790556098541694015491898951958694859363a9059cbb60e01b8552339085015260248401525af1908115610ecd5794610e9b610eaa927f04576aed55ed132dfaa5e03bbc10500227270d0b188aec79a7bee1202b29396e96978991610eb057506123d1565b51928284938452830190611f43565b0390a280f35b610ec79150853d8711610455576104478183611d95565b89610260565b85513d88823e3d90fd5b8e0151925038610e1b565b90601f939293198316858352898320925b8d828210610f3457505091839160449896948a98969410610f1b575b5050811b019055610e2c565b8d015160001960f88460031b161c191690558f80610f0f565b83015184558c9a938601939283019201610ef3565b634e487b7160e01b8c526041865260248cfd5b895162461bcd60e51b81528086018890526013602482015272496e76616c6964207461736b2073746174757360681b6044820152606490fd5b60029150148c610dcd565b634e487b7160e01b8c526021865260248cfd5b828434610bf85781600319360112610bf857602090609c549051908152f35b91905034610156578060031936011261015657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361102d57602082516000805160206124d58339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b905082806003193601126104d8576110ab611e37565b9060243567ffffffffffffffff8111611397576110cb9036908501611dd3565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692919061110530851415611f83565b6111226000805160206124d5833981519152948286541614611fe4565b8060975416330361135e577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561116857505050506111659150612045565b80f35b82516352d1902d60e01b81526020959394918416919086818981865afa89918161132b575b506111ec57855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b96919295949396036112d6575061120285612045565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28251158015906112ce575b61123d575b5050505080f35b6112ba93858083519561124f87611d63565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d156112c4573d6112ac6112a382611db7565b92519283611d95565b81528681943d92013e6120d5565b5081808080611236565b50606092506120d5565b506001611231565b825162461bcd60e51b8152908101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311611357575b6113438183611d95565b810103126113535751908a61118d565b8980fd5b503d611339565b825162461bcd60e51b81526020818801526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8480fd5b905082346104d857602080600319360112610a92576113b8611e37565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166113f030821415611f83565b61140d6000805160206124d5833981519152918383541614611fe4565b81609754163303611659578251908482019282841067ffffffffffffffff851117611646578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611472575050505050506111659150612045565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181611613575b506114f457865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036115be575061150b82612045565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906115b7575b611549575b50505050505080f35b806115ab9684519661155a88611d63565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d156112c4573d6112ac6112a382611db7565b50818080808085611540565b508061153b565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d831161163f575b61162b8183611d95565b8101031261163b5751908b611495565b8a80fd5b503d611621565b634e487b7160e01b895260418852602489fd5b825162461bcd60e51b81528087018590526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b828434610bf85781600319360112610bf85760985490516001600160a01b039091168152602090f35b828434610bf8576080366003190112610bf8576116d6611e37565b9067ffffffffffffffff604435818111611397576116f79036908701611dd3565b9060649586359361170661241d565b8492338852602092609b845260019788848b20019760018060a01b0380921698898c52865260ff858c20541615611aa3579a8a9b898c999a9b9c526099875260ff8685818c20019a6024359b8c82528a5220541615611a6257338d52609b8752858d2090156119a757505060985484516323b872dd60e01b8152338482019081523060208201526040810189905290928792849291169082908f90829060600103925af190811561199d57906117c2918c9161198057506123d1565b609c54966117cf8861222e565b609c55878b52609a8552838b20926001600160601b0360a01b33818654161785558a8c8601918254161790558760028501556003840191805191821161196d57908b8d8493611827846102b78f9c9b9a999854611e63565b8891601f85116001146118c557937fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef9a9b95938193829360059a9997946118ba575b50501b916000199060031b1c19161790555b82015501805460ff191689179055519384523393a37f52476d55ecef5cf13caa64038f297fe6bbf865d9584a98b8722a15a6d5db128f8480a360655580f35b015192503880611869565b9190601f9b979b9493941984168684528a8420935b81811061193d5750917fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef9b9c979593918560059a98969410611924575b505050811b01905561187b565b015160001960f88460031b161c19169055388080611917565b94969798999b50919499809c9a8294878394015181550195019301918f9492918e9b9998979694929c9a9c6118da565b634e487b7160e01b8d526041845260248dfd5b6119979150863d8811610455576104478183611d95565b8c610260565b84513d8d823e3d90fd5b8a8d52600201808752858d2054939750909290915015611a0957888b52845280838b2054116000146119fe57935b84838b2080549182039182116119eb57556117c2565b634e487b7160e01b8c526011835260248cfd5b5081892054936119d5565b835162461bcd60e51b8152808701869052602e60248201527f4e6f207061796d656e742070726f766964656420616e64206e6f20616c6c6f7760448201526d616e636520617661696c61626c6560901b81840152608490fd5b50845162461bcd60e51b8152808401879052602481018790527f5461736b2074797065206e6f7420737570706f72746564206279206167656e746044820152fd5b845162461bcd60e51b8152808401879052601d60248201527f4167656e74206e6f74207265676973746572656420666f72207573657200000060448201528c90fd5b905082346104d857806003193601126104d85767ffffffffffffffff90823582811161139757611b189036908501611dd3565b91602435938185116104d457366023860112156104d4578481013590611b3d82611e1f565b92611b4a85519485611d95565b8284526020968785016024600595861b8301019136831161163b5760248a9101915b838310611d5357505050503388526099875260ff6002868a20015416611d10573388526099875284882092336001600160601b0360a01b855416178455600191828501908851908111611cfd579081611bd1859493611bcb8454611e63565b846121e9565b8a601f8211600114611c99578c9082611c8e575b50600019600383901b1c191690841b17905590935b600281019360ff19948486825416179055606460038301558a9101925b611c54575b86518981528a9033907fda816ca2fc37b9eecec62ae8263008ec6be1afb38dc28bc9c7c51d7e348da9c29080610eaa818f018e611f43565b8551811015611c895790611c81828a879594841b890101518c52838b52888c20858782541617905561222e565b909192611c17565b611c1c565b90508a01518d611be5565b828d528b8d2090601f1983168e8e8e5b838310611ce65750505090838794939210611ccd575b5050811b0190559093611bfa565b8c015160001960f88460031b161c191690558d80611cbf565b840151855589989094019392830192018e8e611ca9565b634e487b7160e01b8b526041855260248bfd5b845162461bcd60e51b8152808301889052601860248201527f4167656e7420616c7265616479207265676973746572656400000000000000006044820152606490fd5b82358152918101918a9101611b6c565b6060810190811067ffffffffffffffff821117611d7f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611d7f57604052565b67ffffffffffffffff8111611d7f57601f01601f191660200190565b81601f82011215611e1a57803590611dea82611db7565b92611df86040519485611d95565b82845260208383010111611e1a57816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff8111611d7f5760051b60200190565b600435906001600160a01b0382168203611e1a57565b602435906001600160a01b0382168203611e1a57565b90600182811c92168015611e93575b6020831014611e7d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e72565b9060405191826000825492611eb184611e63565b908184526001948581169081600014611f205750600114611edd575b5050611edb92500383611d95565b565b9093915060005260209081600020936000915b818310611f08575050611edb93508201013880611ecd565b85548884018501529485019487945091830191611ef0565b915050611edb94506020925060ff191682840152151560051b8201013880611ecd565b919082519283825260005b848110611f6f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f4e565b15611f8a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15611feb57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b1561207a576000805160206124d583398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b9192901561213757508151156120e9575090565b3b156120f25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561214a5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061216e906024830190611f43565b0390fd5b1561217957565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b8181106121dd575050565b600081556001016121d2565b9190601f81116121f857505050565b611edb926000526020600020906020601f840160051c83019310612224575b601f0160051c01906121d2565b9091508190612217565b600019811461223d5760010190565b634e487b7160e01b600052601160045260246000fd5b1561225a57565b60405162461bcd60e51b815260206004820152601e60248201527f4167656e74206e6f74207265676973746572656420696e2073797374656d00006044820152606490fd5b156122a657565b60405162461bcd60e51b815260206004820152602160248201527f4167656e7420616c7265616479207265676973746572656420666f72207573656044820152603960f91b6064820152608490fd5b90816020910312611e1a57518015158103611e1a5790565b1561231457565b60405162461bcd60e51b815260206004820152602160248201527f5061796d656e7420616c6c6f77616e6365207472616e73666572206661696c656044820152601960fa1b6064820152608490fd5b805482101561237b5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054600160401b811015611d7f576123ae91600182018155612363565b819291549060031b9160018060a01b039283811b93849216901b16911916179055565b156123d857565b60405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152606490fd5b60026065541461242e576002606555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b1561247a57565b60405162461bcd60e51b8152602060048201526012602482015271139bdd08185cdcda59db9959081859d95b9d60721b6044820152606490fdfeb14eafe918ed2ebe411ca6d11c3ef5c8330bf0979fa0384ef0f26b8ed7b50fbf360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212205c1220f2bb3ba9b8c95969727418d2ccfd264a41729b96a54b01666b4be81d4b64736f6c63430008110033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xDC JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH1 0x0 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND PUSH2 0x8A JUMPI POP PUSH1 0xFF DUP1 DUP3 AND SUB PUSH2 0x4F JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252A SWAP1 DUP2 PUSH2 0xE2 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xFE8 ADD MSTORE DUP2 DUP2 PUSH2 0x10D5 ADD MSTORE PUSH2 0x13C3 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF SWAP1 DUP2 NOT AND OR PUSH1 0x0 SSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xFF DUP2 MSTORE LOG1 CODESIZE PUSH2 0x29 JUMP JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1730516 EQ PUSH2 0x1AE5 JUMPI DUP2 PUSH4 0xCFB932F EQ PUSH2 0x16BB JUMPI DUP2 PUSH4 0x3013CE29 EQ PUSH2 0x1692 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x139B JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x1095 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xFD2 JUMPI DUP2 PUSH4 0x58671730 EQ PUSH2 0xFB3 JUMPI DUP2 PUSH4 0x7A2CCD35 EQ PUSH2 0xD4F JUMPI DUP2 PUSH4 0x8D977672 EQ PUSH2 0xBFC JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xBCF JUMPI DUP2 PUSH4 0xB053CEF3 EQ PUSH2 0xA96 JUMPI DUP2 PUSH4 0xB8573185 EQ PUSH2 0x911 JUMPI DUP2 PUSH4 0xC30C4476 EQ PUSH2 0x7B9 JUMPI DUP2 PUSH4 0xC4D66DE8 EQ PUSH2 0x64C JUMPI DUP2 PUSH4 0xD174C3E2 EQ PUSH2 0x4DC JUMPI DUP2 PUSH4 0xDE2DDC59 EQ PUSH2 0x159 JUMPI POP PUSH4 0xFD66091E EQ PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x156 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x156 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x102 PUSH2 0x1E37 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 PUSH2 0x11C PUSH1 0x1 DUP3 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 PUSH1 0x3 PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD SWAP1 PUSH2 0x146 DUP2 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SWAP3 ISZERO ISZERO SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x4D4 JUMPI PUSH2 0x191 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP3 DUP1 DUP5 GT PUSH2 0x4D0 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x4D0 JUMPI DUP4 DUP6 ADD CALLDATALOAD PUSH2 0x1B4 DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 PUSH2 0x1C1 DUP6 MLOAD SWAP3 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 ADD PUSH1 0x24 DUP2 SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x4CC JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4A9 JUMPI POP POP POP PUSH2 0x1F3 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP7 DUP8 ISZERO PUSH2 0x466 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP11 DUP9 PUSH2 0x249 DUP7 PUSH1 0x98 SLOAD AND DUP13 DUP12 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS CALLER DUP13 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI SWAP1 PUSH2 0x266 SWAP2 DUP14 SWAP2 PUSH2 0x42F JUMPI JUMPDEST POP PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x9C SLOAD SWAP9 PUSH2 0x273 DUP11 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x9C SSTORE DUP10 DUP13 MSTORE PUSH1 0x9A DUP10 MSTORE DUP8 DUP13 KECCAK256 SWAP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP10 SLOAD AND OR DUP9 SSTORE DUP12 PUSH1 0x2 DUP10 ADD SSTORE DUP1 MLOAD DUP8 DUP2 GT PUSH2 0x41C JUMPI DUP1 DUP15 PUSH1 0x3 DUP12 ADD SWAP4 PUSH2 0x2BD DUP4 PUSH2 0x2B7 DUP8 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP8 PUSH2 0x21E9 JUMP JUMPDEST DUP14 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3B8 JUMPI SWAP3 PUSH2 0x3AD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP7 DUP4 ADD SSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP5 DUP6 PUSH2 0x332 JUMPI JUMPDEST DUP11 DUP11 DUP11 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF DUP12 DUP12 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x7 ADD SWAP4 DUP6 GT PUSH2 0x39A JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP6 GT PUSH2 0x39A JUMPI POP DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x380 JUMPI JUMPDEST POP SWAP2 DUP9 MSTORE DUP5 DUP9 KECCAK256 SWAP1 DUP9 JUMPDEST DUP5 DUP2 LT PUSH2 0x36C JUMPI DUP1 PUSH2 0x2FD JUMP JUMPDEST DUP4 MLOAD DUP3 AND DUP4 DUP3 ADD SSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x35F JUMP JUMPDEST DUP4 DUP11 MSTORE DUP7 DUP11 KECCAK256 PUSH2 0x394 SWAP2 DUP2 ADD SWAP1 DUP7 ADD PUSH2 0x21D2 JUMP JUMPDEST DUP10 PUSH2 0x355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP15 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 DUP16 JUMPDEST DUP3 DUP3 LT PUSH2 0x405 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x3EC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2E5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD DUP16 PUSH2 0x3C8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH2 0x44F SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x455 JUMPI JUMPDEST PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22F5 JUMP JUMPDEST DUP14 PUSH2 0x260 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x43D JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4C8 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x1E1 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x4F8 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH2 0x501 PUSH2 0x1E4D JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP2 AND SWAP5 DUP6 DUP9 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x99 DUP6 MSTORE PUSH2 0x52D PUSH1 0xFF PUSH1 0x2 DUP11 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0x2253 JUMP JUMPDEST DUP9 DUP7 DUP4 AND SWAP7 DUP8 DUP3 MSTORE PUSH1 0x9B DUP8 MSTORE PUSH1 0x1 DUP11 DUP4 KECCAK256 ADD DUP10 DUP4 MSTORE DUP8 MSTORE PUSH2 0x554 PUSH1 0xFF DUP12 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x229F JUMP JUMPDEST DUP6 PUSH2 0x5AD JUMPI JUMPDEST POP DUP8 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 DUP9 DUP14 PUSH1 0x2 DUP11 DUP7 DUP10 MSTORE PUSH1 0x9B DUP6 MSTORE PUSH2 0x586 DUP4 DUP11 KECCAK256 SWAP2 DUP3 PUSH2 0x2391 JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x1 DUP2 ADD DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP4 MSTORE DUP2 DUP2 DUP9 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x98 SLOAD DUP11 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP4 DUP6 ADD SWAP4 DUP5 MSTORE ADDRESS PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD DUP8 SWAP1 MSTORE DUP8 SWAP4 DUP6 SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH1 0x60 ADD SWAP3 DUP5 SWAP3 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI SWAP2 PUSH2 0x61A PUSH1 0x2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 SWAP10 SWAP5 DUP12 SWAP2 PUSH2 0x625 JUMPI JUMPDEST POP PUSH2 0x230D JUMP JUMPDEST SWAP2 SWAP7 SWAP6 SWAP5 DUP9 DUP11 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x63C SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP12 PUSH2 0x614 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x668 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x7AC JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x795 JUMPI JUMPDEST ISZERO PUSH2 0x73B JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP2 PUSH2 0x72A JUMPI JUMPDEST POP DUP4 SLOAD SWAP2 PUSH2 0x6BE PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x6B0 DUP2 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x6B9 DUP2 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 CALLER DUP3 PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x98 SLOAD AND OR PUSH1 0x98 SSTORE PUSH2 0x6F2 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP5 SSTORE DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x683 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x67C JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x7D4 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 DUP4 DUP3 AND SWAP6 DUP7 DUP9 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x99 DUP7 MSTORE PUSH2 0x801 PUSH1 0xFF PUSH1 0x2 DUP8 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0x2253 JUMP JUMPDEST CALLER DUP10 MSTORE PUSH1 0x9B DUP7 MSTORE PUSH1 0x1 DUP6 DUP11 KECCAK256 ADD DUP9 DUP11 MSTORE DUP7 MSTORE PUSH2 0x823 PUSH1 0xFF DUP7 DUP12 KECCAK256 SLOAD AND ISZERO PUSH2 0x229F JUMP JUMPDEST DUP3 PUSH2 0x87D JUMPI JUMPDEST POP POP POP SWAP1 PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 CALLER DUP9 MSTORE PUSH1 0x9B DUP5 MSTORE PUSH2 0x854 DUP4 DUP10 KECCAK256 SWAP2 DUP3 PUSH2 0x2391 JUMP JUMPDEST DUP7 DUP9 MSTORE PUSH1 0x1 DUP2 ADD DUP5 MSTORE DUP3 DUP9 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP3 MSTORE DUP4 DUP2 DUP8 KECCAK256 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x98 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE ADDRESS PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP7 SWAP3 DUP5 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 DUP13 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x907 JUMPI SWAP2 PUSH2 0x8E0 PUSH1 0x2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP6 SWAP5 DUP11 SWAP2 PUSH2 0x8EA JUMPI POP PUSH2 0x230D JUMP JUMPDEST SWAP2 SWAP3 SWAP4 DUP6 SWAP2 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x901 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP11 PUSH2 0x614 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA92 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0x99 DUP4 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 DUP8 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xA5A JUMPI DUP4 DUP6 MSTORE PUSH1 0x9A DUP4 MSTORE DUP2 DUP6 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SWAP4 DUP5 SLOAD SWAP4 PUSH1 0xFF DUP6 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA11 JUMPI CALLER DUP9 MSTORE PUSH1 0x99 DUP3 MSTORE DUP3 DUP2 DUP10 KECCAK256 ADD PUSH1 0x2 DUP6 ADD SLOAD DUP10 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 DUP10 KECCAK256 SLOAD AND ISZERO PUSH2 0x9D0 JUMPI POP POP POP SWAP1 PUSH1 0x1 DUP1 SWAP3 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0x52476D55ECEF5CF13CAA64038F297FE6BBF865D9584A98B8722A15A6D5DB128F DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461736B2074797065206E6F7420737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5461736B206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1059D95B9D081B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI DUP2 CALLDATALOAD PUSH2 0xAB3 PUSH2 0x1E4D JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x1 SWAP6 PUSH2 0xADA DUP5 DUP9 DUP5 ADD SLOAD AND CALLER EQ PUSH2 0x2473 JUMP JUMPDEST DUP4 DUP4 AND SWAP6 DUP7 DUP10 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 DUP3 DUP12 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xB8C JUMPI POP POP DUP7 SWAP6 PUSH1 0x7 DUP9 SWAP3 ADD SWAP4 DUP5 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0xB54 JUMPI JUMPDEST POP POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 ISZERO PUSH2 0xB44 JUMPI JUMPDEST POP POP CALLER SWAP1 PUSH32 0xE3864154F13BB56610560553D549CB6947E9FD199379EEFEFBEB0F082C6C7CA8 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH2 0xB4D SWAP2 PUSH2 0x2391 JUMP JUMPDEST DUP4 DUP1 PUSH2 0xB19 JUMP JUMPDEST DUP8 DUP3 PUSH2 0xB60 DUP4 DUP10 PUSH2 0x2363 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0xB7B JUMPI PUSH2 0xB76 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST POP SWAP1 SWAP7 POP DUP9 SWAP2 POP DUP2 SWAP1 POP DUP1 DUP1 PUSH2 0xB0B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C61626F7261746F72206E6F7420726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x97 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x156 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x156 JUMPI DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x9A DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 SLOAD AND SWAP5 PUSH1 0x1 SWAP4 DUP5 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP5 ADD SLOAD SWAP1 PUSH2 0xC44 PUSH1 0x3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 DUP10 DUP7 ADD SLOAD SWAP8 PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP10 ADD SLOAD AND SWAP8 ADD DUP4 MLOAD SWAP9 DUP10 SWAP2 DUP9 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0xC69 DUP4 PUSH2 0x1E63 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD2D JUMPI POP PUSH1 0x1 EQ PUSH2 0xCF2 JUMPI JUMPDEST POP POP POP PUSH2 0xCB3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xC97 SWAP2 SUB DUP11 PUSH2 0x1D95 JUMP JUMPDEST DUP3 MLOAD SWAP11 DUP12 MSTORE DUP11 ADD MSTORE DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xCDF JUMPI POP PUSH1 0xA0 DUP5 ADD MSTORE DUP3 DUP3 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP3 SWAP2 PUSH2 0xCDB SWAP2 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP11 MSTORE DUP5 DUP11 KECCAK256 DUP11 SWAP4 POP JUMPDEST DUP3 DUP5 LT PUSH2 0xD15 JUMPI POP POP POP DUP2 ADD DUP3 ADD DUP2 PUSH2 0xC97 PUSH2 0xCB3 PUSH2 0xC80 JUMP JUMPDEST DUP1 SLOAD SWAP5 DUP5 ADD DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP12 SWAP4 SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0xCFB JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP9 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD DUP4 ADD SWAP1 POP DUP2 PUSH2 0xC97 PUSH2 0xCB3 PUSH2 0xC80 JUMP JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x4D4 JUMPI PUSH2 0xD86 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP2 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x9A DUP4 MSTORE DUP6 DUP8 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 PUSH2 0xDAF DUP4 DUP3 DUP8 ADD SLOAD AND CALLER EQ PUSH2 0x2473 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP3 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xF95 JUMPI JUMPDEST POP ISZERO PUSH2 0xF5C JUMPI PUSH1 0x6 DUP7 ADD SWAP2 DUP9 MLOAD SWAP2 DUP3 GT PUSH2 0xF49 JUMPI SWAP1 DUP3 SWAP2 PUSH2 0xDFC DUP3 PUSH2 0xDF6 DUP12 SWAP10 SWAP9 SWAP8 SWAP7 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP6 PUSH2 0x21E9 JUMP JUMPDEST DUP7 DUP14 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xEE2 JUMPI SWAP3 DUP1 PUSH1 0x44 SWAP8 SWAP6 SWAP4 DUP2 SWAP4 DUP11 SWAP9 SWAP7 SWAP4 PUSH2 0xED7 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x98 SLOAD AND SWAP5 ADD SLOAD SWAP2 DUP10 DUP10 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xECD JUMPI SWAP5 PUSH2 0xE9B PUSH2 0xEAA SWAP3 PUSH32 0x4576AED55ED132DFAA5E03BBC10500227270D0B188AEC79A7BEE1202B29396E SWAP7 SWAP8 DUP10 SWAP2 PUSH2 0xEB0 JUMPI POP PUSH2 0x23D1 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xEC7 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP10 PUSH2 0x260 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP15 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0xE1B JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND DUP6 DUP4 MSTORE DUP10 DUP4 KECCAK256 SWAP3 JUMPDEST DUP14 DUP3 DUP3 LT PUSH2 0xF34 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP9 SWAP7 SWAP5 DUP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0xF1B JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xE2C JUMP JUMPDEST DUP14 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 PUSH2 0xF0F JUMP JUMPDEST DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP11 SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xEF3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964207461736B20737461747573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP13 PUSH2 0xDCD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x156 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x156 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x102D JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x10AB PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x10CB SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x1105 ADDRESS DUP6 EQ ISZERO PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x1122 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x1FE4 JUMP JUMPDEST DUP1 PUSH1 0x97 SLOAD AND CALLER SUB PUSH2 0x135E JUMPI PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1168 JUMPI POP POP POP POP PUSH2 0x1165 SWAP2 POP PUSH2 0x2045 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP6 SWAP4 SWAP5 SWAP2 DUP5 AND SWAP2 SWAP1 DUP7 DUP2 DUP10 DUP2 DUP7 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x132B JUMPI JUMPDEST POP PUSH2 0x11EC JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP2 SWAP3 SWAP6 SWAP5 SWAP4 SWAP7 SUB PUSH2 0x12D6 JUMPI POP PUSH2 0x1202 DUP6 PUSH2 0x2045 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12CE JUMPI JUMPDEST PUSH2 0x123D JUMPI JUMPDEST POP POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x12BA SWAP4 DUP6 DUP1 DUP4 MLOAD SWAP6 PUSH2 0x124F DUP8 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH2 0x12AC PUSH2 0x12A3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x20D5 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x1236 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x20D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1231 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1357 JUMPI JUMPDEST PUSH2 0x1343 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1353 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x118D JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1339 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA92 JUMPI PUSH2 0x13B8 PUSH2 0x1E37 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x13F0 ADDRESS DUP3 EQ ISZERO PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x140D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x1FE4 JUMP JUMPDEST DUP2 PUSH1 0x97 SLOAD AND CALLER SUB PUSH2 0x1659 JUMPI DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1646 JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1472 JUMPI POP POP POP POP POP POP PUSH2 0x1165 SWAP2 POP PUSH2 0x2045 JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x1613 JUMPI JUMPDEST POP PUSH2 0x14F4 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x15BE JUMPI POP PUSH2 0x150B DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15B7 JUMPI JUMPDEST PUSH2 0x1549 JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x15AB SWAP7 DUP5 MLOAD SWAP7 PUSH2 0x155A DUP9 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH2 0x12AC PUSH2 0x12A3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0x1540 JUMP JUMPDEST POP DUP1 PUSH2 0x153B JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x163F JUMPI JUMPDEST PUSH2 0x162B DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x163B JUMPI MLOAD SWAP1 DUP12 PUSH2 0x1495 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1621 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x98 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBF8 JUMPI PUSH2 0x16D6 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x16F7 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP1 PUSH1 0x64 SWAP6 DUP7 CALLDATALOAD SWAP4 PUSH2 0x1706 PUSH2 0x241D JUMP JUMPDEST DUP5 SWAP3 CALLER DUP9 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x9B DUP5 MSTORE PUSH1 0x1 SWAP8 DUP9 DUP5 DUP12 KECCAK256 ADD SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP9 DUP10 DUP13 MSTORE DUP7 MSTORE PUSH1 0xFF DUP6 DUP13 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AA3 JUMPI SWAP11 DUP11 SWAP12 DUP10 DUP13 SWAP10 SWAP11 SWAP12 SWAP13 MSTORE PUSH1 0x99 DUP8 MSTORE PUSH1 0xFF DUP7 DUP6 DUP2 DUP13 KECCAK256 ADD SWAP11 PUSH1 0x24 CALLDATALOAD SWAP12 DUP13 DUP3 MSTORE DUP11 MSTORE KECCAK256 SLOAD AND ISZERO PUSH2 0x1A62 JUMPI CALLER DUP14 MSTORE PUSH1 0x9B DUP8 MSTORE DUP6 DUP14 KECCAK256 SWAP1 ISZERO PUSH2 0x19A7 JUMPI POP POP PUSH1 0x98 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP3 DUP8 SWAP3 DUP5 SWAP3 SWAP2 AND SWAP1 DUP3 SWAP1 DUP16 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI SWAP1 PUSH2 0x17C2 SWAP2 DUP13 SWAP2 PUSH2 0x1980 JUMPI POP PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x9C SLOAD SWAP7 PUSH2 0x17CF DUP9 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x9C SSTORE DUP8 DUP12 MSTORE PUSH1 0x9A DUP6 MSTORE DUP4 DUP12 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL CALLER DUP2 DUP7 SLOAD AND OR DUP6 SSTORE DUP11 DUP13 DUP7 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SWAP2 DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x196D JUMPI SWAP1 DUP12 DUP14 DUP5 SWAP4 PUSH2 0x1827 DUP5 PUSH2 0x2B7 DUP16 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP9 SWAP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x18C5 JUMPI SWAP4 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF SWAP11 SWAP12 SWAP6 SWAP4 DUP2 SWAP4 DUP3 SWAP4 PUSH1 0x5 SWAP11 SWAP10 SWAP8 SWAP5 PUSH2 0x18BA JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP10 OR SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH32 0x52476D55ECEF5CF13CAA64038F297FE6BBF865D9584A98B8722A15A6D5DB128F DUP5 DUP1 LOG3 PUSH1 0x65 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x1869 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F SWAP12 SWAP8 SWAP12 SWAP5 SWAP4 SWAP5 NOT DUP5 AND DUP7 DUP5 MSTORE DUP11 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x193D JUMPI POP SWAP2 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF SWAP12 SWAP13 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0x5 SWAP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0x1924 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x187B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP7 SWAP8 SWAP9 SWAP10 SWAP12 POP SWAP2 SWAP5 SWAP10 DUP1 SWAP13 SWAP11 DUP3 SWAP5 DUP8 DUP4 SWAP5 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP2 DUP16 SWAP5 SWAP3 SWAP2 DUP15 SWAP12 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 SWAP13 SWAP11 SWAP13 PUSH2 0x18DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST PUSH2 0x1997 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP13 PUSH2 0x260 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP14 MSTORE PUSH1 0x2 ADD DUP1 DUP8 MSTORE DUP6 DUP14 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP1 SWAP3 SWAP1 SWAP2 POP ISZERO PUSH2 0x1A09 JUMPI DUP9 DUP12 MSTORE DUP5 MSTORE DUP1 DUP4 DUP12 KECCAK256 SLOAD GT PUSH1 0x0 EQ PUSH2 0x19FE JUMPI SWAP4 JUMPDEST DUP5 DUP4 DUP12 KECCAK256 DUP1 SLOAD SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19EB JUMPI SSTORE PUSH2 0x17C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST POP DUP2 DUP10 KECCAK256 SLOAD SWAP4 PUSH2 0x19D5 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207061796D656E742070726F766964656420616E64206E6F20616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x616E636520617661696C61626C65 PUSH1 0x90 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x5461736B2074797065206E6F7420737570706F72746564206279206167656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F74207265676973746572656420666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE DUP13 SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x1B18 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x4D4 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x4D4 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x1B3D DUP3 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 PUSH2 0x1B4A DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP6 ADD PUSH1 0x24 PUSH1 0x5 SWAP6 DUP7 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x163B JUMPI PUSH1 0x24 DUP11 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D53 JUMPI POP POP POP POP CALLER DUP9 MSTORE PUSH1 0x99 DUP8 MSTORE PUSH1 0xFF PUSH1 0x2 DUP7 DUP11 KECCAK256 ADD SLOAD AND PUSH2 0x1D10 JUMPI CALLER DUP9 MSTORE PUSH1 0x99 DUP8 MSTORE DUP5 DUP9 KECCAK256 SWAP3 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x1 SWAP2 DUP3 DUP6 ADD SWAP1 DUP9 MLOAD SWAP1 DUP2 GT PUSH2 0x1CFD JUMPI SWAP1 DUP2 PUSH2 0x1BD1 DUP6 SWAP5 SWAP4 PUSH2 0x1BCB DUP5 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP5 PUSH2 0x21E9 JUMP JUMPDEST DUP11 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C99 JUMPI DUP13 SWAP1 DUP3 PUSH2 0x1C8E JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE SWAP1 SWAP4 JUMPDEST PUSH1 0x2 DUP2 ADD SWAP4 PUSH1 0xFF NOT SWAP5 DUP5 DUP7 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x64 PUSH1 0x3 DUP4 ADD SSTORE DUP11 SWAP2 ADD SWAP3 JUMPDEST PUSH2 0x1C54 JUMPI JUMPDEST DUP7 MLOAD DUP10 DUP2 MSTORE DUP11 SWAP1 CALLER SWAP1 PUSH32 0xDA816CA2FC37B9EECEC62AE8263008EC6BE1AFB38DC28BC9C7C51D7E348DA9C2 SWAP1 DUP1 PUSH2 0xEAA DUP2 DUP16 ADD DUP15 PUSH2 0x1F43 JUMP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1C89 JUMPI SWAP1 PUSH2 0x1C81 DUP3 DUP11 DUP8 SWAP6 SWAP5 DUP5 SHL DUP10 ADD ADD MLOAD DUP13 MSTORE DUP4 DUP12 MSTORE DUP9 DUP13 KECCAK256 DUP6 DUP8 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x222E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1C17 JUMP JUMPDEST PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP DUP11 ADD MLOAD DUP14 PUSH2 0x1BE5 JUMP JUMPDEST DUP3 DUP14 MSTORE DUP12 DUP14 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP15 DUP15 DUP15 JUMPDEST DUP4 DUP4 LT PUSH2 0x1CE6 JUMPI POP POP POP SWAP1 DUP4 DUP8 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1CCD JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE SWAP1 SWAP4 PUSH2 0x1BFA JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP9 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD DUP15 DUP15 PUSH2 0x1CA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1D7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1D7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1D7F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1E1A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1DEA DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 PUSH2 0x1DF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1E1A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1D7F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E1A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E1A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E93 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1E7D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E72 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1EB1 DUP5 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F20 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EDD JUMPI JUMPDEST POP POP PUSH2 0x1EDB SWAP3 POP SUB DUP4 PUSH2 0x1D95 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F08 JUMPI POP POP PUSH2 0x1EDB SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECD JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDB SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECD JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F6F JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1F4E JUMP JUMPDEST ISZERO PUSH2 0x1F8A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FEB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2137 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x20E9 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x20F2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x214A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x216E SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2179 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x21DD JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x21F8 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1EDB SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2224 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x21D2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x223D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x225A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F74207265676973746572656420696E2073797374656D0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420616C7265616479207265676973746572656420666F7220757365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1E1A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1E1A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2314 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616C6C6F77616E6365207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x237B JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x23AE SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2363 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x242E JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08185CDCDA59DB9959081859D95B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xB1 0x4E 0xAF 0xE9 XOR 0xED 0x2E 0xBE COINBASE SHR 0xA6 0xD1 SHR RETURNDATACOPY CREATE2 0xC8 CALLER SIGNEXTEND CREATE SWAP8 SWAP16 LOG0 CODESIZE 0x4E CREATE CALLCODE PUSH12 0x8ED7B50FBF360894A13BA1A3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212205C SLT KECCAK256 CALLCODE 0xBB EXTCODESIZE 0xA9 0xB8 0xC9 MSIZE PUSH10 0x727418D2CCFD264A4172 SWAP12 SWAP7 0xA5 0x4B ADD PUSH7 0x6B4BE81D4B6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"378:9582:12:-:0;;;;;;;1332:4:5;1324:13;;6007::4;378:9582:12;;;;;;;;;;;;;;6078:31:4;6074:139;;-1:-1:-1;378:9582:12;;;;;;;;1324:13:5;378:9582:12;;;;;;;;;;;;;;;;6074:139:4;378:9582:12;;;;;;6007:13:4;378:9582:12;6174:28:4;378:9582:12;;;;;;6174:28:4;6074:139;;;378:9582:12;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7757,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24210":{"entryPoint":7735,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":8949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":7635,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":8003,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_bytes32_dyn":{"entryPoint":7711,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":7607,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":9105,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":8681,"id":null,"parameterSlots":3,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":8658,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":7837,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7779,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7573,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_33151":{"entryPoint":7523,"id":null,"parameterSlots":1,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9245,"id":728,"parameterSlots":0,"returnSlots":0},"fun_setImplementation":{"entryPoint":8261,"id":99,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":8405,"id":1116,"parameterSlots":4,"returnSlots":1},"increment_uint256":{"entryPoint":8750,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9331,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_232d":{"entryPoint":8787,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_36e1":{"entryPoint":8067,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_52f1":{"entryPoint":8164,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ad21":{"entryPoint":8863,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_adef":{"entryPoint":9169,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d688":{"entryPoint":8562,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_f3e1":{"entryPoint":8973,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn_ptr":{"entryPoint":9059,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"564":[{"length":32,"start":4072},{"length":32,"start":4309},{"length":32,"start":5059}]},"linkReferences":{},"object":"60406080815260048036101561001457600080fd5b600090813560e01c9081630173051614611ae55781630cfb932f146116bb5781633013ce29146116925781633659cfe61461139b5781634f1ef2861461109557816352d1902d14610fd25781635867173014610fb35781637a2ccd3514610d4f5781638d97767214610bfc5781638da5cb5b14610bcf578163b053cef314610a96578163b857318514610911578163c30c4476146107b9578163c4d66de81461064c578163d174c3e2146104dc578163de2ddc5914610159575063fd66091e146100dd57600080fd5b34610156576020366003190112610156576001600160a01b0390829082610102611e37565b168152609960205220908154169061011c60018201611e9d565b92600360ff6002840154169201549061014681519586958652608060208701526080860190611f43565b9215159084015260608301520390f35b80fd5b839150346104d85760803660031901126104d85780359167ffffffffffffffff906024358281116104d4576101919036908501611dd3565b606435928084116104d057366023850112156104d057838501356101b481611e1f565b906101c185519283611d95565b8082526020958683016024819360051b830101913683116104cc57602401905b8282106104a9575050506101f361241d565b6044359687156104665760018060a01b03928a8861024986609854168c8b519485809481936323b872dd60e01b835230338c850160409194939294606082019560018060a01b0380921683521660208201520152565b03925af190811561045c5790610266918d9161042f575b506123d1565b609c54986102738a61222e565b609c55898c52609a8952878c2096336001600160601b0360a01b8954161788558b6002890155805187811161041c57808e60038b01936102bd836102b78754611e63565b876121e9565b8d91601f84116001146103b857926103ad575b50508160011b916000199060031b1c19161790555b8683015560058601805460ff19169055519485610332575b8a8a8a7fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef8b8b519384523393a3600160655580f35b60070193851161039a57600160401b851161039a57508254848455808510610380575b5091885284882090885b84811061036c57806102fd565b83518216838201559286019260010161035f565b838a52868a206103949181019086016121d2565b89610355565b634e487b7160e01b8a5260419052602489fd5b015190508f806102d0565b8581528e81209350601f198516908f5b8282106104055750509084600195949392106103ec575b505050811b0190556102e5565b015160001960f88460031b161c191690558f80806103df565b60018596829396860151815501950193018f6103c8565b634e487b7160e01b8e526041855260248efd5b61044f91508a3d8c11610455575b6104478183611d95565b8101906122f5565b8d610260565b503d61043d565b88513d8e823e3d90fd5b855162461bcd60e51b8152908101879052601860248201527f5061796d656e74206d75737420626520706f73697469766500000000000000006044820152606490fd5b81356001600160a01b03811681036104c85781529088019088016101e1565b8c80fd5b8b80fd5b8680fd5b8580fd5b8280fd5b839150346104d85760603660031901126104d8576104f8611e37565b90610501611e4d565b9060443560018060a01b0392838116948588526020936099855261052d60ff60028a8c20015416612253565b8886831696878252609b875260018a832001898352875261055460ff8b842054161561229f565b856105ad575b5087876000805160206124b583398151915288888d60028a868952609b8552610586838a209182612391565b878952600181018552828920600160ff19825416179055018352818188205551908152a380f35b6098548a516323b872dd60e01b81526001600160a01b0395909516938501938452306020850152604084018790528793859390849003606001928492165af1908115610642579161061a6002926000805160206124b5833981519152979899948b91610625575b5061230d565b91969594888a61055a565b61063c9150873d8911610455576104478183611d95565b8b610614565b87513d8a823e3d90fd5b839150346104d85760203660031901126104d857610668611e37565b90835460ff8160081c1615918280936107ac575b8015610795575b1561073b575060ff19811660011785558161072a575b508354916106be60ff8460081c166106b081612172565b6106b981612172565b612172565b60016065556001600160601b0360a01b903382609754161760975560018060a01b03169060985416176098556106f2578280f35b61ff001916825551600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a181808280f35b61ffff191661010117845584610699565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156106835750600160ff831614610683565b50600160ff83161061067c565b905082346104d857806003193601126104d8576107d4611e37565b6024359160018060a01b039183838216958688526020946099865261080160ff6002878c20015416612253565b338952609b86526001858a2001888a52865261082360ff868b2054161561229f565b8261087d575b5050509060026000805160206124b58339815191529392338852609b84526108548389209182612391565b868852600181018452828820600160ff198254161790550182528381872055519283523392a380f35b60985485516323b872dd60e01b815233938101938452306020850152604084019490945286928492908390036060019183918c91165af190811561090757916108e06002926000805160206124b58339815191529695948a916108ea575061230d565b9192938591610829565b6109019150863d8811610455576104478183611d95565b8a610614565b83513d89823e3d90fd5b905082346104d85760209081600319360112610a92578235923385526099835260ff600283872001541615610a5a57838552609a835281852090600582019384549360ff85166005811015610a4757610a115733885260998252828189200160028501548952825260ff8189205416156109d057505050906001809201336001600160601b0360a01b82541617905560ff191617905533907f52476d55ecef5cf13caa64038f297fe6bbf865d9584a98b8722a15a6d5db128f8380a380f35b5162461bcd60e51b815291820152601760248201527f5461736b2074797065206e6f7420737570706f72746564000000000000000000604482015260649150fd5b5162461bcd60e51b81529182015260126024820152715461736b206e6f7420617661696c61626c6560701b604482015260649150fd5b634e487b7160e01b895260218452602489fd5b82606492519162461bcd60e51b835282015260146024820152731059d95b9d081b9bdd081c9959da5cdd195c995960621b6044820152fd5b8380fd5b905082346104d857806003193601126104d8578135610ab3611e4d565b818552609a6020528285209060018060a01b0391600195610ada8488840154163314612473565b83831695868952609960205260ff6002828b2001541615610b8c57505086956007889201938454925b838110610b54575b505050509091929315610b44575b505033907fe3864154f13bb56610560553d549cb6947e9fd199379eefefbeb0f082c6c7ca88480a480f35b610b4d91612391565b8380610b19565b8782610b608389612363565b90549060031b1c1614610b7b57610b769061222e565b610b03565b509096508891508190508080610b0b565b906020606492519162461bcd60e51b8352820152601b60248201527f436f6c6c61626f7261746f72206e6f74207265676973746572656400000000006044820152fd5b828434610bf85781600319360112610bf85760975490516001600160a01b039091168152602090f35b5080fd5b83833461015657602090816003193601126101565783358152609a825282812060018060a01b03918282541694600193848401541690600284015490610c4460038601611e9d565b928986015497600660ff600589015416970183519889918891815491610c6983611e63565b80865292828116908115610d2d5750600114610cf2575b505050610cb3969594939291610c9791038a611d95565b82519a8b528a015288015260e0606088015260e0870190611f43565b9360808601526005821015610cdf575060a084015282820360c08401528291610cdb91611f43565b0390f35b634e487b7160e01b815260218652602490fd5b8a52848a208a93505b828410610d15575050508101820181610c97610cb3610c80565b80549484018601949094528b93928501928101610cfb565b60ff191686880152505050151560051b82018301905081610c97610cb3610c80565b839150346104d857816003193601126104d85780359067ffffffffffffffff906024358281116104d457610d869036908301611dd3565b91838652602091609a83528587209160018060a01b03906001610daf8382870154163314612473565b600585019160ff8354166005811015610fa057828114908115610f95575b5015610f5c5760068601918851918211610f4957908291610dfc82610df68b9998979654611e63565b856121e9565b868d601f8411600114610ee2579280604497959381938a989693610ed7575b501b916000199060031b1c19161790555b600360ff198254161790556098541694015491898951958694859363a9059cbb60e01b8552339085015260248401525af1908115610ecd5794610e9b610eaa927f04576aed55ed132dfaa5e03bbc10500227270d0b188aec79a7bee1202b29396e96978991610eb057506123d1565b51928284938452830190611f43565b0390a280f35b610ec79150853d8711610455576104478183611d95565b89610260565b85513d88823e3d90fd5b8e0151925038610e1b565b90601f939293198316858352898320925b8d828210610f3457505091839160449896948a98969410610f1b575b5050811b019055610e2c565b8d015160001960f88460031b161c191690558f80610f0f565b83015184558c9a938601939283019201610ef3565b634e487b7160e01b8c526041865260248cfd5b895162461bcd60e51b81528086018890526013602482015272496e76616c6964207461736b2073746174757360681b6044820152606490fd5b60029150148c610dcd565b634e487b7160e01b8c526021865260248cfd5b828434610bf85781600319360112610bf857602090609c549051908152f35b91905034610156578060031936011261015657507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361102d57602082516000805160206124d58339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b905082806003193601126104d8576110ab611e37565b9060243567ffffffffffffffff8111611397576110cb9036908501611dd3565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811692919061110530851415611f83565b6111226000805160206124d5833981519152948286541614611fe4565b8060975416330361135e577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561116857505050506111659150612045565b80f35b82516352d1902d60e01b81526020959394918416919086818981865afa89918161132b575b506111ec57855162461bcd60e51b8152808901889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b96919295949396036112d6575061120285612045565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8680a28251158015906112ce575b61123d575b5050505080f35b6112ba93858083519561124f87611d63565b602787527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c86880152660819985a5b195960ca1b858801528581519101845af4913d156112c4573d6112ac6112a382611db7565b92519283611d95565b81528681943d92013e6120d5565b5081808080611236565b50606092506120d5565b506001611231565b825162461bcd60e51b8152908101849052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508781813d8311611357575b6113438183611d95565b810103126113535751908a61118d565b8980fd5b503d611339565b825162461bcd60e51b81526020818801526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b8480fd5b905082346104d857602080600319360112610a92576113b8611e37565b916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166113f030821415611f83565b61140d6000805160206124d5833981519152918383541614611fe4565b81609754163303611659578251908482019282841067ffffffffffffffff851117611646578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611472575050505050506111659150612045565b869293949596169085516352d1902d60e01b815287818a81865afa8a9181611613575b506114f457865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b9791929396959497036115be575061150b82612045565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8780a2858451158015906115b7575b611549575b50505050505080f35b806115ab9684519661155a88611d63565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d156112c4573d6112ac6112a382611db7565b50818080808085611540565b508061153b565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b9091508881813d831161163f575b61162b8183611d95565b8101031261163b5751908b611495565b8a80fd5b503d611621565b634e487b7160e01b895260418852602489fd5b825162461bcd60e51b81528087018590526013602482015272556e617574686f72697a65642041636365737360681b6044820152606490fd5b828434610bf85781600319360112610bf85760985490516001600160a01b039091168152602090f35b828434610bf8576080366003190112610bf8576116d6611e37565b9067ffffffffffffffff604435818111611397576116f79036908701611dd3565b9060649586359361170661241d565b8492338852602092609b845260019788848b20019760018060a01b0380921698898c52865260ff858c20541615611aa3579a8a9b898c999a9b9c526099875260ff8685818c20019a6024359b8c82528a5220541615611a6257338d52609b8752858d2090156119a757505060985484516323b872dd60e01b8152338482019081523060208201526040810189905290928792849291169082908f90829060600103925af190811561199d57906117c2918c9161198057506123d1565b609c54966117cf8861222e565b609c55878b52609a8552838b20926001600160601b0360a01b33818654161785558a8c8601918254161790558760028501556003840191805191821161196d57908b8d8493611827846102b78f9c9b9a999854611e63565b8891601f85116001146118c557937fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef9a9b95938193829360059a9997946118ba575b50501b916000199060031b1c19161790555b82015501805460ff191689179055519384523393a37f52476d55ecef5cf13caa64038f297fe6bbf865d9584a98b8722a15a6d5db128f8480a360655580f35b015192503880611869565b9190601f9b979b9493941984168684528a8420935b81811061193d5750917fe04e65a2f2de9844f70a34d2eba1e53ddadaad516fa4d8f5e02ee00df908ebef9b9c979593918560059a98969410611924575b505050811b01905561187b565b015160001960f88460031b161c19169055388080611917565b94969798999b50919499809c9a8294878394015181550195019301918f9492918e9b9998979694929c9a9c6118da565b634e487b7160e01b8d526041845260248dfd5b6119979150863d8811610455576104478183611d95565b8c610260565b84513d8d823e3d90fd5b8a8d52600201808752858d2054939750909290915015611a0957888b52845280838b2054116000146119fe57935b84838b2080549182039182116119eb57556117c2565b634e487b7160e01b8c526011835260248cfd5b5081892054936119d5565b835162461bcd60e51b8152808701869052602e60248201527f4e6f207061796d656e742070726f766964656420616e64206e6f20616c6c6f7760448201526d616e636520617661696c61626c6560901b81840152608490fd5b50845162461bcd60e51b8152808401879052602481018790527f5461736b2074797065206e6f7420737570706f72746564206279206167656e746044820152fd5b845162461bcd60e51b8152808401879052601d60248201527f4167656e74206e6f74207265676973746572656420666f72207573657200000060448201528c90fd5b905082346104d857806003193601126104d85767ffffffffffffffff90823582811161139757611b189036908501611dd3565b91602435938185116104d457366023860112156104d4578481013590611b3d82611e1f565b92611b4a85519485611d95565b8284526020968785016024600595861b8301019136831161163b5760248a9101915b838310611d5357505050503388526099875260ff6002868a20015416611d10573388526099875284882092336001600160601b0360a01b855416178455600191828501908851908111611cfd579081611bd1859493611bcb8454611e63565b846121e9565b8a601f8211600114611c99578c9082611c8e575b50600019600383901b1c191690841b17905590935b600281019360ff19948486825416179055606460038301558a9101925b611c54575b86518981528a9033907fda816ca2fc37b9eecec62ae8263008ec6be1afb38dc28bc9c7c51d7e348da9c29080610eaa818f018e611f43565b8551811015611c895790611c81828a879594841b890101518c52838b52888c20858782541617905561222e565b909192611c17565b611c1c565b90508a01518d611be5565b828d528b8d2090601f1983168e8e8e5b838310611ce65750505090838794939210611ccd575b5050811b0190559093611bfa565b8c015160001960f88460031b161c191690558d80611cbf565b840151855589989094019392830192018e8e611ca9565b634e487b7160e01b8b526041855260248bfd5b845162461bcd60e51b8152808301889052601860248201527f4167656e7420616c7265616479207265676973746572656400000000000000006044820152606490fd5b82358152918101918a9101611b6c565b6060810190811067ffffffffffffffff821117611d7f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611d7f57604052565b67ffffffffffffffff8111611d7f57601f01601f191660200190565b81601f82011215611e1a57803590611dea82611db7565b92611df86040519485611d95565b82845260208383010111611e1a57816000926020809301838601378301015290565b600080fd5b67ffffffffffffffff8111611d7f5760051b60200190565b600435906001600160a01b0382168203611e1a57565b602435906001600160a01b0382168203611e1a57565b90600182811c92168015611e93575b6020831014611e7d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e72565b9060405191826000825492611eb184611e63565b908184526001948581169081600014611f205750600114611edd575b5050611edb92500383611d95565b565b9093915060005260209081600020936000915b818310611f08575050611edb93508201013880611ecd565b85548884018501529485019487945091830191611ef0565b915050611edb94506020925060ff191682840152151560051b8201013880611ecd565b919082519283825260005b848110611f6f575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611f4e565b15611f8a57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15611feb57565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b1561207a576000805160206124d583398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b9192901561213757508151156120e9575090565b3b156120f25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561214a5750805190602001fd5b60405162461bcd60e51b81526020600482015290819061216e906024830190611f43565b0390fd5b1561217957565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b8181106121dd575050565b600081556001016121d2565b9190601f81116121f857505050565b611edb926000526020600020906020601f840160051c83019310612224575b601f0160051c01906121d2565b9091508190612217565b600019811461223d5760010190565b634e487b7160e01b600052601160045260246000fd5b1561225a57565b60405162461bcd60e51b815260206004820152601e60248201527f4167656e74206e6f74207265676973746572656420696e2073797374656d00006044820152606490fd5b156122a657565b60405162461bcd60e51b815260206004820152602160248201527f4167656e7420616c7265616479207265676973746572656420666f72207573656044820152603960f91b6064820152608490fd5b90816020910312611e1a57518015158103611e1a5790565b1561231457565b60405162461bcd60e51b815260206004820152602160248201527f5061796d656e7420616c6c6f77616e6365207472616e73666572206661696c656044820152601960fa1b6064820152608490fd5b805482101561237b5760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b8054600160401b811015611d7f576123ae91600182018155612363565b819291549060031b9160018060a01b039283811b93849216901b16911916179055565b156123d857565b60405162461bcd60e51b815260206004820152601760248201527f5061796d656e74207472616e73666572206661696c65640000000000000000006044820152606490fd5b60026065541461242e576002606555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b1561247a57565b60405162461bcd60e51b8152602060048201526012602482015271139bdd08185cdcda59db9959081859d95b9d60721b6044820152606490fdfeb14eafe918ed2ebe411ca6d11c3ef5c8330bf0979fa0384ef0f26b8ed7b50fbf360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212205c1220f2bb3ba9b8c95969727418d2ccfd264a41729b96a54b01666b4be81d4b64736f6c63430008110033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1730516 EQ PUSH2 0x1AE5 JUMPI DUP2 PUSH4 0xCFB932F EQ PUSH2 0x16BB JUMPI DUP2 PUSH4 0x3013CE29 EQ PUSH2 0x1692 JUMPI DUP2 PUSH4 0x3659CFE6 EQ PUSH2 0x139B JUMPI DUP2 PUSH4 0x4F1EF286 EQ PUSH2 0x1095 JUMPI DUP2 PUSH4 0x52D1902D EQ PUSH2 0xFD2 JUMPI DUP2 PUSH4 0x58671730 EQ PUSH2 0xFB3 JUMPI DUP2 PUSH4 0x7A2CCD35 EQ PUSH2 0xD4F JUMPI DUP2 PUSH4 0x8D977672 EQ PUSH2 0xBFC JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xBCF JUMPI DUP2 PUSH4 0xB053CEF3 EQ PUSH2 0xA96 JUMPI DUP2 PUSH4 0xB8573185 EQ PUSH2 0x911 JUMPI DUP2 PUSH4 0xC30C4476 EQ PUSH2 0x7B9 JUMPI DUP2 PUSH4 0xC4D66DE8 EQ PUSH2 0x64C JUMPI DUP2 PUSH4 0xD174C3E2 EQ PUSH2 0x4DC JUMPI DUP2 PUSH4 0xDE2DDC59 EQ PUSH2 0x159 JUMPI POP PUSH4 0xFD66091E EQ PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x156 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x156 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP3 SWAP1 DUP3 PUSH2 0x102 PUSH2 0x1E37 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 PUSH2 0x11C PUSH1 0x1 DUP3 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 PUSH1 0x3 PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD SWAP1 PUSH2 0x146 DUP2 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SWAP3 ISZERO ISZERO SWAP1 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x4D4 JUMPI PUSH2 0x191 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP3 DUP1 DUP5 GT PUSH2 0x4D0 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x4D0 JUMPI DUP4 DUP6 ADD CALLDATALOAD PUSH2 0x1B4 DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 PUSH2 0x1C1 DUP6 MLOAD SWAP3 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 ADD PUSH1 0x24 DUP2 SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x4CC JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4A9 JUMPI POP POP POP PUSH2 0x1F3 PUSH2 0x241D JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP7 DUP8 ISZERO PUSH2 0x466 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP11 DUP9 PUSH2 0x249 DUP7 PUSH1 0x98 SLOAD AND DUP13 DUP12 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE ADDRESS CALLER DUP13 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x45C JUMPI SWAP1 PUSH2 0x266 SWAP2 DUP14 SWAP2 PUSH2 0x42F JUMPI JUMPDEST POP PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x9C SLOAD SWAP9 PUSH2 0x273 DUP11 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x9C SSTORE DUP10 DUP13 MSTORE PUSH1 0x9A DUP10 MSTORE DUP8 DUP13 KECCAK256 SWAP7 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP10 SLOAD AND OR DUP9 SSTORE DUP12 PUSH1 0x2 DUP10 ADD SSTORE DUP1 MLOAD DUP8 DUP2 GT PUSH2 0x41C JUMPI DUP1 DUP15 PUSH1 0x3 DUP12 ADD SWAP4 PUSH2 0x2BD DUP4 PUSH2 0x2B7 DUP8 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP8 PUSH2 0x21E9 JUMP JUMPDEST DUP14 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3B8 JUMPI SWAP3 PUSH2 0x3AD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP7 DUP4 ADD SSTORE PUSH1 0x5 DUP7 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD SWAP5 DUP6 PUSH2 0x332 JUMPI JUMPDEST DUP11 DUP11 DUP11 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF DUP12 DUP12 MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH1 0x1 PUSH1 0x65 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x7 ADD SWAP4 DUP6 GT PUSH2 0x39A JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP6 GT PUSH2 0x39A JUMPI POP DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x380 JUMPI JUMPDEST POP SWAP2 DUP9 MSTORE DUP5 DUP9 KECCAK256 SWAP1 DUP9 JUMPDEST DUP5 DUP2 LT PUSH2 0x36C JUMPI DUP1 PUSH2 0x2FD JUMP JUMPDEST DUP4 MLOAD DUP3 AND DUP4 DUP3 ADD SSTORE SWAP3 DUP7 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x35F JUMP JUMPDEST DUP4 DUP11 MSTORE DUP7 DUP11 KECCAK256 PUSH2 0x394 SWAP2 DUP2 ADD SWAP1 DUP7 ADD PUSH2 0x21D2 JUMP JUMPDEST DUP10 PUSH2 0x355 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP16 DUP1 PUSH2 0x2D0 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP15 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 DUP16 JUMPDEST DUP3 DUP3 LT PUSH2 0x405 JUMPI POP POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x3EC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2E5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 DUP1 PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP4 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD DUP16 PUSH2 0x3C8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST PUSH2 0x44F SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x455 JUMPI JUMPDEST PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x22F5 JUMP JUMPDEST DUP14 PUSH2 0x260 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x43D JUMP JUMPDEST DUP9 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74206D75737420626520706F7369746976650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4C8 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x1E1 JUMP JUMPDEST DUP13 DUP1 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x4F8 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH2 0x501 PUSH2 0x1E4D JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP2 AND SWAP5 DUP6 DUP9 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x99 DUP6 MSTORE PUSH2 0x52D PUSH1 0xFF PUSH1 0x2 DUP11 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0x2253 JUMP JUMPDEST DUP9 DUP7 DUP4 AND SWAP7 DUP8 DUP3 MSTORE PUSH1 0x9B DUP8 MSTORE PUSH1 0x1 DUP11 DUP4 KECCAK256 ADD DUP10 DUP4 MSTORE DUP8 MSTORE PUSH2 0x554 PUSH1 0xFF DUP12 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x229F JUMP JUMPDEST DUP6 PUSH2 0x5AD JUMPI JUMPDEST POP DUP8 DUP8 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 DUP9 DUP14 PUSH1 0x2 DUP11 DUP7 DUP10 MSTORE PUSH1 0x9B DUP6 MSTORE PUSH2 0x586 DUP4 DUP11 KECCAK256 SWAP2 DUP3 PUSH2 0x2391 JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x1 DUP2 ADD DUP6 MSTORE DUP3 DUP10 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP4 MSTORE DUP2 DUP2 DUP9 KECCAK256 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH1 0x98 SLOAD DUP11 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND SWAP4 DUP6 ADD SWAP4 DUP5 MSTORE ADDRESS PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD DUP8 SWAP1 MSTORE DUP8 SWAP4 DUP6 SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH1 0x60 ADD SWAP3 DUP5 SWAP3 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI SWAP2 PUSH2 0x61A PUSH1 0x2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 SWAP10 SWAP5 DUP12 SWAP2 PUSH2 0x625 JUMPI JUMPDEST POP PUSH2 0x230D JUMP JUMPDEST SWAP2 SWAP7 SWAP6 SWAP5 DUP9 DUP11 PUSH2 0x55A JUMP JUMPDEST PUSH2 0x63C SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP12 PUSH2 0x614 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x668 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 DUP4 SLOAD PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO SWAP2 DUP3 DUP1 SWAP4 PUSH2 0x7AC JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x795 JUMPI JUMPDEST ISZERO PUSH2 0x73B JUMPI POP PUSH1 0xFF NOT DUP2 AND PUSH1 0x1 OR DUP6 SSTORE DUP2 PUSH2 0x72A JUMPI JUMPDEST POP DUP4 SLOAD SWAP2 PUSH2 0x6BE PUSH1 0xFF DUP5 PUSH1 0x8 SHR AND PUSH2 0x6B0 DUP2 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x6B9 DUP2 PUSH2 0x2172 JUMP JUMPDEST PUSH2 0x2172 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x65 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 CALLER DUP3 PUSH1 0x97 SLOAD AND OR PUSH1 0x97 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x98 SLOAD AND OR PUSH1 0x98 SSTORE PUSH2 0x6F2 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFF00 NOT AND DUP3 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP2 DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH2 0xFFFF NOT AND PUSH2 0x101 OR DUP5 SSTORE DUP5 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x683 JUMPI POP PUSH1 0x1 PUSH1 0xFF DUP4 AND EQ PUSH2 0x683 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0xFF DUP4 AND LT PUSH2 0x67C JUMP JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x7D4 PUSH2 0x1E37 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP4 DUP4 DUP3 AND SWAP6 DUP7 DUP9 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x99 DUP7 MSTORE PUSH2 0x801 PUSH1 0xFF PUSH1 0x2 DUP8 DUP13 KECCAK256 ADD SLOAD AND PUSH2 0x2253 JUMP JUMPDEST CALLER DUP10 MSTORE PUSH1 0x9B DUP7 MSTORE PUSH1 0x1 DUP6 DUP11 KECCAK256 ADD DUP9 DUP11 MSTORE DUP7 MSTORE PUSH2 0x823 PUSH1 0xFF DUP7 DUP12 KECCAK256 SLOAD AND ISZERO PUSH2 0x229F JUMP JUMPDEST DUP3 PUSH2 0x87D JUMPI JUMPDEST POP POP POP SWAP1 PUSH1 0x2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 SWAP3 CALLER DUP9 MSTORE PUSH1 0x9B DUP5 MSTORE PUSH2 0x854 DUP4 DUP10 KECCAK256 SWAP2 DUP3 PUSH2 0x2391 JUMP JUMPDEST DUP7 DUP9 MSTORE PUSH1 0x1 DUP2 ADD DUP5 MSTORE DUP3 DUP9 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP3 MSTORE DUP4 DUP2 DUP8 KECCAK256 SSTORE MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x98 SLOAD DUP6 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP4 DUP2 ADD SWAP4 DUP5 MSTORE ADDRESS PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP7 SWAP3 DUP5 SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH1 0x60 ADD SWAP2 DUP4 SWAP2 DUP13 SWAP2 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x907 JUMPI SWAP2 PUSH2 0x8E0 PUSH1 0x2 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24B5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP6 SWAP5 DUP11 SWAP2 PUSH2 0x8EA JUMPI POP PUSH2 0x230D JUMP JUMPDEST SWAP2 SWAP3 SWAP4 DUP6 SWAP2 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x901 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP11 PUSH2 0x614 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA92 JUMPI DUP3 CALLDATALOAD SWAP3 CALLER DUP6 MSTORE PUSH1 0x99 DUP4 MSTORE PUSH1 0xFF PUSH1 0x2 DUP4 DUP8 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xA5A JUMPI DUP4 DUP6 MSTORE PUSH1 0x9A DUP4 MSTORE DUP2 DUP6 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SWAP4 DUP5 SLOAD SWAP4 PUSH1 0xFF DUP6 AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA11 JUMPI CALLER DUP9 MSTORE PUSH1 0x99 DUP3 MSTORE DUP3 DUP2 DUP10 KECCAK256 ADD PUSH1 0x2 DUP6 ADD SLOAD DUP10 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 DUP10 KECCAK256 SLOAD AND ISZERO PUSH2 0x9D0 JUMPI POP POP POP SWAP1 PUSH1 0x1 DUP1 SWAP3 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0xFF NOT AND OR SWAP1 SSTORE CALLER SWAP1 PUSH32 0x52476D55ECEF5CF13CAA64038F297FE6BBF865D9584A98B8722A15A6D5DB128F DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5461736B2074797065206E6F7420737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5461736B206E6F7420617661696C61626C65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x21 DUP5 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1059D95B9D081B9BDD081C9959DA5CDD195C9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI DUP2 CALLDATALOAD PUSH2 0xAB3 PUSH2 0x1E4D JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE DUP3 DUP6 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x1 SWAP6 PUSH2 0xADA DUP5 DUP9 DUP5 ADD SLOAD AND CALLER EQ PUSH2 0x2473 JUMP JUMPDEST DUP4 DUP4 AND SWAP6 DUP7 DUP10 MSTORE PUSH1 0x99 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x2 DUP3 DUP12 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xB8C JUMPI POP POP DUP7 SWAP6 PUSH1 0x7 DUP9 SWAP3 ADD SWAP4 DUP5 SLOAD SWAP3 JUMPDEST DUP4 DUP2 LT PUSH2 0xB54 JUMPI JUMPDEST POP POP POP POP SWAP1 SWAP2 SWAP3 SWAP4 ISZERO PUSH2 0xB44 JUMPI JUMPDEST POP POP CALLER SWAP1 PUSH32 0xE3864154F13BB56610560553D549CB6947E9FD199379EEFEFBEB0F082C6C7CA8 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH2 0xB4D SWAP2 PUSH2 0x2391 JUMP JUMPDEST DUP4 DUP1 PUSH2 0xB19 JUMP JUMPDEST DUP8 DUP3 PUSH2 0xB60 DUP4 DUP10 PUSH2 0x2363 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND EQ PUSH2 0xB7B JUMPI PUSH2 0xB76 SWAP1 PUSH2 0x222E JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST POP SWAP1 SWAP7 POP DUP9 SWAP2 POP DUP2 SWAP1 POP DUP1 DUP1 PUSH2 0xB0B JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6C6C61626F7261746F72206E6F7420726567697374657265640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x97 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP4 CALLVALUE PUSH2 0x156 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x156 JUMPI DUP4 CALLDATALOAD DUP2 MSTORE PUSH1 0x9A DUP3 MSTORE DUP3 DUP2 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP3 SLOAD AND SWAP5 PUSH1 0x1 SWAP4 DUP5 DUP5 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP5 ADD SLOAD SWAP1 PUSH2 0xC44 PUSH1 0x3 DUP7 ADD PUSH2 0x1E9D JUMP JUMPDEST SWAP3 DUP10 DUP7 ADD SLOAD SWAP8 PUSH1 0x6 PUSH1 0xFF PUSH1 0x5 DUP10 ADD SLOAD AND SWAP8 ADD DUP4 MLOAD SWAP9 DUP10 SWAP2 DUP9 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0xC69 DUP4 PUSH2 0x1E63 JUMP JUMPDEST DUP1 DUP7 MSTORE SWAP3 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD2D JUMPI POP PUSH1 0x1 EQ PUSH2 0xCF2 JUMPI JUMPDEST POP POP POP PUSH2 0xCB3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0xC97 SWAP2 SUB DUP11 PUSH2 0x1D95 JUMP JUMPDEST DUP3 MLOAD SWAP11 DUP12 MSTORE DUP11 ADD MSTORE DUP9 ADD MSTORE PUSH1 0xE0 PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x5 DUP3 LT ISZERO PUSH2 0xCDF JUMPI POP PUSH1 0xA0 DUP5 ADD MSTORE DUP3 DUP3 SUB PUSH1 0xC0 DUP5 ADD MSTORE DUP3 SWAP2 PUSH2 0xCDB SWAP2 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP11 MSTORE DUP5 DUP11 KECCAK256 DUP11 SWAP4 POP JUMPDEST DUP3 DUP5 LT PUSH2 0xD15 JUMPI POP POP POP DUP2 ADD DUP3 ADD DUP2 PUSH2 0xC97 PUSH2 0xCB3 PUSH2 0xC80 JUMP JUMPDEST DUP1 SLOAD SWAP5 DUP5 ADD DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP12 SWAP4 SWAP3 DUP6 ADD SWAP3 DUP2 ADD PUSH2 0xCFB JUMP JUMPDEST PUSH1 0xFF NOT AND DUP7 DUP9 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD DUP4 ADD SWAP1 POP DUP2 PUSH2 0xC97 PUSH2 0xCB3 PUSH2 0xC80 JUMP JUMPDEST DUP4 SWAP2 POP CALLVALUE PUSH2 0x4D8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x4D4 JUMPI PUSH2 0xD86 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP2 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x9A DUP4 MSTORE DUP6 DUP8 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x1 PUSH2 0xDAF DUP4 DUP3 DUP8 ADD SLOAD AND CALLER EQ PUSH2 0x2473 JUMP JUMPDEST PUSH1 0x5 DUP6 ADD SWAP2 PUSH1 0xFF DUP4 SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xFA0 JUMPI DUP3 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0xF95 JUMPI JUMPDEST POP ISZERO PUSH2 0xF5C JUMPI PUSH1 0x6 DUP7 ADD SWAP2 DUP9 MLOAD SWAP2 DUP3 GT PUSH2 0xF49 JUMPI SWAP1 DUP3 SWAP2 PUSH2 0xDFC DUP3 PUSH2 0xDF6 DUP12 SWAP10 SWAP9 SWAP8 SWAP7 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP6 PUSH2 0x21E9 JUMP JUMPDEST DUP7 DUP14 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0xEE2 JUMPI SWAP3 DUP1 PUSH1 0x44 SWAP8 SWAP6 SWAP4 DUP2 SWAP4 DUP11 SWAP9 SWAP7 SWAP4 PUSH2 0xED7 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x98 SLOAD AND SWAP5 ADD SLOAD SWAP2 DUP10 DUP10 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE CALLER SWAP1 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xECD JUMPI SWAP5 PUSH2 0xE9B PUSH2 0xEAA SWAP3 PUSH32 0x4576AED55ED132DFAA5E03BBC10500227270D0B188AEC79A7BEE1202B29396E SWAP7 SWAP8 DUP10 SWAP2 PUSH2 0xEB0 JUMPI POP PUSH2 0x23D1 JUMP JUMPDEST MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH2 0xEC7 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP10 PUSH2 0x260 JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP15 ADD MLOAD SWAP3 POP CODESIZE PUSH2 0xE1B JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND DUP6 DUP4 MSTORE DUP10 DUP4 KECCAK256 SWAP3 JUMPDEST DUP14 DUP3 DUP3 LT PUSH2 0xF34 JUMPI POP POP SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP9 SWAP7 SWAP5 DUP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0xF1B JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xE2C JUMP JUMPDEST DUP14 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP16 DUP1 PUSH2 0xF0F JUMP JUMPDEST DUP4 ADD MLOAD DUP5 SSTORE DUP13 SWAP11 SWAP4 DUP7 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xEF3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 DUP7 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP10 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP7 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E76616C6964207461736B20737461747573 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP2 POP EQ DUP13 PUSH2 0xDCD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x21 DUP7 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9C SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x156 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x156 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x102D JUMPI PUSH1 0x20 DUP3 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP3 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH2 0x10AB PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x10CB SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND SWAP3 SWAP2 SWAP1 PUSH2 0x1105 ADDRESS DUP6 EQ ISZERO PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x1122 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP5 DUP3 DUP7 SLOAD AND EQ PUSH2 0x1FE4 JUMP JUMPDEST DUP1 PUSH1 0x97 SLOAD AND CALLER SUB PUSH2 0x135E JUMPI PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1168 JUMPI POP POP POP POP PUSH2 0x1165 SWAP2 POP PUSH2 0x2045 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP6 SWAP4 SWAP5 SWAP2 DUP5 AND SWAP2 SWAP1 DUP7 DUP2 DUP10 DUP2 DUP7 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x132B JUMPI JUMPDEST POP PUSH2 0x11EC JUMPI DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP10 ADD DUP9 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP2 SWAP3 SWAP6 SWAP5 SWAP4 SWAP7 SUB PUSH2 0x12D6 JUMPI POP PUSH2 0x1202 DUP6 PUSH2 0x2045 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP7 DUP1 LOG2 DUP3 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x12CE JUMPI JUMPDEST PUSH2 0x123D JUMPI JUMPDEST POP POP POP POP DUP1 RETURN JUMPDEST PUSH2 0x12BA SWAP4 DUP6 DUP1 DUP4 MLOAD SWAP6 PUSH2 0x124F DUP8 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x27 DUP8 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP7 DUP9 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP6 DUP9 ADD MSTORE DUP6 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH2 0x12AC PUSH2 0x12A3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x20D5 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 PUSH2 0x1236 JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x20D5 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x1231 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1357 JUMPI JUMPDEST PUSH2 0x1343 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1353 JUMPI MLOAD SWAP1 DUP11 PUSH2 0x118D JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1339 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP9 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xA92 JUMPI PUSH2 0x13B8 PUSH2 0x1E37 JUMP JUMPDEST SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH2 0x13F0 ADDRESS DUP3 EQ ISZERO PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x140D PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP4 DUP4 SLOAD AND EQ PUSH2 0x1FE4 JUMP JUMPDEST DUP2 PUSH1 0x97 SLOAD AND CALLER SUB PUSH2 0x1659 JUMPI DUP3 MLOAD SWAP1 DUP5 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x1646 JUMPI DUP4 DUP6 MSTORE DUP9 DUP4 MSTORE PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1472 JUMPI POP POP POP POP POP POP PUSH2 0x1165 SWAP2 POP PUSH2 0x2045 JUMP JUMPDEST DUP7 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 AND SWAP1 DUP6 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP8 DUP2 DUP11 DUP2 DUP7 GAS STATICCALL DUP11 SWAP2 DUP2 PUSH2 0x1613 JUMPI JUMPDEST POP PUSH2 0x14F4 JUMPI DUP7 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP11 ADD DUP10 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP8 SWAP2 SWAP3 SWAP4 SWAP7 SWAP6 SWAP5 SWAP8 SUB PUSH2 0x15BE JUMPI POP PUSH2 0x150B DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP8 DUP1 LOG2 DUP6 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15B7 JUMPI JUMPDEST PUSH2 0x1549 JUMPI JUMPDEST POP POP POP POP POP POP DUP1 RETURN JUMPDEST DUP1 PUSH2 0x15AB SWAP7 DUP5 MLOAD SWAP7 PUSH2 0x155A DUP9 PUSH2 0x1D63 JUMP JUMPDEST PUSH1 0x27 DUP9 MSTORE PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C DUP8 DUP10 ADD MSTORE PUSH7 0x819985A5B1959 PUSH1 0xCA SHL DUP7 DUP10 ADD MSTORE MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x12C4 JUMPI RETURNDATASIZE PUSH2 0x12AC PUSH2 0x12A3 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST POP DUP2 DUP1 DUP1 DUP1 DUP1 DUP6 PUSH2 0x1540 JUMP JUMPDEST POP DUP1 PUSH2 0x153B JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP9 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x163F JUMPI JUMPDEST PUSH2 0x162B DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x163B JUMPI MLOAD SWAP1 DUP12 PUSH2 0x1495 JUMP JUMPDEST DUP11 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1621 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x41 DUP9 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP6 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x556E617574686F72697A656420416363657373 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xBF8 JUMPI PUSH1 0x98 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0xBF8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xBF8 JUMPI PUSH2 0x16D6 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x16F7 SWAP1 CALLDATASIZE SWAP1 DUP8 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP1 PUSH1 0x64 SWAP6 DUP7 CALLDATALOAD SWAP4 PUSH2 0x1706 PUSH2 0x241D JUMP JUMPDEST DUP5 SWAP3 CALLER DUP9 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x9B DUP5 MSTORE PUSH1 0x1 SWAP8 DUP9 DUP5 DUP12 KECCAK256 ADD SWAP8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP9 DUP10 DUP13 MSTORE DUP7 MSTORE PUSH1 0xFF DUP6 DUP13 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AA3 JUMPI SWAP11 DUP11 SWAP12 DUP10 DUP13 SWAP10 SWAP11 SWAP12 SWAP13 MSTORE PUSH1 0x99 DUP8 MSTORE PUSH1 0xFF DUP7 DUP6 DUP2 DUP13 KECCAK256 ADD SWAP11 PUSH1 0x24 CALLDATALOAD SWAP12 DUP13 DUP3 MSTORE DUP11 MSTORE KECCAK256 SLOAD AND ISZERO PUSH2 0x1A62 JUMPI CALLER DUP14 MSTORE PUSH1 0x9B DUP8 MSTORE DUP6 DUP14 KECCAK256 SWAP1 ISZERO PUSH2 0x19A7 JUMPI POP POP PUSH1 0x98 SLOAD DUP5 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP5 DUP3 ADD SWAP1 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 SWAP3 DUP8 SWAP3 DUP5 SWAP3 SWAP2 AND SWAP1 DUP3 SWAP1 DUP16 SWAP1 DUP3 SWAP1 PUSH1 0x60 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x199D JUMPI SWAP1 PUSH2 0x17C2 SWAP2 DUP13 SWAP2 PUSH2 0x1980 JUMPI POP PUSH2 0x23D1 JUMP JUMPDEST PUSH1 0x9C SLOAD SWAP7 PUSH2 0x17CF DUP9 PUSH2 0x222E JUMP JUMPDEST PUSH1 0x9C SSTORE DUP8 DUP12 MSTORE PUSH1 0x9A DUP6 MSTORE DUP4 DUP12 KECCAK256 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL CALLER DUP2 DUP7 SLOAD AND OR DUP6 SSTORE DUP11 DUP13 DUP7 ADD SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD SWAP2 DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x196D JUMPI SWAP1 DUP12 DUP14 DUP5 SWAP4 PUSH2 0x1827 DUP5 PUSH2 0x2B7 DUP16 SWAP13 SWAP12 SWAP11 SWAP10 SWAP9 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP9 SWAP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0x18C5 JUMPI SWAP4 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF SWAP11 SWAP12 SWAP6 SWAP4 DUP2 SWAP4 DUP3 SWAP4 PUSH1 0x5 SWAP11 SWAP10 SWAP8 SWAP5 PUSH2 0x18BA JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP3 ADD SSTORE ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP10 OR SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE CALLER SWAP4 LOG3 PUSH32 0x52476D55ECEF5CF13CAA64038F297FE6BBF865D9584A98B8722A15A6D5DB128F DUP5 DUP1 LOG3 PUSH1 0x65 SSTORE DUP1 RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x1869 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F SWAP12 SWAP8 SWAP12 SWAP5 SWAP4 SWAP5 NOT DUP5 AND DUP7 DUP5 MSTORE DUP11 DUP5 KECCAK256 SWAP4 JUMPDEST DUP2 DUP2 LT PUSH2 0x193D JUMPI POP SWAP2 PUSH32 0xE04E65A2F2DE9844F70A34D2EBA1E53DDADAAD516FA4D8F5E02EE00DF908EBEF SWAP12 SWAP13 SWAP8 SWAP6 SWAP4 SWAP2 DUP6 PUSH1 0x5 SWAP11 SWAP9 SWAP7 SWAP5 LT PUSH2 0x1924 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x187B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1917 JUMP JUMPDEST SWAP5 SWAP7 SWAP8 SWAP9 SWAP10 SWAP12 POP SWAP2 SWAP5 SWAP10 DUP1 SWAP13 SWAP11 DUP3 SWAP5 DUP8 DUP4 SWAP5 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP2 DUP16 SWAP5 SWAP3 SWAP2 DUP15 SWAP12 SWAP10 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 SWAP13 SWAP11 SWAP13 PUSH2 0x18DA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP14 MSTORE PUSH1 0x41 DUP5 MSTORE PUSH1 0x24 DUP14 REVERT JUMPDEST PUSH2 0x1997 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x455 JUMPI PUSH2 0x447 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP13 PUSH2 0x260 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP14 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP14 MSTORE PUSH1 0x2 ADD DUP1 DUP8 MSTORE DUP6 DUP14 KECCAK256 SLOAD SWAP4 SWAP8 POP SWAP1 SWAP3 SWAP1 SWAP2 POP ISZERO PUSH2 0x1A09 JUMPI DUP9 DUP12 MSTORE DUP5 MSTORE DUP1 DUP4 DUP12 KECCAK256 SLOAD GT PUSH1 0x0 EQ PUSH2 0x19FE JUMPI SWAP4 JUMPDEST DUP5 DUP4 DUP12 KECCAK256 DUP1 SLOAD SWAP2 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x19EB JUMPI SSTORE PUSH2 0x17C2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x11 DUP4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST POP DUP2 DUP10 KECCAK256 SLOAD SWAP4 PUSH2 0x19D5 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP8 ADD DUP7 SWAP1 MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207061796D656E742070726F766964656420616E64206E6F20616C6C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x616E636520617661696C61626C65 PUSH1 0x90 SHL DUP2 DUP5 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH32 0x5461736B2074797065206E6F7420737570706F72746564206279206167656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP5 ADD DUP8 SWAP1 MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F74207265676973746572656420666F722075736572000000 PUSH1 0x44 DUP3 ADD MSTORE DUP13 SWAP1 REVERT JUMPDEST SWAP1 POP DUP3 CALLVALUE PUSH2 0x4D8 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x4D8 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x1397 JUMPI PUSH2 0x1B18 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x1DD3 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP4 DUP2 DUP6 GT PUSH2 0x4D4 JUMPI CALLDATASIZE PUSH1 0x23 DUP7 ADD SLT ISZERO PUSH2 0x4D4 JUMPI DUP5 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0x1B3D DUP3 PUSH2 0x1E1F JUMP JUMPDEST SWAP3 PUSH2 0x1B4A DUP6 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP6 ADD PUSH1 0x24 PUSH1 0x5 SWAP6 DUP7 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x163B JUMPI PUSH1 0x24 DUP11 SWAP2 ADD SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D53 JUMPI POP POP POP POP CALLER DUP9 MSTORE PUSH1 0x99 DUP8 MSTORE PUSH1 0xFF PUSH1 0x2 DUP7 DUP11 KECCAK256 ADD SLOAD AND PUSH2 0x1D10 JUMPI CALLER DUP9 MSTORE PUSH1 0x99 DUP8 MSTORE DUP5 DUP9 KECCAK256 SWAP3 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE PUSH1 0x1 SWAP2 DUP3 DUP6 ADD SWAP1 DUP9 MLOAD SWAP1 DUP2 GT PUSH2 0x1CFD JUMPI SWAP1 DUP2 PUSH2 0x1BD1 DUP6 SWAP5 SWAP4 PUSH2 0x1BCB DUP5 SLOAD PUSH2 0x1E63 JUMP JUMPDEST DUP5 PUSH2 0x21E9 JUMP JUMPDEST DUP11 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1C99 JUMPI DUP13 SWAP1 DUP3 PUSH2 0x1C8E JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE SWAP1 SWAP4 JUMPDEST PUSH1 0x2 DUP2 ADD SWAP4 PUSH1 0xFF NOT SWAP5 DUP5 DUP7 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x64 PUSH1 0x3 DUP4 ADD SSTORE DUP11 SWAP2 ADD SWAP3 JUMPDEST PUSH2 0x1C54 JUMPI JUMPDEST DUP7 MLOAD DUP10 DUP2 MSTORE DUP11 SWAP1 CALLER SWAP1 PUSH32 0xDA816CA2FC37B9EECEC62AE8263008EC6BE1AFB38DC28BC9C7C51D7E348DA9C2 SWAP1 DUP1 PUSH2 0xEAA DUP2 DUP16 ADD DUP15 PUSH2 0x1F43 JUMP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1C89 JUMPI SWAP1 PUSH2 0x1C81 DUP3 DUP11 DUP8 SWAP6 SWAP5 DUP5 SHL DUP10 ADD ADD MLOAD DUP13 MSTORE DUP4 DUP12 MSTORE DUP9 DUP13 KECCAK256 DUP6 DUP8 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x222E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x1C17 JUMP JUMPDEST PUSH2 0x1C1C JUMP JUMPDEST SWAP1 POP DUP11 ADD MLOAD DUP14 PUSH2 0x1BE5 JUMP JUMPDEST DUP3 DUP14 MSTORE DUP12 DUP14 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP15 DUP15 DUP15 JUMPDEST DUP4 DUP4 LT PUSH2 0x1CE6 JUMPI POP POP POP SWAP1 DUP4 DUP8 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1CCD JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE SWAP1 SWAP4 PUSH2 0x1BFA JUMP JUMPDEST DUP13 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 PUSH2 0x1CBF JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP9 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD DUP15 DUP15 PUSH2 0x1CA9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP6 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE DUP1 DUP4 ADD DUP9 SWAP1 MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420616C726561647920726567697374657265640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP11 SWAP2 ADD PUSH2 0x1B6C JUMP JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1D7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1D7F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1D7F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1E1A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x1DEA DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SWAP3 PUSH2 0x1DF8 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1E1A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1D7F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E1A JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1E1A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E93 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1E7D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E72 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1EB1 DUP5 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F20 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EDD JUMPI JUMPDEST POP POP PUSH2 0x1EDB SWAP3 POP SUB DUP4 PUSH2 0x1D95 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F08 JUMPI POP POP PUSH2 0x1EDB SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECD JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EDB SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECD JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1F6F JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1F4E JUMP JUMPDEST ISZERO PUSH2 0x1F8A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1FEB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x207A JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x24D5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x2137 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x20E9 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x20F2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x214A JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP2 SWAP1 PUSH2 0x216E SWAP1 PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x1F43 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2179 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x21DD JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21D2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x21F8 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x1EDB SWAP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP4 ADD SWAP4 LT PUSH2 0x2224 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x21D2 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x223D JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x225A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E74206E6F74207265676973746572656420696E2073797374656D0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22A6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4167656E7420616C7265616479207265676973746572656420666F7220757365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1E1A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1E1A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2314 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420616C6C6F77616E6365207472616E73666572206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x237B JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x1D7F JUMPI PUSH2 0x23AE SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2363 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP2 SHL SWAP4 DUP5 SWAP3 AND SWAP1 SHL AND SWAP2 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x23D8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E74207472616E73666572206661696C6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x65 SLOAD EQ PUSH2 0x242E JUMPI PUSH1 0x2 PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x247A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08185CDCDA59DB9959081859D95B9D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID 0xB1 0x4E 0xAF 0xE9 XOR 0xED 0x2E 0xBE COINBASE SHR 0xA6 0xD1 SHR RETURNDATACOPY CREATE2 0xC8 CALLER SIGNEXTEND CREATE SWAP8 SWAP16 LOG0 CODESIZE 0x4E CREATE CALLCODE PUSH12 0x8ED7B50FBF360894A13BA1A3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCA26469706673582212205C SLT KECCAK256 CALLCODE 0xBB EXTCODESIZE 0xA9 0xB8 0xC9 MSIZE PUSH10 0x727418D2CCFD264A4172 SWAP12 SWAP7 0xA5 0x4B ADD PUSH7 0x6B4BE81D4B6473 PUSH16 0x6C634300081100330000000000000000 ","sourceMap":"378:9582:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;-1:-1:-1;;;;;378:9582:12;;;;;;:::i;:::-;;;;1429:39;378:9582;;;;;;;1429:39;;378:9582;1429:39;;;:::i;:::-;;378:9582;;1429:39;;;378:9582;;1429:39;;378:9582;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:103:6;;;;;:::i;:::-;378:9582:12;;5260:12;;;378:9582;;;;;;;;;;5381:62;378:9582;5381:12;378:9582;;;;;971:66:2;;;;;;;;;5381:62:12;;5427:4;5407:10;5381:62;;;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;;5381:62;;;;;;;;;;;5360:132;5381:62;;;;;378:9582;5360:132;;:::i;:::-;5520:13;378:9582;5520:13;;;;:::i;:::-;;1787:1:6;378:9582:12;;;5566:5;378:9582;;;;;5407:10;;-1:-1:-1;;;;;378:9582:12;;;;;;;;5627:16;;;;1787:1:6;378:9582:12;;;;;;;5665:16;;378:9582;5665:16;;378:9582;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5703:15;;;1787:1:6;378:9582:12;5739:14;;378:9582;;-1:-1:-1;;378:9582:12;;;;;;5793:112;;378:9582;;;;5920:42;378:9582;;;;;;5407:10;5920:42;;378:9582;2065:22:6;1787:1;378:9582:12;;5793:112;5844:27;;378:9582;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;5793:112;378:9582;;;;;;;;;;;;;;;5793:112;;;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;5381:62;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;378:9582;;971:66:2;378:9582:12;;971:66:2;;;;378:9582:12;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4250:6;378:9582;;4242:73;378:9582;4250:30;378:9582;;;4250:30;378:9582;;4242:73;:::i;:::-;378:9582;;;;;;;;4334:10;378:9582;;;;;;4334:30;378:9582;;;;;4325:92;378:9582;;;;;;4333:46;4325:92;:::i;:::-;4490:21;4486:210;;378:9582;;;;-1:-1:-1;;;;;;;;;;;378:9582:12;;;4250:30;378:9582;;;;4334:10;378:9582;;4778:41;378:9582;;;4778:41;;;:::i;:::-;378:9582;;;;4829:21;;378:9582;;;;;;;;;;;;;;4882:25;378:9582;;;;;;1787:1:6;378:9582:12;;;;4966:63;378:9582;;4486:210;4552:12;378:9582;;;-1:-1:-1;;;4552:66:12;;-1:-1:-1;;;;;378:9582:12;;;;4552:66;;;378:9582;;;4593:4;378:9582;;;;;;;;;;;;;;4552:66;;;;378:9582;4552:66;;378:9582;;;4552:66;;;;;;;;4527:158;4250:30;4552:66;-1:-1:-1;;;;;;;;;;;4552:66:12;;;;;;;;4486:210;4527:158;;:::i;:::-;4486:210;;;;;;;;4552:66;;;;;;;;;;;;;;:::i;:::-;;;;;378:9582;;971:66:2;378:9582:12;;971:66:2;;;;378:9582:12;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;;:::i;:::-;;;;;;;;;3301:14:4;3347:34;;;;;;378:9582:12;3346:108:4;;;;378:9582:12;;;;-1:-1:-1;;;378:9582:12;;3551:1:4;378:9582:12;;;;3562:65:4;;378:9582:12;;;;;5366:69:4;378:9582:12;;;;;5366:69:4;;;:::i;:::-;;;;:::i;:::-;;:::i;:::-;3551:1;2065:22:6;1787:1;-1:-1:-1;;;;;378:9582:12;;2402:10;;378:9582;2394:18;378:9582;;;2394:18;378:9582;;;;;;;;2422:47;378:9582;;;2422:47;378:9582;3647:99:4;;378:9582:12;;;3647:99:4;-1:-1:-1;;378:9582:12;;;;3551:1:4;378:9582:12;;3721:14:4;;378:9582:12;;3721:14:4;3647:99;;378:9582:12;;;3562:65:4;-1:-1:-1;;378:9582:12;;;;;3562:65:4;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;3346:108:4;3426:4;;1713:19:8;:23;3387:66:4;;3346:108;3387:66;378:9582:12;3452:1:4;378:9582:12;;;3436:17:4;3346:108;;3347:34;378:9582:12;3380:1:4;378:9582:12;;;3365:16:4;3347:34;;378:9582:12;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3274:6;378:9582;;3266:73;378:9582;3274:30;378:9582;;;3274:30;378:9582;;3266:73;:::i;:::-;3369:10;378:9582;;3358:10;378:9582;;;;;;3358:35;378:9582;;;;;3349:97;378:9582;;;;;;3357:51;3349:97;:::i;:::-;3519:21;3515:215;;378:9582;3369:10;;;;3274:30;-1:-1:-1;;;;;;;;;;;3369:10:12;;;378:9582;;3358:10;378:9582;;3817:41;378:9582;;;3817:41;;;:::i;:::-;378:9582;;;;3868:21;;378:9582;;;;;;;;;;;;;;3921:25;378:9582;;;;;;1787:1:6;378:9582:12;;;;3369:10;4005:68;;378:9582;;3515:215;3581:12;378:9582;;;-1:-1:-1;;;3581:71:12;;3369:10;3581:71;;;378:9582;;;3627:4;378:9582;;;;;;;;;;;;;;;3581:71;;;;378:9582;3581:71;;378:9582;;;;;3581:71;;;;;;;;3556:163;3274:30;3581:71;-1:-1:-1;;;;;;;;;;;3581:71:12;;;;;;;3556:163;;:::i;:::-;3515:215;;;;;;;3581:71;;;;;;;;;;;;;;:::i;:::-;;;;;378:9582;;971:66:2;378:9582:12;;971:66:2;;;;378:9582:12;;;;;;;;;;;;;;;;;;;6067:10;;378:9582;;6060:6;378:9582;;;6060:27;378:9582;;;6060:27;378:9582;;;;;;;;6142:5;378:9582;;;;;6174:11;;;;378:9582;;;;;;;6174:11;378:9582;;;;;;;6067:10;378:9582;;6060:6;378:9582;;;;;;6248:37;6060:27;6286:13;;378:9582;;;;;;;;;;;;;;6339:18;;;;378:9582;6339:18;;;6067:10;-1:-1:-1;;;;;378:9582:12;;;;;;;;;;;;;;6067:10;6429:33;;;;;378:9582;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;-1:-1:-1;378:9582:12;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6635:5;378:9582;;;;;;;;;;;;;6667:18;6659:63;6667:18;;;;378:9582;;6689:10;6667:32;6659:63;:::i;:::-;378:9582;;;;;;;6740:6;378:9582;;;6740:35;378:9582;;;6740:35;378:9582;;;;;6826:35;;;6876:10;6892:24;6876:10;6892:24;;378:9582;;;6871:223;6888:35;;;;;;6871:223;7116:23;;;;;;;;;7112:103;;6871:223;6689:10;;;7238:63;;;;;378:9582;;7112:103;7155:49;;;:::i;:::-;7112:103;;;;6925:3;6948:27;;;;;;:::i;:::-;378:9582;;;;;;;6948:49;6944:140;;6925:3;;;:::i;:::-;6876:10;;6944:140;-1:-1:-1;7017:29:12;;-1:-1:-1;7064:5:12;;-1:-1:-1;7064:5:12;;-1:-1:-1;7064:5:12;;;;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:20;378:9582;;;-1:-1:-1;;;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:37;378:9582;;;;;;;;;;;;;;;;;1474:37;;;;378:9582;;1474:37;;;;378:9582;1474:37;;378:9582;1474:37;;;:::i;:::-;;;;;378:9582;1474:37;;378:9582;1474:37;;;378:9582;;1474:37;;378:9582;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1474:37;378:9582;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;-1:-1:-1;;;378:9582:12;;1474:37;378:9582;;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;7468:5;378:9582;;;;;;;;;;;;;7492:63;7500:18;;;;378:9582;;7522:10;7500:32;7492:63;:::i;:::-;7573:11;;;378:9582;;;;;7573:11;378:9582;;;;;7573:34;;;:74;;;;;378:9582;;;;;7805:14;;;378:9582;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7945:12;378:9582;;7979:12;;378:9582;;;;;971:66:2;;;;;;;;7945:47:12;;7522:10;7945:47;;;378:9582;;;;;7945:47;;;;;;;;7924:117;378:9582;7945:47;8057:34;7945:47;;;;;;7924:117;;:::i;:::-;378:9582;;;;;;;;;;;:::i;:::-;8057:34;;;378:9582;;7945:47;;;;;;;;;;;;;;:::i;:::-;;;;;378:9582;;971:66:2;378:9582:12;;971:66:2;;;;378:9582:12;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;7573:74;7626:21;7611:36;;;7573:74;;;378:9582;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;1571:26;378:9582;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:5;-1:-1:-1;;;;;378:9582:12;2324:4:5;2316:23;378:9582:12;;;;;-1:-1:-1;;;;;;;;;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:5;378:9582:12;;;;;1873:80:5;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;378:9582:12;;;;;1971:30:5;1963:87;:::i;:::-;378:9582:12;9776:5;378:9582;;9785:10;9776:19;378:9582;;971:66:2;378:9582:12;;;;;;3330:17:2;;;;;;;;:::i;:::-;378:9582:12;;3232:526:2;378:9582:12;;-1:-1:-1;;;3383:63:2;;;;378:9582:12;;;;;;;3383:63:2;378:9582:12;3383:63:2;378:9582:12;;3383:63:2;;;;;;;3232:526;-1:-1:-1;3379:302:2;;378:9582:12;;-1:-1:-1;;;3610:56:2;;;;;971:66;;;;378:9582:12;971:66:2;;378:9582:12;971:66:2;378:9582:12;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;3610:56;3379:302;3496:28;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;378:9582:12;;2523:15:2;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;378:9582:12;;2519:123:2;7318:69:8;378:9582:12;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;7276:25:8;;;;;;;;;378:9582:12;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;7318:69:8;:::i;:::-;;2519:123:2;;;;;;378:9582:12;-1:-1:-1;378:9582:12;;-1:-1:-1;7318:69:8;:::i;2523:28:2:-;;378:9582:12;2523:28:2;;971:66;378:9582:12;;-1:-1:-1;;;971:66:2;;;;;;;;;378:9582:12;971:66:2;;378:9582:12;971:66:2;378:9582:12;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;378:9582:12;;;3383:63:2;;;;;378:9582:12;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1898:6:5;378:9582:12;;1873:80:5;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;378:9582:12;;;;;1971:30:5;1963:87;:::i;:::-;378:9582:12;9776:5;378:9582;;9785:10;9776:19;378:9582;;;;;;;;;;;;;;;;;;;;;;;;971:66:2;378:9582:12;;;;;;3330:17:2;;;;;;;;;;:::i;3232:526::-;378:9582:12;;;;;;;;;;971:66:2;;;3383:63;;;;;;;;;;;;;;3232:526;-1:-1:-1;3379:302:2;;378:9582:12;;-1:-1:-1;;;3610:56:2;;;;;971:66;;;;;;;378:9582:12;971:66:2;378:9582:12;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;;;;378:9582:12;;;2523:15:2;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;;378:9582:12;;2519:123:2;378:9582:12;7318:69:8;378:9582:12;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;7276:25:8;;;;;;378:9582:12;;;;;;;;;:::i;7318:69:8:-;;2519:123:2;;;;;;;;2523:28;;;;;971:66;378:9582:12;;-1:-1:-1;;;971:66:2;;;;;;;;;;;;378:9582:12;971:66:2;378:9582:12;;;971:66:2;-1:-1:-1;;;971:66:2;;;;;;;3383:63;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;3383:63;;;;971:66;378:9582:12;;;3383:63:2;;;;;378:9582:12;-1:-1:-1;;;378:9582:12;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;517:37;378:9582;;;-1:-1:-1;;;;;378:9582:12;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2471:103:6;;;:::i;:::-;2536:1;8346:10:12;;378:9582;;;;8335:10;378:9582;;;;;;;;8335:35;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8437:6;378:9582;;;;;;;;8437:40;378:9582;;;;;;;;;;;;;;;8346:10;378:9582;;8335:10;378:9582;;;;;;8689:12;;;-1:-1:-1;;8772:12:12;378:9582;;;-1:-1:-1;;;8772:62:12;;8346:10;8772:62;;;378:9582;;;8818:4;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;8772:62;;;;;;;;;;8747:144;8772:62;;;;;8747:144;;:::i;:::-;9311:13;378:9582;9311:13;;;;:::i;:::-;;1787:1:6;378:9582:12;;;9357:5;378:9582;;;;;;-1:-1:-1;;;;;378:9582:12;;8346:10;378:9582;;;;;;;9418:21;;;;378:9582;;;;;;;9465:16;;;;1787:1:6;378:9582:12;9503:16;;378:9582;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;9629:42;378:9582;;;;;;;;9577:14;378:9582;;;;;;;;;;;;;;;;;;;;;;;9541:15;;1787:1:6;9577:14:12;378:9582;;-1:-1:-1;;378:9582:12;;;;;;;;;8346:10;;9629:42;9686:35;;;;2065:22:6;1787:1;378:9582:12;;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9629:42;378:9582;;;;;;;9577:14;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;8772:62;;;;;;;;;;;;;;:::i;:::-;;;;;378:9582;;971:66:2;378:9582:12;;971:66:2;;;;8685:591:12;378:9582;;;8912:25;;378:9582;;;;;;;8912:25;;-1:-1:-1;8912:25:12;;;;-1:-1:-1;8912:44:12;378:9582;;;;;;;;;;;;9017:46;:95;;;;;;9006:106;378:9582;;;;;;;;;;;;;1787:1:6;8685:591:12;;378:9582;-1:-1:-1;;;378:9582:12;;;;;;;;9017:95;378:9582;;;;;9017:95;;;8908:368;378:9582;;-1:-1:-1;;;9209:56:12;;;;;378:9582;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;9209:56;378:9582;-1:-1:-1;378:9582:12;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:10;;;;;378:9582;;2634:6;378:9582;;;2634:27;378:9582;;;2634:27;378:9582;;;;2641:10;378:9582;;2634:6;378:9582;;;;;2641:10;;-1:-1:-1;;;;;378:9582:12;;;;;;;;2806:17;;;;;378:9582;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;2634:27;2845:17;;378:9582;;;;;;;;;;;;2901:3;378:9582;2879:19;;1787:1:6;2938:10:12;3001:27;;2934:136;2806:17;;;2934:136;378:9582;;;;;;;2641:10;;3085:38;;378:9582;;;;;;;:::i;2982:3::-;378:9582;;2950:30;;;;;378:9582;2982:3;378:9582;;;;;;;;;;;;;;;;;;;;;;;;;;;2982:3;:::i;:::-;2938:10;;;;;2950:30;;;378:9582;;;;;;;;;;;;;;;;;-1:-1:-1;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;378:9582:12;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;378:9582:12;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;378:9582:12;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;378:9582:12;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;378:9582:12;;;;-1:-1:-1;378:9582:12;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;1699:281:2;1713:19:8;;:23;378:9582:12;;-1:-1:-1;;;;;;;;;;;378:9582:12;;-1:-1:-1;;;;;;378:9582:12;-1:-1:-1;;;;;378:9582:12;;;;;;;;;1699:281:2:o;378:9582:12:-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;7682:628:8;;;;7886:418;;;378:9582:12;;;7917:22:8;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;378:9582:12;;8212:17:8;:::o;378:9582:12:-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;7886:418:8;378:9582:12;;;;-1:-1:-1;8991:21:8;:17;;9163:142;;;;;;;8987:379;378:9582:12;;-1:-1:-1;;;9335:20:8;;378:9582:12;9335:20:8;;;378:9582:12;;;;;;;;;;;:::i;:::-;9335:20:8;;;378:9582:12;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;378:9582:12;;-1:-1:-1;378:9582:12;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;378:9582:12;;;;;-1:-1:-1;;378:9582:12;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;-1:-1:-1;378:9582:12;;-1:-1:-1;378:9582:12;;;-1:-1:-1;378:9582:12;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;;;;;;;;;2580:287:6;1830:1;2712:7;378:9582:12;2712:19:6;1830:1;;;2712:7;1787:1;2580:287::o;1830:1::-;378:9582:12;;-1:-1:-1;;;1830:1:6;;;;;;;;;;;378:9582:12;1830:1:6;378:9582:12;;;1830:1:6;;;;378:9582:12;;;;:::o;:::-;;;-1:-1:-1;;;378:9582:12;;;;;;;;;;;;-1:-1:-1;;;378:9582:12;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1902800","executionCost":"infinite","totalCost":"infinite"},"external":{"agents(address)":"infinite","assignTask(uint256)":"57080","completeTask(uint256,bytes)":"infinite","createTask(bytes32,string,uint256,address[])":"infinite","executeAgentTask(address,bytes32,string,uint256)":"infinite","initialize(address)":"infinite","owner()":"2493","paymentToken()":"2339","proxiableUUID()":"infinite","registerAgent(string,bytes32[])":"infinite","registerAgentForOtherUser(address,address,uint256)":"infinite","registerAgentForUser(address,uint256)":"infinite","requestCollaboration(uint256,address)":"infinite","taskCounter()":"2406","tasks(uint256)":"infinite","upgradeTo(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"agents(address)":"fd66091e","assignTask(uint256)":"b8573185","completeTask(uint256,bytes)":"7a2ccd35","createTask(bytes32,string,uint256,address[])":"de2ddc59","executeAgentTask(address,bytes32,string,uint256)":"0cfb932f","initialize(address)":"c4d66de8","owner()":"8da5cb5b","paymentToken()":"3013ce29","proxiableUUID()":"52d1902d","registerAgent(string,bytes32[])":"01730516","registerAgentForOtherUser(address,address,uint256)":"d174c3e2","registerAgentForUser(address,uint256)":"c30c4476","requestCollaboration(uint256,address)":"b053cef3","taskCounter()":"58671730","tasks(uint256)":"8d977672","upgradeTo(address)":"3659cfe6","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agentAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"AgentRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"}],\"name\":\"AgentRegisteredForUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requestingAgent\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAgent\",\"type\":\"address\"}],\"name\":\"CollaborationRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agent\",\"type\":\"address\"}],\"name\":\"TaskAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"TaskCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"taskType\",\"type\":\"bytes32\"}],\"name\":\"TaskCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"agents\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"agentAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"reputation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"}],\"name\":\"assignTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"completeTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_taskType\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_taskData\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_payment\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_collaboratingAgents\",\"type\":\"address[]\"}],\"name\":\"createTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_taskType\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_taskData\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_payment\",\"type\":\"uint256\"}],\"name\":\"executeAgentTask\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadata\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_supportedTaskTypes\",\"type\":\"bytes32[]\"}],\"name\":\"registerAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_paymentAllowance\",\"type\":\"uint256\"}],\"name\":\"registerAgentForOtherUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_paymentAllowance\",\"type\":\"uint256\"}],\"name\":\"registerAgentForUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_taskId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collaboratorAgent\",\"type\":\"address\"}],\"name\":\"requestCollaboration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taskCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tasks\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assignedAgent\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"taskType\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"taskData\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"internalType\":\"enum WWANProtocol.TaskStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WWANProtocol.sol\":\"WWANProtocol\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\\n *\\n * _Available since v4.8.3._\\n */\\ninterface IERC1967Upgradeable {\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n}\\n\",\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822ProxiableUpgradeable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeaconUpgradeable.sol\\\";\\nimport \\\"../../interfaces/IERC1967Upgradeable.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\nimport \\\"../../utils/StorageSlotUpgradeable.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\\n    function __ERC1967Upgrade_init() internal onlyInitializing {\\n    }\\n\\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\\n    }\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(AddressUpgradeable.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(AddressUpgradeable.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\\n        }\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeaconUpgradeable {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/draft-IERC1822Upgradeable.sol\\\";\\nimport \\\"../ERC1967/ERC1967UpgradeUpgradeable.sol\\\";\\nimport \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n *\\n * _Available since v4.1._\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        require(address(this) != __self, \\\"Function must be called through delegatecall\\\");\\n        require(_getImplementation() == __self, \\\"Function must be called through active proxy\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        require(address(this) == __self, \\\"UUPSUpgradeable: must not be called through delegatecall\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\\n        return _IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data, true);\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeTo} and {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\\n * _Available since v4.9 for `string`, `bytes`._\\n */\\nlibrary StorageSlotUpgradeable {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\"},\"contracts/WWANProtocol.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\n\\ncontract WWANProtocol is Initializable, UUPSUpgradeable, ReentrancyGuardUpgradeable {\\n    // State variables\\n    address public owner;\\n    IERC20Upgradeable public paymentToken;\\n    \\n    struct Agent {\\n        address agentAddress;\\n        string metadata;     // IPFS hash containing agent details\\n        bool isActive;\\n        uint256 reputation;\\n        mapping(bytes32 => bool) supportedTaskTypes;\\n    }\\n\\n    struct Task {\\n        address creator;\\n        address assignedAgent;\\n        bytes32 taskType;\\n        string taskData;     // IPFS hash containing task details\\n        uint256 payment;\\n        TaskStatus status;\\n        bytes signature;     // EigenLayer AVS signature\\n        address[] collaboratingAgents; // For multi-agent tasks\\n    }\\n\\n    struct UserAgentRegistry {\\n        address[] activeAgents;\\n        mapping(address => bool) isRegistered;\\n        mapping(address => uint256) paymentAllowance;\\n    }\\n\\n    enum TaskStatus {\\n        Created,\\n        Assigned,\\n        InProgress,\\n        Completed,\\n        Disputed\\n    }\\n\\n    mapping(address => Agent) public agents;\\n    mapping(uint256 => Task) public tasks;\\n    mapping(address => UserAgentRegistry) userAgents;\\n    uint256 public taskCounter;\\n\\n    // Events\\n    event AgentRegistered(address indexed agentAddress, string metadata);\\n    event TaskCreated(uint256 indexed taskId, address indexed creator, bytes32 taskType);\\n    event TaskAssigned(uint256 indexed taskId, address indexed agent);\\n    event TaskCompleted(uint256 indexed taskId, bytes signature);\\n    event AgentRegisteredForUser(address indexed user, address indexed agent, uint256 allowance);\\n    event CollaborationRequested(uint256 indexed taskId, address indexed requestingAgent, address indexed targetAgent);\\n    \\n    /// @custom:oz-upgrades-unsafe-allow constructor\\n    constructor() {\\n        _disableInitializers();\\n    }\\n\\n    function initialize(address _paymentToken) public initializer {\\n        __UUPSUpgradeable_init();\\n        __ReentrancyGuard_init();\\n        owner = msg.sender;\\n        paymentToken = IERC20Upgradeable(_paymentToken);\\n    }\\n\\n    // Agent Registration\\n    function registerAgent(string memory _metadata, bytes32[] memory _supportedTaskTypes) \\n        public \\n    {\\n        require(!agents[msg.sender].isActive, \\\"Agent already registered\\\");\\n        \\n        Agent storage newAgent = agents[msg.sender];\\n        newAgent.agentAddress = msg.sender;\\n        newAgent.metadata = _metadata;\\n        newAgent.isActive = true;\\n        newAgent.reputation = 100; // Base reputation\\n\\n        for(uint i = 0; i < _supportedTaskTypes.length; i++) {\\n            newAgent.supportedTaskTypes[_supportedTaskTypes[i]] = true;\\n        }\\n\\n        emit AgentRegistered(msg.sender, _metadata);\\n    }\\n\\n    // Register agent for a user\\n    function registerAgentForUser(address _agentAddress, uint256 _paymentAllowance) public {\\n        require(agents[_agentAddress].isActive, \\\"Agent not registered in system\\\");\\n        require(!userAgents[msg.sender].isRegistered[_agentAddress], \\\"Agent already registered for user\\\");\\n        \\n        // Transfer payment allowance to contract\\n        if (_paymentAllowance > 0) {\\n            require(\\n                paymentToken.transferFrom(msg.sender, address(this), _paymentAllowance),\\n                \\\"Payment allowance transfer failed\\\"\\n            );\\n        }\\n        \\n        UserAgentRegistry storage registry = userAgents[msg.sender];\\n        registry.activeAgents.push(_agentAddress);\\n        registry.isRegistered[_agentAddress] = true;\\n        registry.paymentAllowance[_agentAddress] = _paymentAllowance;\\n        \\n        emit AgentRegisteredForUser(msg.sender, _agentAddress, _paymentAllowance);\\n    }\\n\\n    // Register agent for another user\\n    function registerAgentForOtherUser(address _user, address _agentAddress, uint256 _paymentAllowance) public {\\n        require(agents[_agentAddress].isActive, \\\"Agent not registered in system\\\");\\n        require(!userAgents[_user].isRegistered[_agentAddress], \\\"Agent already registered for user\\\");\\n        \\n        // Transfer payment allowance to contract\\n        if (_paymentAllowance > 0) {\\n            require(\\n                paymentToken.transferFrom(_user, address(this), _paymentAllowance),\\n                \\\"Payment allowance transfer failed\\\"\\n            );\\n        }\\n        \\n        UserAgentRegistry storage registry = userAgents[_user];\\n        registry.activeAgents.push(_agentAddress);\\n        registry.isRegistered[_agentAddress] = true;\\n        registry.paymentAllowance[_agentAddress] = _paymentAllowance;\\n        \\n        emit AgentRegisteredForUser(_user, _agentAddress, _paymentAllowance);\\n    }\\n\\n    // Task Creation\\n    function createTask(\\n        bytes32 _taskType,\\n        string memory _taskData,\\n        uint256 _payment,\\n        address[] memory _collaboratingAgents\\n    ) public nonReentrant {\\n        require(_payment > 0, \\\"Payment must be positive\\\");\\n        \\n        // Transfer payment to contract\\n        require(\\n            paymentToken.transferFrom(msg.sender, address(this), _payment),\\n            \\\"Payment transfer failed\\\"\\n        );\\n\\n        uint256 taskId = taskCounter++;\\n        Task storage newTask = tasks[taskId];\\n        newTask.creator = msg.sender;\\n        newTask.taskType = _taskType;\\n        newTask.taskData = _taskData;\\n        newTask.payment = _payment;\\n        newTask.status = TaskStatus.Created;\\n        \\n        if (_collaboratingAgents.length > 0) {\\n            newTask.collaboratingAgents = _collaboratingAgents;\\n        }\\n\\n        emit TaskCreated(taskId, msg.sender, _taskType);\\n    }\\n\\n    // Task Assignment\\n    function assignTask(uint256 _taskId) public {\\n        require(agents[msg.sender].isActive, \\\"Agent not registered\\\");\\n        Task storage task = tasks[_taskId];\\n        require(task.status == TaskStatus.Created, \\\"Task not available\\\");\\n        require(agents[msg.sender].supportedTaskTypes[task.taskType], \\\"Task type not supported\\\");\\n\\n        task.assignedAgent = msg.sender;\\n        task.status = TaskStatus.Assigned;\\n\\n        emit TaskAssigned(_taskId, msg.sender);\\n    }\\n\\n    // Request collaboration with another agent\\n    function requestCollaboration(uint256 _taskId, address _collaboratorAgent) public {\\n        Task storage task = tasks[_taskId];\\n        require(task.assignedAgent == msg.sender, \\\"Not assigned agent\\\");\\n        require(agents[_collaboratorAgent].isActive, \\\"Collaborator not registered\\\");\\n        \\n        bool isAlreadyCollaborating = false;\\n        for (uint i = 0; i < task.collaboratingAgents.length; i++) {\\n            if (task.collaboratingAgents[i] == _collaboratorAgent) {\\n                isAlreadyCollaborating = true;\\n                break;\\n            }\\n        }\\n        \\n        if (!isAlreadyCollaborating) {\\n            task.collaboratingAgents.push(_collaboratorAgent);\\n        }\\n        \\n        emit CollaborationRequested(_taskId, msg.sender, _collaboratorAgent);\\n    }\\n\\n    // Task Completion with EigenLayer AVS signature\\n    function completeTask(uint256 _taskId, bytes memory _signature) public {\\n        Task storage task = tasks[_taskId];\\n        require(task.assignedAgent == msg.sender, \\\"Not assigned agent\\\");\\n        require(task.status == TaskStatus.Assigned || task.status == TaskStatus.InProgress, \\\"Invalid task status\\\");\\n\\n        // Here you would verify the EigenLayer AVS signature\\n        // Implementation depends on EigenLayer integration\\n\\n        task.signature = _signature;\\n        task.status = TaskStatus.Completed;\\n\\n        // Transfer payment to agent\\n        require(\\n            paymentToken.transfer(msg.sender, task.payment),\\n            \\\"Payment transfer failed\\\"\\n        );\\n\\n        emit TaskCompleted(_taskId, _signature);\\n    }\\n\\n    // Execute task via registered agent\\n    function executeAgentTask(\\n        address _agentAddress, \\n        bytes32 _taskType, \\n        string memory _taskData, \\n        uint256 _payment\\n    ) public nonReentrant {\\n        require(userAgents[msg.sender].isRegistered[_agentAddress], \\\"Agent not registered for user\\\");\\n        require(agents[_agentAddress].supportedTaskTypes[_taskType], \\\"Task type not supported by agent\\\");\\n        \\n        UserAgentRegistry storage registry = userAgents[msg.sender];\\n        \\n        // Check if we need to use allowance or direct payment\\n        if (_payment > 0) {\\n            // Direct payment\\n            require(\\n                paymentToken.transferFrom(msg.sender, address(this), _payment),\\n                \\\"Payment transfer failed\\\"\\n            );\\n        } else if (registry.paymentAllowance[_agentAddress] > 0) {\\n            // Use from allowance\\n            _payment = registry.paymentAllowance[_agentAddress] > 100 ? 100 : registry.paymentAllowance[_agentAddress];\\n            registry.paymentAllowance[_agentAddress] -= _payment;\\n        } else {\\n            revert(\\\"No payment provided and no allowance available\\\");\\n        }\\n        \\n        uint256 taskId = taskCounter++;\\n        Task storage newTask = tasks[taskId];\\n        newTask.creator = msg.sender;\\n        newTask.assignedAgent = _agentAddress;\\n        newTask.taskType = _taskType;\\n        newTask.taskData = _taskData;\\n        newTask.payment = _payment;\\n        newTask.status = TaskStatus.Assigned;\\n\\n        emit TaskCreated(taskId, msg.sender, _taskType);\\n        emit TaskAssigned(taskId, _agentAddress);\\n    }\\n\\n    modifier onlyUpgrader() {\\n        require(owner == msg.sender, \\\"Unauthorized Access\\\");\\n        _;\\n    }\\n\\n    function _authorizeUpgrade(address newImplementation)\\n        internal\\n        onlyUpgrader\\n        override\\n    {}\\n}\",\"keccak256\":\"0xb643e2497547c43a08d5393830894b0e3b7e86fa4073b4c8e3cb984d60084206\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":371,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"_initialized","offset":0,"slot":"0","type":"t_uint8"},{"astId":374,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"_initializing","offset":1,"slot":"0","type":"t_bool"},{"astId":353,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"__gap","offset":0,"slot":"1","type":"t_array(t_uint256)50_storage"},{"astId":668,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"__gap","offset":0,"slot":"51","type":"t_array(t_uint256)50_storage"},{"astId":683,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"_status","offset":0,"slot":"101","type":"t_uint256"},{"astId":752,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"__gap","offset":0,"slot":"102","type":"t_array(t_uint256)49_storage"},{"astId":1412,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"owner","offset":0,"slot":"151","type":"t_address"},{"astId":1415,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"paymentToken","offset":0,"slot":"152","type":"t_contract(IERC20Upgradeable)831"},{"astId":1470,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"agents","offset":0,"slot":"153","type":"t_mapping(t_address,t_struct(Agent)1428_storage)"},{"astId":1475,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"tasks","offset":0,"slot":"154","type":"t_mapping(t_uint256,t_struct(Task)1447_storage)"},{"astId":1480,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"userAgents","offset":0,"slot":"155","type":"t_mapping(t_address,t_struct(UserAgentRegistry)1459_storage)"},{"astId":1482,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"taskCounter","offset":0,"slot":"156","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_uint256)49_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[49]","numberOfBytes":"1568"},"t_array(t_uint256)50_storage":{"base":"t_uint256","encoding":"inplace","label":"uint256[50]","numberOfBytes":"1600"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_contract(IERC20Upgradeable)831":{"encoding":"inplace","label":"contract IERC20Upgradeable","numberOfBytes":"20"},"t_enum(TaskStatus)1465":{"encoding":"inplace","label":"enum WWANProtocol.TaskStatus","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Agent)1428_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct WWANProtocol.Agent)","numberOfBytes":"32","value":"t_struct(Agent)1428_storage"},"t_mapping(t_address,t_struct(UserAgentRegistry)1459_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct WWANProtocol.UserAgentRegistry)","numberOfBytes":"32","value":"t_struct(UserAgentRegistry)1459_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_bool)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_uint256,t_struct(Task)1447_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct WWANProtocol.Task)","numberOfBytes":"32","value":"t_struct(Task)1447_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Agent)1428_storage":{"encoding":"inplace","label":"struct WWANProtocol.Agent","members":[{"astId":1417,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"agentAddress","offset":0,"slot":"0","type":"t_address"},{"astId":1419,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"metadata","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1421,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"isActive","offset":0,"slot":"2","type":"t_bool"},{"astId":1423,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"reputation","offset":0,"slot":"3","type":"t_uint256"},{"astId":1427,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"supportedTaskTypes","offset":0,"slot":"4","type":"t_mapping(t_bytes32,t_bool)"}],"numberOfBytes":"160"},"t_struct(Task)1447_storage":{"encoding":"inplace","label":"struct WWANProtocol.Task","members":[{"astId":1430,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"creator","offset":0,"slot":"0","type":"t_address"},{"astId":1432,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"assignedAgent","offset":0,"slot":"1","type":"t_address"},{"astId":1434,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"taskType","offset":0,"slot":"2","type":"t_bytes32"},{"astId":1436,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"taskData","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1438,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"payment","offset":0,"slot":"4","type":"t_uint256"},{"astId":1441,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"status","offset":0,"slot":"5","type":"t_enum(TaskStatus)1465"},{"astId":1443,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"signature","offset":0,"slot":"6","type":"t_bytes_storage"},{"astId":1446,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"collaboratingAgents","offset":0,"slot":"7","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"256"},"t_struct(UserAgentRegistry)1459_storage":{"encoding":"inplace","label":"struct WWANProtocol.UserAgentRegistry","members":[{"astId":1450,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"activeAgents","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":1454,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"isRegistered","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"},{"astId":1458,"contract":"contracts/WWANProtocol.sol:WWANProtocol","label":"paymentAllowance","offset":0,"slot":"2","type":"t_mapping(t_address,t_uint256)"}],"numberOfBytes":"96"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}